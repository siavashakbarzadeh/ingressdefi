{"version":3,"sources":["./src/app/common/loader/loader.component.ts","./src/app/common/loader/loader.component.html","./src/app/common/loader/loader.module.ts","./src/app/pages/defi/staking/staking.component.ts","./src/app/pages/defi/staking/staking.component.html","./src/app/pages/defi/staking/staking.module.ts"],"names":[],"mappings":"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","file":"defi-staking-staking-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<span class=\"waveload\">\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n    <span class=\"dot\"></span>\n</span>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoaderComponent } from \"./loader.component\";\n\n@NgModule({\n  declarations: [LoaderComponent],\n  imports: [CommonModule],\n  exports: [LoaderComponent],\n  entryComponents: [LoaderComponent],\n})\nexport class LoaderModule {}\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { DataService } from \"src/app/common/services/api/data.service\";\nimport { StakeService } from \"src/app/common/services/metamask/stake/stake.service\";\nimport { MetamaskService } from \"src/app/common/services/metamask/common/metamask.service\";\nimport { CommonContractService } from \"src/app/common/services/metamask/common-contract/common-contract.service\";\nimport { Router } from \"@angular/router\";\n\ndeclare let window: any;\n\n@Component({\n  selector: 'app-staking',\n  templateUrl: './staking.component.html',\n  styleUrls: ['./staking.component.css']\n})\nexport class StakingComponent implements OnInit {\n\n stakingPairs = [];\n stakingPairsDatas = [];\n stakingPairSingleObj: any;\n isSingleStake = false;\n isgetPolledPairsLoading = true;\n\n constructor(\n   public dataService: DataService,\n   private stakeService: StakeService,\n   private metamaskService: MetamaskService,\n   private commonContractService: CommonContractService,\n   public changeDetectorRef: ChangeDetectorRef,\n   private router: Router\n   ) { }\n\n ngOnInit() {\n    this.getPolledPairs();\n }\n\n getPolledPairs() {\n    this.isgetPolledPairsLoading = true;\n    this.dataService.getRequest(\"farming/getPooledPairs\").subscribe((suc) => {\n      let responseData: any = suc;\n\n      if (responseData.status) {\n        this.stakingPairs = responseData.data;\n        this.metaCallCommonFunction();\n      }\n      this.isgetPolledPairsLoading = false;\n    });\n  }\n\n  metaCallCommonFunction() {\n    //  After Check\n\n    this.dataService.isMetaReady.subscribe((suc) => {\n      if (suc) {\n        this.metaFunctions();\n      }\n    });\n\n    //  Before Check\n    if (this.dataService.metaDeatails.isMetaLogin) {\n      this.metaFunctions();\n    }\n  }\n\n  metaFunctions() {\n    this.stakingPairs.map(async (item) => {\n      await this.getStakedAmount(item.poolId).then((suc) => {\n        item.staked_amount = suc;\n      });\n    });\n    this.changeDetectorRef.detectChanges();\n  }\n\n  async getStakedAmount(poolId) {\n    return this.stakeService\n      .GetStakedamount(poolId)\n      .then(async (suc) => {\n        if (suc.status) {\n          let staked_amount = await window.web3.utils.fromWei(\n            suc.amount.toString(),\n            \"ether\"\n          );\n          return staked_amount;\n        } else {\n          return 0.0;\n        }\n      })\n      .catch((err) => {\n        console.log(\"reward false\");\n      });\n  }\n\n  async stake(stakingPairObj) {\n    if (this.dataService.metaDeatails.isMetaLogin) {\n\n      let isChainId: any = await this.metamaskService.checkChainIdCall();\n      if (isChainId) {\n        this.stakingPairSingleObj = stakingPairObj;\n        this.isSingleStake = true;\n        this.changeDetectorRef.detectChanges();\n      }\n    } else {\n      this.dataService.showWalletList.emit(true);\n      return;\n    }\n  }\n\n}\n","<h3 class=\"section-title\">Staking</h3>\n<p class=\"text-center\">Stake token to earn new tokens. You can claim and unstake at any time. Rewards are calculated per block.</p>\n<div class=\"row\" *ngIf=\"!isSingleStake\">\n    <ng-container *ngIf=\"stakingPairs.length != 0 && !isgetPolledPairsLoading\">\n        <div class=\"col-lg-4\" *ngFor=\"let stakingPairObj of stakingPairs\">\n            <div class=\"card grey-cnt stake-cnt\">\n                <div class=\"card-body\">\n                    <div class=\"d-sm-flex justify-content-between mb-4\">\n                        <p>{{stakingPairObj.fromCurrency}}-{{stakingPairObj.toCurrency}}</p>\n                        <div class=\"d-flex align-items-start\">\n                            <img src=\"assets/images/eth-icon.png\" class=\"img-fluid mr-2\">\n                            <img src=\"assets/images/bnb-icon.png\" class=\"img-fluid\">\n                        </div>`\n                    </div>\n                    <p class=\"text-center\">Total Staking</p>\n                    <h3 class=\"text-center\">{{stakingPairObj.staked_amount| number: dataService.fixNumber}}</h3>\n                    <div class=\"w-100 mt-3\">\n                        <button class=\"btn default-btn btn-block\" (click)=\"stake(stakingPairObj)\">\n                            <ng-container *ngIf=\"!dataService.metaDeatails.isMetaLogin\">\n                                Unlock Wallet\n                            </ng-container>\n\n                            <ng-container *ngIf=\"dataService.metaDeatails.isMetaLogin\">\n                                Stake\n                            </ng-container>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"stakingPairs.length == 0 && !isgetPolledPairsLoading\">\n        <div class=\"mx-auto\">\n            Not yet Pool Id Created to stake\n        </div>\n    </ng-container>\n</div>\n<div class=\"row\">\n    <app-staking2 *ngIf=\"isSingleStake\" (goBack)=\"isSingleStake = !isSingleStake\" [stakingPair]=\"stakingPairSingleObj\">\n    </app-staking2>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { StakingComponent } from \"./staking.component\";\nimport { Staking2Module } from \"../staking2/staking2.module\";\nimport { LoaderModule } from \"src/app/common/loader/loader.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: StakingComponent,\n  },\n];\n\n@NgModule({\n  declarations: [StakingComponent],\n  imports: [\n    CommonModule,\n    Staking2Module,\n    LoaderModule,\n    RouterModule.forChild(routes),\n  ],\n})\nexport class StakingModule {}\n\n\n"],"sourceRoot":"webpack:///"}