{"version":3,"sources":["./src/app/pages/nft/create-item/create-item.component.ts","./src/app/pages/nft/create-item/create-item.component.html","./src/app/pages/nft/create-item/create-item.module.ts"],"names":[],"mappings":"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","file":"nft-create-item-create-item-module.js","sourcesContent":["import { Component, OnInit, ViewChild, TemplateRef  } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { DataService } from \"src/app/common/services/api/data.service\";\nimport { ToasterService } from \"src/app/common/toaster/toaster.service\";\nimport { NftService } from \"src/app/common/services/metamask/nft/nft.service\";\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\ndeclare let window: any;\n\n@Component({\n  selector: 'app-create-item',\n  templateUrl: './create-item.component.html',\n  styleUrls: ['./create-item.component.css']\n})\nexport class CreateItemComponent implements OnInit {\n  itemObj: any = {\n    item_image: ''\n  };\n  co_form: FormGroup;\n  submitted = false;\n  msubmitted = false;\n  upload = false;\n  fileerr = false;\n  itemArr: any;\n  pageKey: any;\n  currencies: any;\n  tabsingle = true;\n  saletype:String = 'fixed';\n  modalRef?: BsModalRef | null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private route: Router,\n    public service: DataService, \n    private toasterService: ToasterService, \n    private nftService: NftService, \n    private formBuilder: FormBuilder,\n    private modalService: BsModalService,\n    ) { }\n\n  ngOnInit() {\n    this.co_form = this.formBuilder.group({  \n        item_name: ['', Validators.required],\n        item_img: ['', Validators.required],\n        description: ['', Validators.required],\n        price: ['', Validators.required],\n        caddress:[\"\"],\n        /*properties: this.formBuilder.array([]),\n        stats: this.formBuilder.array([]),*/\n    });\n    this.itemObj.pagekey = this.activatedRoute.snapshot.queryParamMap.get('id');\n    var collectionId = decodeURIComponent(this.itemObj.pagekey);\n    this.pageKey = collectionId;\n    this.getCollection(collectionId);\n\n    \n  }\n\n  get f() {  return this.co_form.controls; }\n\n  changeTab(type) {\n    console.log(type, 'tab type');\n    this.tabsingle = (type == 'single') ? true : false; \n  }\n\n  saleType(val) {\n    console.log(val, 'sale');\n    this.saletype = val;\n    console.log(this.saletype, 'sale');\n  }\n\n  quantities() : FormArray {  \n    return this.co_form.get(\"properties\") as FormArray  \n  }  \n     \n  newQuantity(): FormGroup {  \n    return this.formBuilder.group({  \n      name: '',  \n      value: '',  \n    })  \n  }  \n     \n  addQuantity() {  \n    this.quantities().push(this.newQuantity());  \n  }  \n     \n  removeQuantity(i:number) {  \n    this.quantities().removeAt(i);  \n  }\n\n  quantities1() : FormArray {  \n    return this.co_form.get(\"stats\") as FormArray  \n  }  \n     \n  newQuantity1(): FormGroup {  \n    return this.formBuilder.group({  \n      name: '',  \n      value: '',  \n    })  \n  }  \n     \n  addQuantity1() {  \n    this.quantities1().push(this.newQuantity1());  \n  }  \n     \n  removeQuantity1(i:number) {  \n    this.quantities1().removeAt(i);  \n  }\n  \n  getCollection(collectionId: any) {\n    if(collectionId) {\n      this.service.postRequest('collection/findCollection', { id: collectionId }).subscribe((success) => {\n        let reponseData: any = success;\n        if (reponseData.status) {\n        } else {\n          this.toasterService.show(false, reponseData.msg);\n        }\n      });\n    } else {\n      this.toasterService.show(false, 'Something went wrong');\n      this.route.navigate(['collection']);\n    }\n  }\n\n  \n\n  onChanged(event: any) {\n    let reader = new FileReader();\n    const name = event.target.name;\n    const file = event.target.files[0];\n    let typeFile = event.target.files[0].type;\n    let file_size = event.target.files[0].size / 720 / 720;\n\n    if(typeFile != \"image/png\" && typeFile != \"image/jpg\" && typeFile != \"image/jpeg\") {\n      this.fileerr = true;\n      return;\n    }\n\n    if(file_size >= 2) {\n      this.fileerr = true;\n      return;\n    }\n\n    reader.onload = (e: any) => {\n      var img = new Image();\n      img.src = e.target.result;\n      this.itemObj.image = e.target.result;\n    }\n    this.fileerr = false;    \n    this.upload = true;    \n    reader.readAsDataURL(file); \n    this.itemObj.item_image = file;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    console.log('form submited', this.co_form.value);\n    if (this.co_form.invalid) {\n        return;\n    }\n    this.msubmitted = true;\n    let datas = this.co_form.value;\n    console.log(datas, 'datas')\n    const formData = new FormData();\n    if (datas.properties != undefined && datas.properties.length) {\n      console.log('yes properties');\n      var propaToS = JSON.stringify(Object.assign({}, datas.properties));\n      formData.append('properties', propaToS);\n    }\n\n    if (datas.stats != undefined && datas.stats.length) {\n      console.log('yes stats');\n      var StatsaToS = JSON.stringify(Object.assign({}, datas.stats));\n      formData.append('stats', StatsaToS);\n    }\n    this.itemObj.caddress = this.service.metaDeatails.account;\n    formData.append('collectionId', this.pageKey);\n    formData.append('name', this.itemObj.item_name);\n    formData.append('description', this.itemObj.description);\n    formData.append('external_link', this.itemObj.external_link);\n    formData.append('metadata', this.itemObj.metadata);\n    formData.append('content', this.itemObj.content);\n    formData.append('price', this.itemObj.price);\n    formData.append('objtype', (this.tabsingle == true) ? 'single' : 'multiple');\n    if(typeof this.itemObj.item_image['name'] != 'undefined' && typeof this.itemObj.item_image['name'] != undefined) {   \n      formData.append('item_img', this.itemObj.item_image);\n    } else {\n      formData.append('item_img', this.itemObj.item_image);\n    }\n    var add : any = this.service.metaDeatails.account;\n    this.itemObj.caddress = this.service.metaDeatails.account;\n\n    console.log(this.service.metaDeatails.account , \"++++ this.service.metaDeatails.account\")\n\n    formData.append('caddress',this.itemObj.caddress);\n\n    console.log(formData ,\"}}}}}}}} formData\")\n   // formData.append('caddress': this.service.metaDeatails.account );\n    console.log(\"this.service.metaDeatails.accountthis.service.metaDeatails.accountthis.service.metaDeatails.account\",this.service.metaDeatails.account)\n    //this.itemArr = formData;\n    //this.itemArr.push({'caddress':this.service.metaDeatails.account});\n    // this.itemArr.push({\"caddress\": this.itemObj.caddress});\n    //this.itemArr.caddress  =  this.service.metaDeatails.account; \n    \n    \n   \n    this.service.filePostRequest('collection/createItem', formData).subscribe((reqData: any) => {\n      console.log(reqData, 'reqData');\n      if(reqData.status) {\n        console.log('before nft service call');\n        /*this.nftService.GetTokenURI(reqData.allowed).then((suc: any) => {\n          console.log(suc, 'nftservice suc');\n        });*/\n        console.log('after nft service call');\n        this.toasterService.show(true, reqData.msg);\n      } else {\n        this.toasterService.show(false, reqData.msg);\n      }\n      this.route.navigate(['collection']);\n    });\n  }\n}\n","<div class=\"digital-art-sec\">\n    <div class=\"middle-section\">\n        <div class=\"container tabpages-cnt\">\n            <div class=\"row\">\n                <div class=\"col-lg-12\">\n                    <h3 class=\"section-title text-left\">Create New Item</h3>\n                </div>\n                <div class=\"text-center\">\n                    <ul class=\"nav nav-tabs tab-cnt\">\n                        <!-- <li class=\"nav-item\">\n                            <a class=\"nav-link active\" data-toggle=\"tab\" (click)=\"changeTab('single')\" href=\"#swap\">Single</a>\n                        </li> -->\n                       <!--  <li class=\"nav-item\">\n                            <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"changeTab('multiple')\" href=\"#liquidity\">Multiple</a>\n                        </li> -->\n                    </ul>\n                </div>\n                <form [formGroup]=\"co_form\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\n                        <div class=\"form-group\">\n                            <label class=\"mb-0 pb-0 font-16 text-black fontweight-400 mb-2 text-black\"\n                            for=\"logo\">Choose Image <span class=\"text-danger\">*</span></label><br>\n                            <label class=\"mb-0 pb-0 font-14 mb-4 text-black fontweight-400 text-black\" for=\"logo\">File Types\n                            supported JPG,JPEG,PNG,GIF max 100 MB</label>\n                            <div class=\"mt-2\">\n                                <label for=\"file-upload\" class=\"custom-file-upload d-xl-flex d-lg-flex align-items-center \">\n                                    <img src=\"{{ itemObj.image ? itemObj.image: 'assets/images/img-upload1.png'}}\" alt=\"customFile\"\n                                    class=\"cursor-pointer w-100-res\" />\n                                </label>\n                                <input id=\"file-upload\" formControlName=\"item_img\" name='item_img' type=\"file\" accept=\".jpg,.jpeg,.png\" (change)=\"onChanged($event)\" [ngClass]=\"{ 'is-invalid': submitted && f.item_img.errors }\" style=\"display:none;\" required>\n                                <div *ngIf=\"f.item_img.errors\" class=\"invalid-feedback\">\n                                  <div *ngIf=\"f.item_img.errors.required\">Item Image is required</div>\n                              </div>\n                              <div *ngIf=\"fileerr\" class=\"text-danger\">Please Upload Valid File.</div>\n                          </div>\n                      </div>\n                      <div class=\"form-group mt-4\">\n                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"name\">Name <span class=\"text-danger\">*</span></label>\n                        <input type=\"text\" formControlName=\"item_name\" [(ngModel)]=\"itemObj.item_name\" [ngClass]=\"{ 'is-invalid': submitted && f.item_name.errors }\" class=\"form-control input-sec font-16 fontweight-400\"\n                        placeholder=\"Item Name\" required>\n                        <div *ngIf=\"f.item_name.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.item_name.errors.required\">Item Name is required</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-4\">\n                        <label class=\"mb-2 pb-0 font-16 text-black fontweight-400\" for=\"yourName\">External\n                        Link</label><br>\n                        <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">It Will Include a link to this URL on this\n                            item detail page so that user can click ti learn more about it you are welcome to link to\n                            your own webpage with move details\n                        </label>\n                        <input type=\"text\" formControlName=\"external_link\" class=\"form-control input-sec font-16 fontweight-400\"\n                        placeholder=\"https://yoursite.io/item/123\" [(ngModel)]=\"itemObj.external_link\">\n                    </div>\n\n                    <div class=\"form-group mt-4\">\n                        <label class=\"mb-2 pb-0 font-16 text-black fontweight-400\"\n                        for=\"yourName\">Description <span class=\"text-danger\">*</span></label><br>\n                        <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">The description will be included on the\n                            item's detail page underneath its image. Markdown syntax is supported.\n                        </label>\n                        <input type=\"text\" formControlName=\"description\" class=\"form-control input-sec font-16 fontweight-400\"\n                        placeholder=\"Provide a detailed description of your item.\" [(ngModel)]=\"itemObj.description\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" required>\n                        <div *ngIf=\"f.description.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.description.errors.required\">Item Description is required</div>\n                        </div>\n                        \n                    </div>\n\n\n                     <div class=\"form-group mt-4\">\n                        <label class=\"mb-2 pb-0 font-16 text-black fontweight-400\"\n                        for=\"yourName\">Description <span class=\"text-danger\">*</span></label><br>\n                        <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">Pricce (BNB).<span class=\"text-danger\">*</span>\n                        </label>\n                        <input type=\"text\" formControlName=\"price\" class=\"form-control input-sec font-16 fontweight-400\"\n                        placeholder=\"Price\" [(ngModel)]=\"itemObj.price\" [ngClass]=\"{ 'is-invalid': submitted && f.price.errors }\" required>\n                        <div *ngIf=\"f.price.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.price.errors.required\">Item Price is required</div>\n                        </div>\n                        \n                    </div>\n\n                    <input type=\"hidden\" formControlName=\"caddress\" class=\"form-control input-sec font-16 fontweight-400\"\n                        value=\"0\" [(ngModel)]=\"itemObj.caddress\"  >\n\n                    <!-- <div class=\"d-flex align-items-start\">\n                        <img src=\"assets/images/create1.png\" class=\"mr-3\">\n                        <div>\n                            <p class=\"mb-0 pb-0 font-16 text-black fontweight-400\">Properties</p>\n                            <p class=\"mb-3 pb-0 font-14  fontweight-400\">Textual traits that show up as rectangles </p>\n                        </div>\n                    </div>\n                    <div>\n                        <table class=\"table table-bordered\" formArrayName=\"properties\">\n                            <tr>  \n                                <th colspan=\"2\">Properties:</th>  \n                                <th width=\"150px\"><button type=\"button\" (click)=\"addQuantity()\" class=\"btn btn-primary\">Add More</button></th>  \n                            </tr>\n                            <tr *ngFor=\"let quantity of quantities().controls; let i=index\" [formGroupName]=\"i\">  \n                                <td>  \n                                    Name :  \n                                    <input type=\"text\" name=\"property_name_{{ i }}\" placeholder=\"eg : Key\" formControlName=\"name\" aria-label=\"code\" aria-describedby=\"code\">\n                                </td>  \n                                <td>  \n                                    Value:  \n                                    <input type=\"text\" formControlName=\"value\" placeholder=\"eg : Value\" name=\"property_value_{{ i }}\" class=\"form-control\" aria-label=\"code\" aria-describedby=\"code\">  \n                                </td>\n                                <td>  \n                                    <button (click)=\"removeQuantity(i)\" class=\"btn btn-danger\">Remove</button>  \n                                </td>\n                            </tr> \n                        </table>\n                    </div>\n                    <div class=\"d-flex align-items-start mt-1\">\n                        <img src=\"assets/images/create2.png\" class=\"mr-3\">\n                        <div>\n                            <p class=\"mb-0 pb-0 font-16 text-black fontweight-400\">Levels</p>\n                            <p class=\"mb-3 pb-0 font-14  fontweight-400\">Numerical traits that show as a progress bar\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"d-flex align-items-start mt-1\">\n                        <img src=\"assets/images/create3.png\" class=\"mr-3\">\n                        <div>\n                            <p class=\"mb-0 pb-0 font-16 text-black fontweight-400\">Stats</p>\n                            <p class=\"mb-3 pb-0 font-14  fontweight-400\">Numerical traits that just show as numbers </p>\n                        </div>\n                    </div>\n                    <div>\n                        <table class=\"table table-bordered\" formArrayName=\"stats\">\n                            <tr>  \n                                <th colspan=\"2\">Stats:</th>  \n                                <th width=\"150px\"><button type=\"button\" (click)=\"addQuantity1()\" class=\"btn btn-primary\">Add More</button></th>  \n                            </tr>\n                            <tr *ngFor=\"let quantity of quantities1().controls; let i=index\" [formGroupName]=\"i\">  \n                                <td>  \n                                    Name :  \n                                    <input type=\"text\" name=\"stats_name_{{ i }}\" placeholder=\"eg : Key\" formControlName=\"name\" aria-label=\"code\" aria-describedby=\"code\">\n                                </td>  \n                                <td>  \n                                    Value:  \n                                    <input type=\"text\" formControlName=\"value\" placeholder=\"eg : Value\" name=\"stats_value_{{ i }}\" class=\"form-control\" aria-label=\"code\" aria-describedby=\"code\">  \n                                </td>\n                                <td>  \n                                    <button (click)=\"removeQuantity1(i)\" class=\"btn btn-danger\">Remove</button>  \n                                </td>\n                            </tr> \n                        </table>\n                    </div>\n                    <div class=\"d-flex align-items-start justify-content-between mt-1 settings-block\">\n                        <div class=\"d-flex align-items-start\">\n                            <img src=\"assets/images/create4.png\" class=\"mr-3\">\n                            <div>\n                                <p class=\"mb-0 pb-0 font-16 text-black fontweight-400\">Unlockable Content</p>\n                                <p class=\"mb-3 pb-0 font-14  fontweight-400\">Include unlockable content that can only be\n                                revealed by the own</p>\n                            </div>\n                        </div>\n                        <div>\n                            <label class=\"switch\">\n                                <input type=\"checkbox\" checked>\n                                <span class=\"slider round\"></span>\n                            </label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group mt-3\">\n                        <textarea formControlName=\"content\" class=\"form-control radius8\" rows=\"7\"\n                        placeholder=\"Enter content (access key, code to redeem, link to a file, etc.)\" [(ngModel)]=\"itemObj.content\" required></textarea>\n                    </div>\n\n                    <div class=\"d-flex align-items-start mt-1\">\n                        <img src=\"assets/images/create5.png\" class=\"mr-3\">\n                        <div>\n                            <p class=\"mb-0 pb-0 font-16 text-black fontweight-400\">Explicit & Sensitive Content</p>\n                            <p class=\"mb-3 pb-0 font-14  fontweight-400\">Set this item as explicit and sensitive content\n                            </p>\n                        </div>\n                    </div>\n                  <div class=\"form-group mt-4\">\n                    <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Freeze\n                    metadata</label><br>\n                    <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">Freezing your metadata will allow you to\n                        permanently lock and store all of this item's content in decentralized file storage.\n                    </label>\n                    <input type=\"text\" formControlName=\"metadata\" class=\"form-control input-sec font-16 fontweight-400\"\n                    placeholder=\"To freeze your metadata, you must create your item first.\" [(ngModel)]=\"itemObj.metadata\" >\n                </div> -->\n                <div class=\"text-left\">\n                    <button class=\"btn default-btn mt-4\" *ngIf=\"!msubmitted\" data-toggle=\"modal\">\n                    Create</button>\n                    <label class=\"btn default-btn mt-4\" *ngIf=\"msubmitted\">Loading...</label>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n</div>\n\n\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CreateItemComponent } from \"./create-item.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { TooltipModule } from \"ngx-bootstrap/tooltip/\";\nimport { LoaderModule } from \"src/app/common/loader/loader.module\";\nimport { ModalModule } from \"ngx-bootstrap/modal\";\n\nconst routes: Routes = [\n{\n  path: \"\",\n  component: CreateItemComponent,\n},\n];\n\n@NgModule({\n  declarations: [CreateItemComponent],\n  imports: [\n  CommonModule,\n  FormsModule,\n  ReactiveFormsModule,\n  RouterModule.forChild(routes),\n  LoaderModule,\n  TooltipModule.forRoot(),\n  ModalModule.forRoot(),  \n  ],\n})\nexport class CreateItemModule {}\n"],"sourceRoot":"webpack:///"}