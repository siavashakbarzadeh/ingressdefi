{"version":3,"sources":["./src/app/pages/nft/items/items.component.ts","./src/app/pages/nft/items/items.component.html","./src/app/pages/nft/items/items.module.ts"],"names":[],"mappings":"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","file":"nft-items-items-module.js","sourcesContent":["import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { DataService } from \"src/app/common/services/api/data.service\";\nimport { ToasterService } from \"src/app/common/toaster/toaster.service\";\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { NftService } from \"src/app/common/services/metamask/nft/nft.service\";\nimport { ContractDetails } from \"src/assets/files/contract\";\nimport { NftExchangeAbi } from \"src/assets/files/nft_abi\";\nimport { NFT_721_Token_ABI } from \"src/assets/files/127cre_abi\";\nimport { NFT_1155_Token_ABI } from \"src/assets/files/5511cre_abi\";\nimport { NFT_20_Token_ABI } from \"src/assets/files/20cre_abi\";\nimport * as moment from 'moment';\nimport { Sample } from \"src/assets/files/currencyType\";\n\ndeclare let window: any;\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})\nexport class ItemsComponent implements OnInit {\n\n  bsValue = new Date();\n   bsRangeValue: Date[];\n   maxDate = new Date();\n   minDate = new Date(); \n   starttime: Date = new Date(); \n   endtime: Date = new Date();   \n   startDate = new Date();   \n   startminDate: Date;   \n   startmaxDate : Date;\n   endDate = new Date();   \n   endminDate: Date;   \n   endmaxDate:Date;   \n   selectedFromDate: any;   \n   selectedEndDate: any;\n   apprToken: any = {};\n  apprTokenId: any = {};\n  apprTokenABI: any = {};\n  token = localStorage.getItem(\"Game-Token\");\n\n  itemObj: any = {};\n  items = [];\n  pageKey: any;\n  sItem: any = {};\n  sItemObj: any = {}; \n  limit = 6;\n  skip = 6;\n  modalRef?: BsModalRef | null;\n  msubmitted = false;\n  saletype:String = 'fixed';\n  currencies: any;\n  selectcurr:String = \"\";\n  buycurr:String = \"\";\n  buytokenaddr:String = \"\";\n  publishData: any = {};\n  submitted = false;\n\n  constructor(\n   private activatedRoute: ActivatedRoute,\n   private route: Router,\n   public service: DataService, \n   private toasterService: ToasterService, \n   private modalService: BsModalService,\n   private nftService: NftService,\n   ) { }\n\n  ngOnInit() {\n    this.endminDate = new Date();\n    this.endmaxDate = new Date();\n    this.endminDate.setDate(this.endminDate.getDate());\n    this.endmaxDate.setDate(this.endmaxDate.getDate() + 7);\n\n\n    this.itemObj.pagekey = this.activatedRoute.snapshot.queryParamMap.get('id');\n    var collectionId = decodeURIComponent(this.itemObj.pagekey);\n    this.pageKey = collectionId;\n    this.getItems(collectionId);\n    this.getCurrency();\n  }\n\n  openModal(template: TemplateRef<any>) {\n    if(this.sItem.item_name != '' && this.sItem.description != '' && this.sItem.item_image != '' ) {\n      var modRef = true;\n    } else {\n      var modRef = false;\n    }\n    if(modRef) {\n      this.modalRef = this.modalService.show(template);\n    }\n  }\n\n  getItems(collectionId: any) {\n\n    if(collectionId) {\n      this.service.postRequest(\"collection/getItems\", { id: collectionId, skip : 0,limit : this.limit }).subscribe((suc) => {\n\n       \n\n        let responseData: any = suc;\n        if (responseData.status) {\n          this.items = responseData.data;\n        }\n      });\n    } else {\n      this.toasterService.show(false, 'Something went wrong');\n      this.route.navigate(['collection']);\n    }\n  }\n\n  saleItem(itemId) {\n    console.log(itemId);\n    if(itemId) {\n      this.service.postRequest(\"collection/getItem\", { id: itemId }).subscribe((suc) => {\n        let responseData: any = suc;\n        if (responseData.status) {\n          this.sItem = responseData.data;\n          console.log(this.sItem, 'getItem');\n          console.log(responseData.data, 'responseData');\n        }\n      });\n    } else {\n      this.toasterService.show(false, 'Something went wrong');\n      this.route.navigate(['collection']);\n    }\n  }\n\n  getCurrency() {\n    this.service.postRequest('collection/getNftCurrency', {}).subscribe((success) => {\n      let reponse: any = success;\n      if (reponse.status) {\n        this.currencies = reponse.data;\n\n        console.log(\"this.currenciesthis.currenciesthis.currencies\",this.currencies)\n\n      } else {\n        this.toasterService.show(false, reponse.msg);\n      }\n    });\n  }\n\n  myFunc(cid: any){\n    this.route.navigate(['/create-item'], {queryParams:{id: encodeURIComponent(cid)}});\n  }\n\n  loadmore(skip){\n    this.service.postRequest('collection/getItems',{ id: this.pageKey, skip : this.skip,limit : this.limit }).subscribe((res: any) => { \n      this.items.push(...res.data); \n      this.skip=this.skip+this.limit;\n    })\n  }\n\n  saleType(val) {\n    this.saletype = val;\n    if (val == 'auction') {\n      this.startminDate = new Date();\n      this.startmaxDate = new Date();\n      this.startminDate.setDate(this.startminDate.getDate());\n      this.startmaxDate.setDate(this.startmaxDate.getDate() + 30);\n      this.endminDate.setDate(this.endminDate.getDate() + 7);\n      this.endmaxDate.setDate(this.endminDate.getDate() + 7);\n    }\n    else {\n      this.endminDate = new Date();\n      this.endmaxDate = new Date();\n      this.endminDate.setDate(this.endminDate.getDate());\n      this.endmaxDate.setDate(this.endmaxDate.getDate()+7);\n    }\n  }\n\n\n  changeCurr(val) {\n    this.selectcurr = val;\n  }\n\n  changeBuyCurr(val) {\n    this.buycurr = val;\n  }\n\n  selectDate(val, opt) {\n    console.log('selected', val);\n    if (opt == 'from') {\n      this.selectedFromDate = val;\n      this.endminDate = new Date();\n      this.endmaxDate = new Date();\n      this.endmaxDate.setDate(val.getDate() + 1);\n      this.endmaxDate.setDate(val.getDate() + 7);\n    }\n    else {\n      this.selectedEndDate = val;\n      this.startminDate = new Date();\n      this.startmaxDate = new Date();\n      this.startminDate.setDate(this.selectedEndDate.getDate()-7);\n      this.startmaxDate.setDate(this.selectedEndDate.getDate()-1);\n    }\n  }\n\n  async onModalSubmit(values) {\n\n   // console.log(\"Sample[0]Sample[0]Sample[0]\",Sample[0])\n\n    this.submitted = true;\n    this.msubmitted = true;\n    let datas = values;\n    var buycurr = 'WBNB';//datas.buycurrency;\n    var sellcurr = 'ERC721'; //this.sItem.currency;\n    console.log(this.sItem, 'values');\n    let account = this.service.metaDeatails.account;\n    if (!account) {\n      this.toasterService.show(false, 'Please login with metamask');\n      return;\n    }\n\n    \n    let itemArr = {\n      'bid': (datas.bid ? datas.bid : \"\"),\n      'supply': (this.sItem.objtype != 'single' && this.sItem.objtype != ''  && datas.supply != undefined && datas.supply != \"\") ? datas.supply : 1,\n      'toprivate': (datas.address ? datas.address : \"\"),\n      'saletype': this.saletype,\n      'currency': this.sItem.currency,\n      'tocurrency': buycurr,\n      'sellnftid': this.sItem.selltokenid,\n      'sellnftaddr': this.sItem.selltoken,\n      'sellassettype': Sample[0][sellcurr].astype,\n      'buytokenid': Sample[0][buycurr].tokenid,\n      'buytokenadr': Sample[0][buycurr].address,\n      'buyassettype': Sample[0][buycurr].astype,\n      'price': datas.price,\n      'itemId': this.sItem.itemId,\n      'startdate': datas.sdate,\n      'starttime': datas.starttime,\n      'enddate': datas.endate,\n      'endtime': datas.endtime,\n    };\n   /* console.log(itemArr, 'itemArr');\n    return false;*/\n    this.publishData.saletype = this.saletype;\n    this.publishData.itemid = this.sItem.itemId;\n    this.publishData.edition = 1/*datas.edition*/;\n    this.publishData.house = this.sItem.house/*creator id*/;\n    this.publishData.rent = this.sItem.rent/*owner id*/;\n    this.service.filePostRequest('collection/updateItem', itemArr).subscribe((reqData: any) => {\n      if(reqData.status) {\n        console.log('reqData', this.saletype);\n\n\n        if (this.saletype == 'private') {\n          this.privatesale(datas.address, this.sItem.itemId);\n        }\n        else if(this.saletype == 'fixed') {\n          this.fixedSale(this.sItem.itemId);\n        }\n        else {\n\n          this.auctionSale(this.sItem.itemId);\n        }\n        this.modalRef.hide();\n      } \n      else {\n        this.toasterService.show(false, reqData.msg);\n      }\n      this.route.navigate(['collection']);\n    });\n  }\n\n  privatesale(address, itemId){ \n    if (address && itemId) {\n      var Data = {'address': address};\n      this.service.postRequest('checkuser', Data).subscribe((result:any)=>{\n        if(result.status){ \n          this.service.postRequest(\"collection/getItem\", { id: itemId }).subscribe((suc: any) => {\n            if (!suc.status) {\n              return this.toasterService.show(false, 'Item not found.');\n            }\n            let itemData = suc.data;\n            console.log(itemData, 'itemDataaaaa');\n            (async() => {\n                try {  \n                  if (itemData.imported == 1) {\n                    let cobj = {\n                      \"contractid\": itemData.contractId,\n                    }\n                    this.publishData.imported = 1;\n                    this.publishData.contractId = itemData.contractId;\n                    await this.service.postRequest('users/getContract', cobj).subscribe((reqData: any) => {\n                      if (reqData.status) {\n                        let cdata = reqData.data;\n                        console.log(cdata.contract, 'cdata.contract');\n                        console.log(cdata.abi, 'cdata.abi');\n                        this.apprToken = cdata.contract;\n                        this.apprTokenABI = cdata.abi;\n                        this.contractPrivate(this.apprToken, this.apprTokenABI, itemData);\n                      }\n                    })\n                  }\n                  else {\n                    this.publishData.imported = 0;\n                    this.publishData.contractId = \"\";\n                    let account = this.service.metaDeatails.account;\n                    if (!account) {\n                      return this.toasterService.show(false, \"Please connect metamask\");\n                    }\n                    let currency = itemData.currency;\n                    this.apprToken = Sample[0][currency].address;\n                    this.apprTokenId = Sample[0][currency].tokenid;\n                    if (currency == 'ERC721') {\n                      this.apprTokenABI = NFT_721_Token_ABI;\n                    }\n                    else if(currency == 'WBNB') {\n                      this.apprTokenABI = NFT_1155_Token_ABI;\n                    }\n                    else if(currency == 'ERC20') {\n                      this.apprTokenABI = NFT_20_Token_ABI;\n                    }\n                    this.contractPrivate(this.apprToken, this.apprTokenABI, itemData);\n                  }\n                    \n                }\n                catch (error) {\n                    this.toasterService.show(false, error.message);\n                }\n           }) ()\n          });\n        }else{ \n          this.toasterService.show(false, 'No Such User Found');\n          return;\n        }\n      })\n    }\n  }\n\n /* fixedSale(itemId) {\n    if (itemId) {\n      this.service.postRequest(\"collection/getItem\", { id: itemId }).subscribe((suc: any) => {\n        if (!suc.status) {\n          return this.toasterService.show(false, 'Item not found.');\n        }\n        let itemData = suc.data;\n        console.log(itemData, 'itemDataaaaa1');\n        (async() => {\n            try {\n\n                let account = this.service.metaDeatails.account;\n                if (!account) {\n                  return this.toasterService.show(false, \"Please connect metamask\");\n                }\n                \n                if (itemData.imported == 1) {\n                  let cobj = {\n                    \"contractid\": itemData.contractId,\n                  }\n                  this.publishData.imported = 1;\n                  this.publishData.contractId = itemData.contractId;\n                  await this.service.postRequest('users/getContract', cobj).subscribe((reqData: any) => {\n                    if (reqData.status) {\n                      let cdata = reqData.data;\n                      console.log(cdata.contract, 'cdata.contract');\n                      console.log(cdata.abi, 'cdata.abi');\n                      this.apprToken = cdata.contract;\n                      this.apprTokenABI = cdata.abi;\n                      this.contractFixed(this.apprToken, this.apprTokenABI, itemData);\n                    }\n                  })\n                }\n                else {\n\n\n\n                    this.publishData.imported = 0;\n                    this.publishData.contractId = \"\";\n                    let currency = itemData.currency;\n                    currency = 'ERC721';\n                    this.apprToken = Sample[0][currency].address;\n                    this.apprTokenId = Sample[0][currency].tokenid;\n\n\n\n                    if (currency == 'ERC721') {\n                      this.apprTokenABI = NFT_721_Token_ABI;\n                    }\n                    else if(currency == 'WBNB') {\n                      this.apprTokenABI = NFT_1155_Token_ABI;\n                    }\n                    else if(currency == 'ERC20') {\n                      this.apprTokenABI = NFT_20_Token_ABI;\n                    }\n\n                    this.contractFixed(this.apprToken, this.apprTokenABI, itemData);\n                }  \n            }\n            catch (error) {\n                this.toasterService.show(false, error.message);\n            }\n       }) ()\n      });\n    }\n  }*/\n\n\n  fixedSale(itemId) {\n    if (itemId) {\n      this.service.postRequest(\"collection/getItem\", { id: itemId }).subscribe((suc: any) => {\n        if (!suc.status) {\n          return this.toasterService.show(false, 'Item not found.');\n        }\n        let itemData = suc.data;\n        (async() => {\n            try {  \n                let account = this.service.metaDeatails.account;\n                if (!account) {\n                  return this.toasterService.show(false, \"Please connect metamask\");\n                }\n                let token = ContractDetails.nft_exchange_token;\n                let token_abi = NftExchangeAbi;\n                let currency = itemData.currency;\n                this.apprToken = Sample[0][currency].address;\n                this.apprTokenId = Sample[0][currency].tokenid;\n                if (currency == 'ERC721') {\n                  this.apprTokenABI = NFT_721_Token_ABI;\n                }\n                else if(currency == 'WBNB') {\n                  this.apprTokenABI = NFT_1155_Token_ABI;\n                }\n                else if(currency == 'ERC20') {\n                  this.apprTokenABI = NFT_20_Token_ABI;\n                }\n                let verify = await this.nftService.verifyOwner(this.apprToken, this.apprTokenABI, itemData.selltokenid);\n                if (verify.result != account) {\n                  this.toasterService.show(false, 'Invalid Owner Address, Please Verify Metamask Address');\n                  return;\n                }\n                let approve = await this.nftService.approveSellFun(this.apprToken, this.apprTokenABI, itemData.selltokenid, account);\n                if (approve.result) {\n                  window.web3 = window.web3.currentProvider;\n                  window.web3 = new window.Web3(window.ethereum); \n                  let exchangeContract = new window.web3.eth.Contract(token_abi, token);\n                  let pub_price  =  await this.nftService.getweiValue(itemData.price);\n                  \n                  let bb = new Date(itemData.enddate); \n                  let salt = Math.floor((Math.random() * ((new Date()).getTime())));\n                  let order = [[account,[\"0x76dbb555c3bb4d985e93567670093f68bf12bca8\", itemData.selltokenid, \"1\"],[\"0xae13d989dac2f0debff460ac112a837c89baa7cd\", (0.1e18).toString(), \"0\"]], (itemData.spid).toString(), (0.1e18).toString(), '40', salt.toString(), (bb.getTime()).toString(), '1'];  \n                  // let order = [['0xc84928f94462F530a83A8D8E8e1FF4851255b335', [ContractDetails.nft_exchange_token, '1', 0], [ContractDetails.nft_exchange_token, '1', 1]], 1, 0.e18, 40, 1, n, 0];\n                  \n                  let orderHash = await this.nftService.orderHash(order);\n                  let sig1 =  await window.web3.eth.personal.sign(orderHash.result, account,''); \n                  let r = sig1.slice(0, 66);\n                  let s = '0x' + sig1.slice(66, 130)\n                  let v = '0x' + sig1.slice(130, 132) \n                  let SellergetVRS = [v, r, s];\n                  if(orderHash && SellergetVRS) {          \n                    let contractData = { order : order, vrs : SellergetVRS };\n                    this.publishData.sellorder = contractData;\n                    this.service.postRequest('collection/fixedsale',this.publishData).subscribe((result:any)=>{\n                      if(result.status){ \n                        this.toasterService.show(result.status,result.msg);\n                        this.route.navigate(['collection']);\n                      }else{       \n                        this.toasterService.show(result.status, result.msg);\n                      }\n                    })\n                  }else{\n                    this.toasterService.show(false, 'Unable to sell, please try again');\n                  }\n                  return;\n                }\n                else {\n                  this.toasterService.show(false, \"Something went wrong, Please Try Again.\");\n                  this.route.navigate(['/collection']);\n                  return;\n                }\n                return\n            }\n            catch (error) {\n                this.toasterService.show(false, error.message);\n            }\n       }) ()\n      });\n    }\n  }\n\n  auctionSale(itemId) {\n\n    if ( itemId) {\n     \n        this.service.postRequest(\"collection/getItem\", { id: itemId }).subscribe((suc: any) => {\n          if (!suc.status) {\n            return this.toasterService.show(false, 'Item not found.');\n          }\n          let itemData = suc.data;\n          console.log(itemData, 'itemDataaaaa2');\n          (async() => {\n              try {\n                let account = this.service.metaDeatails.account;\n                  if (!account) {\n                    return this.toasterService.show(false, \"Please connect metamask\");\n                  }\n\n\n                if (itemData.imported == 1) {\n                  let cobj = {\n                    \"contractid\": itemData.contractId,\n                  }\n                  this.publishData.imported = 1;\n                  this.publishData.contractId = itemData.contractId;\n                  await this.service.postRequest('users/getContract', cobj).subscribe((reqData: any) => {\n                    if (reqData.status) {\n                      let cdata = reqData.data;\n                      console.log(cdata.contract, 'cdata.contract');\n                      console.log(cdata.abi, 'cdata.abi');\n                      this.apprToken = cdata.contract;\n                      this.apprTokenABI = cdata.abi;\n                      this.contractAuction(this.apprToken, this.apprTokenABI, itemData);\n                    }\n                  })\n                }\n                else {\n                  this.publishData.imported = 0;\n                  this.publishData.contractId = \"\";\n                  let currency = itemData.currency;\n                  this.apprToken = Sample[0][currency].address;\n                  this.apprTokenId = Sample[0][currency].tokenid;\n                  if (currency == 'ERC721') {\n                    this.apprTokenABI = NFT_721_Token_ABI;\n                  }\n                  else if(currency == 'WBNB') {\n                    this.apprTokenABI = NFT_1155_Token_ABI;\n                  }\n                  else if(currency == 'ERC20') {\n                    this.apprTokenABI = NFT_20_Token_ABI;\n                  }\n                  this.contractAuction(this.apprToken, this.apprTokenABI, itemData);\n                }  \n                  \n\n                  \n              }\n              catch (error) {\n                  this.toasterService.show(false, error.message);\n              }\n         }) ()\n        });\n     \n    }\n  }\n\n\n  async contractFixed(apprToken, apprTokenABI, itemData) {\n\n\n    console.log(\"itemDataitemDataitemDataitemData\",itemData);\n    return false;\n\n    try{\n      let apprTokenABII = JSON.parse(apprTokenABI);\n        let account = this.service.metaDeatails.account;\n        let token = ContractDetails.nft_exchange_token;\n        /*let verify = await this.nftService.verifyOwner(apprToken, apprTokenABII, itemData.selltokenid);\n        if (verify.result != account) {\n          this.toasterService.show(false, 'Invalid Owner Address, Please Verify Metamask Address');\n          return;\n        }*/\n        let approve = await this.nftService.approveSellFun(apprToken, apprTokenABII, itemData.selltokenid, account);\n        if (approve.result) {\n          window.web3 = window.web3.currentProvider;\n          window.web3 = new window.Web3(window.ethereum); \n          let pub_price  =  await this.nftService.getweiValue(itemData.price);\n          \n          let bb = new Date(itemData.enddate); \n          let salt = Math.floor((Math.random() * ((new Date()).getTime())));\n          let order = [[account,[apprToken, itemData.selltokenid, \"1\"],[\"0xae13d989dac2f0debff460ac112a837c89baa7cd\", (itemData.price*1e18).toString(), \"0\"]], (itemData.spid).toString(), (itemData.price*1e18).toString(), '40', salt.toString(), (bb.getTime()).toString(), '2'];  \n          // let order = [['0xc84928f94462F530a83A8D8E8e1FF4851255b335', [ContractDetails.nft_exchange_token, '1', 0], [ContractDetails.nft_exchange_token, '1', 1]], 1, 0.e18, 40, 1, n, 0];\n          \n          let orderHash = await this.nftService.orderHash(order);\n          let sig1 =  await window.web3.eth.personal.sign(orderHash.result, account,''); \n          let r = sig1.slice(0, 66);\n          let s = '0x' + sig1.slice(66, 130)\n          let v = '0x' + sig1.slice(130, 132) \n          let SellergetVRS = [v, r, s];\n          if(orderHash && SellergetVRS) {          \n            let contractData = { order : order, vrs : SellergetVRS };\n            this.publishData.sellorder = contractData;\n            this.service.postRequest('collection/fixedsale',this.publishData).subscribe((result:any)=>{\n              if(result.status){ \n                this.toasterService.show(result.status,result.msg);\n                this.route.navigate(['collection']);\n              }else{       \n                this.toasterService.show(result.status, result.msg);\n              }\n            })\n          }else{\n            this.toasterService.show(false, 'Unable to sell, please try again');\n          }\n          return;\n      }\n      else {\n        this.toasterService.show(false, \"Something went wrong, Please Try Again.\");\n        this.route.navigate(['/collection']);\n        return;\n      }\n      return\n    }\n    catch(e) {\n      this.toasterService.show(false, e);\n      this.route.navigate(['/collection']);\n    }\n  }\n\n   saleItemnew(items){\n    if(items) {\n\n       let account = this.service.metaDeatails.account;\n        let currency = items.currency;\n        console.log(\"Sample[0][currency].address\",Sample[0][currency].address)\n        this.apprToken = Sample[0][currency].address;\n        this.apprTokenId = Sample[0][currency].tokenid;\n        if (currency == 'ERC721') {\n        this.apprTokenABI = NFT_721_Token_ABI;\n        }\n        else if(currency == 'WBNB') {\n        this.apprTokenABI = NFT_1155_Token_ABI;\n        }\n        else if(currency == 'ERC20') {\n        this.apprTokenABI = NFT_20_Token_ABI;\n        }\n        this.Offlinesalefn(this.apprToken, this.apprTokenABI, items);\n        \n    } else {\n      this.toasterService.show(false, 'Something went wrong');\n      this.route.navigateByUrl('market');\n    }\n    \n  }\n\n\n  async contractAuction(apprToken, apprTokenABI, itemData) {\n    try {\n      let apprTokenABII = JSON.parse(apprTokenABI);\n      let account = this.service.metaDeatails.account;\n      let token = ContractDetails.nft_exchange_token;\n      /*let verify = await this.nftService.verifyOwner(apprToken, apprTokenABII, itemData.selltokenid);\n      if (verify.result != account) {\n        this.toasterService.show(false, 'Invalid Owner Address, Please Verify Metamask Address');\n        return;\n      }*/\n      let approve = await this.nftService.approveSellFun(apprToken, apprTokenABII, itemData.selltokenid, account);\n      if (approve.result) {\n        window.web3 = window.web3.currentProvider;\n        window.web3 = new window.Web3(window.ethereum); \n        let pub_price  =  await this.nftService.getweiValue(itemData.price);\n        let bb = new Date(itemData.enddate); \n        let salt = Math.floor((Math.random() * ((new Date()).getTime())));\n        let order = [[account,[apprToken, itemData.selltokenid, \"1\"],[\"0xae13d989dac2f0debff460ac112a837c89baa7cd\", (itemData.price*1e18).toString(), \"0\"]], (itemData.spid).toString(), (itemData.price*1e18).toString(), '40', salt.toString(), (bb.getTime()).toString(), '3'];  \n        // let order = [['0xc84928f94462F530a83A8D8E8e1FF4851255b335', [ContractDetails.nft_exchange_token, '1', 0], [ContractDetails.nft_exchange_token, '1', 1]], 1, 0.e18, 40, 1, n, 0];\n        \n        let orderHash = await this.nftService.orderHash(order);\n        let sig1 =  await window.web3.eth.personal.sign(orderHash.result, account,''); \n        let r = sig1.slice(0, 66);\n        let s = '0x' + sig1.slice(66, 130)\n        let v = '0x' + sig1.slice(130, 132) \n        let SellergetVRS = [v, r, s];\n        if(orderHash && SellergetVRS) {          \n          let contractData = { order : order, vrs : SellergetVRS };\n          this.publishData.sellorder = contractData;\n          this.service.postRequest('collection/privatesale',this.publishData).subscribe((result:any)=>{\n            if(result.status){ \n              this.toasterService.show(result.status,result.msg);\n              this.route.navigate(['collection']);\n            }else{       \n              this.toasterService.show(result.status, result.msg);\n            }\n          })\n        }else{\n          this.toasterService.show(false, 'Unable to sell, please try again');\n        }\n        return;\n      }\n      else {\n        this.toasterService.show(false, \"Something went wrong, Please Try Again.\");\n        this.route.navigate(['/collection']);\n        return;\n      }\n      return\n    }\n    catch(e) {\n\n    }\n  }\n\n\n\n\n\n  async Offlinesalefn(apprToken, apprTokenABI, itemData) {\n\n    \nconsole.log(\"apprTokenABIIapprTokenABII0\",apprTokenABI)\n    \n   //   let apprTokenABII = JSON.parse(apprTokenABI);\n\n\n\n      let account = this.service.metaDeatails.account;\n      let token = ContractDetails.nft_exchange_token;\n      /*let verify = await this.nftService.verifyOwner(apprToken, apprTokenABII, itemData.selltokenid);\n      if (verify.result != account) {\n        this.toasterService.show(false, 'Invalid Owner Address, Please Verify Metamask Address');\n        return;\n      }*/\n      let approve = await this.nftService.approveSellFun(apprToken, apprTokenABI, itemData.selltokenid, account);\n      \n      if (approve.result) {\n        window.web3 = window.web3.currentProvider;\n        window.web3 = new window.Web3(window.ethereum); \n        let pub_price  =  await this.nftService.getweiValue(itemData.price);\n        \n       // let bb = new Date(itemData.enddate); \n        var expiryTime = await window.web3.eth.getBlockNumber();\n        var bb = Number(expiryTime) + Number(10);\n\n         let dead_time =  15 * 60000;\n        let date = new Date();\n        let timestamp = date.getTime();\n        let deadline = timestamp + dead_time;\n\n        let salt = Math.floor((Math.random() * ((new Date()).getTime())));\n        let order = [[account,[apprToken, itemData.selltokenid, \"1\"],[\"0xae13d989dac2f0debff460ac112a837c89baa7cd\", (itemData.price*1e18).toString(), \"0\"]], (itemData.spid).toString(), (itemData.price*1e18).toString(), '40', salt.toString(),deadline, '1'];  \n\n      \n\n        // let order = [['0xc84928f94462F530a83A8D8E8e1FF4851255b335', [ContractDetails.nft_exchange_token, '1', 0], [ContractDetails.nft_exchange_token, '1', 1]], 1, 0.e18, 40, 1, n, 0];\n        \n        let orderHash = await this.nftService.orderHash(order);\n        let sig1 =  await window.web3.eth.personal.sign(orderHash.result, account,''); \n        let r = sig1.slice(0, 66);\n        let s = '0x' + sig1.slice(66, 130)\n        let v = '0x' + sig1.slice(130, 132) \n        let SellergetVRS = [v, r, s];\n        if(orderHash && SellergetVRS) {          \n          let contractData = { order : order, vrs : SellergetVRS };\n           var sellorder = contractData;\n\n            this.service.postRequest(\"collection/offlinesale\", { id: itemData.itemId,\"sellorder\":contractData }).subscribe((suc) => {\n            let responseData: any = suc;\n            if (responseData.status) {\n              this.sItem = responseData.data;\n               this.toasterService.show(true, responseData.msg);\n            }else{\n              this.toasterService.show(false, responseData.msg);\n            }\n            this.route.navigateByUrl('market');\n          });\n\n\n         \n        }else{\n          this.toasterService.show(false, 'Unable to sell, please try again');\n        }\n        return;\n      }\n      else {\n        this.toasterService.show(false, \"Something went wrong, Please Try Again.\");\n        this.route.navigate(['/collection']);\n        return;\n      }\n      return\n   \n  }\n\n\n\n\n  async contractPrivate(apprToken, apprTokenABI, itemData) {\n    try {\n      let apprTokenABII = JSON.parse(apprTokenABI);\n      let account = this.service.metaDeatails.account;\n      let token = ContractDetails.nft_exchange_token;\n      /*let verify = await this.nftService.verifyOwner(apprToken, apprTokenABII, itemData.selltokenid);\n      if (verify.result != account) {\n        this.toasterService.show(false, 'Invalid Owner Address, Please Verify Metamask Address');\n        return;\n      }*/\n      let approve = await this.nftService.approveSellFun(apprToken, apprTokenABII, itemData.selltokenid, account);\n      if (approve.result) {\n        window.web3 = window.web3.currentProvider;\n        window.web3 = new window.Web3(window.ethereum); \n        let pub_price  =  await this.nftService.getweiValue(itemData.price);\n        \n        let bb = new Date(itemData.enddate); \n        let salt = Math.floor((Math.random() * ((new Date()).getTime())));\n        let order = [[account,[apprToken, itemData.selltokenid, \"1\"],[\"0xae13d989dac2f0debff460ac112a837c89baa7cd\", (itemData.price*1e18).toString(), \"0\"]], (itemData.spid).toString(), (itemData.price*1e18).toString(), '40', salt.toString(), (bb.getTime()).toString(), '1'];  \n        // let order = [['0xc84928f94462F530a83A8D8E8e1FF4851255b335', [ContractDetails.nft_exchange_token, '1', 0], [ContractDetails.nft_exchange_token, '1', 1]], 1, 0.e18, 40, 1, n, 0];\n        \n        let orderHash = await this.nftService.orderHash(order);\n        let sig1 =  await window.web3.eth.personal.sign(orderHash.result, account,''); \n        let r = sig1.slice(0, 66);\n        let s = '0x' + sig1.slice(66, 130)\n        let v = '0x' + sig1.slice(130, 132) \n        let SellergetVRS = [v, r, s];\n        if(orderHash && SellergetVRS) {          \n          let contractData = { order : order, vrs : SellergetVRS };\n          this.publishData.sellorder = contractData;\n          this.service.postRequest('collection/privatesale',this.publishData).subscribe((result:any)=>{\n            if(result.status){ \n              this.toasterService.show(result.status,result.msg);\n              this.route.navigate(['collection']);\n            }else{       \n              this.toasterService.show(result.status, result.msg);\n            }\n          })\n        }else{\n          this.toasterService.show(false, 'Unable to sell, please try again');\n        }\n        return;\n      }\n      else {\n        this.toasterService.show(false, \"Something went wrong, Please Try Again.\");\n        this.route.navigate(['/collection']);\n        return;\n      }\n      return\n    }\n    catch(e) {\n\n    }\n  }\n  \n}\n\n\n","<div class=\"tabpages-cnt\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <h3 class=\"section-title\">Your Artworks Items</h3>\n    </div>\n    <div class=\"col-md-12 col-lg-12\">\n      <div class=\"card grey-cnt\">\n        <div class=\"card-body \">\n          <div class=\"row\" *ngIf=\"service.metaDeatails?.accountShort\">\n            <div class=\"col-md-6 col-sm-12\">\n              <p><a [routerLink]=\"'/import'\">Click here</a> import your NFT's</p>\n              <p>Create New Item</p>\n              <a (click)=\"myFunc(pageKey)\"><button class=\"btn default-btn\">Create</button></a>\n              <a routerLink=\"/import\"><button class=\"btn default-btn\">Import Contract</button></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row collection-block\" *ngIf=\"items.length > 0\">\n    <div class=\"col-md-12 col-lg-6 col-sm-12 col-xl-4\" *ngFor=\"let item of items;\">\n      <div class=\"act-cnt\">\n        <div class=\"act-head d-flex align-items-center justify-content-between px-2\">\n          <div class=\"d-flex\">\n            <!-- <div class=\"prof-pic-cnt mr-3\"><img src=\"assets/images/prof.png\"></div> -->\n            <div>\n             <h3 class=\"mb-0\">{{item.name}}</h3>\n             <p class=\"mb-0\">{{item.description}}</p>\n           </div>\n          </div>\n          <div class=\"d-flex\">\n            <p *ngIf=\"item.salestatus == 2\" class=\"text-danger\">Sold</p>\n          </div>\n          <!-- <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <h3 class=\"mb-0\">Tilljanz</h3>\n              <p class=\"mb-0\">Artist</p>\n            </div>\n            <div class=\"prof-pic-cnt \"><img src=\"assets/images/prof1.png\"></div>\n          </div> -->\n        </div>\n        <div *ngIf=\"item.type=='add'\">\n             <img src=\"{{item.image}}\" class=\"img-fluid w-100\">\n        </div>\n         <div *ngIf=\"item.type !='add'\">\n             <img src=\"assets/images/market1.png\" class=\"img-fluid w-100\">\n        </div>\n       \n        <div class=\"act-head\">\n          <!-- <h3>Portrait Nr.6</h3> -->\n          <div class=\"border-bottom\"></div>\n          <div class=\"row mt-2\">\n            <div class=\"col-sm-6 col-md-6 col-lg-6 text-center col-xl-6 border-right\">\n              <h3 class=\"mb-0\">{{item.price}} {{item.tocurrency}}</h3>\n              <p class=\"mb-2\">Price</p>\n            </div>\n            <!-- <div *ngIf=\"item.salestatus\" class=\"col-sm-6 col-md-6 text-center col-lg-6 col-xl-6\">\n              <h3 class=\"mb-0\">{{item.supply}}</h3>\n              <p class=\"mb-2\">Supply</p>\n            </div> -->\n            <div *ngIf=\"item.admin_mint != '0'\" class=\"col-sm-6 col-md-6 text-center col-lg-6 col-xl-6\">\n              <button (click)=\"saleItemnew(item)\" class=\"btn default-btn type-btn\">sale now</button>\n            </div>\n\n <div *ngIf=\"item.type !='add'\" class=\"col-sm-6 col-md-6 text-center col-lg-6 col-xl-6\">\n              <button (click)=\"saleItemnew(item)\" class=\"btn default-btn type-btn\">sale now</button>\n            </div>\n            \n\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  <button class=\"btn default-btn mt-4\" (click)=\"loadmore(skip)\"  *ngIf=\"items.length > 5\">Load more</button>\n  <div class=\"row\">\n    <div class=\"col-md-12 col-lg-12 text-center\" *ngIf=\"!items.length\">\n       No Item Created.\n    </div>\n  </div>\n</div>\n\n<!-- Createcollection  Modal -->\n<!-- <ng-template #Createcollection>\n    <div class=\"modalPrimary md creat-collection\" id=\"Bidapp\">\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header border-bottom-0 d-block\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"modalRef?.hide()\">&times;</button>\n                    <h3 class=\"modal-title section-title mb-0 w-100 text-center\"> Sale Your NFT </h3>\n                </div>\n                <div class=\"modal-body\">\n                    <form  #f1=\"ngForm\" (ngSubmit)=\"f1.form.valid && onModalSubmit(f1.value)\">\n                        <div class=\"row justify-content-center align-items-start\">\n                            <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\n                                <div class=\"blog-sec-cnt\">\n                                    <div *ngIf=\"saletype == 'auction'\" class=\"d-lg-flex align-items-center\">\n                                        <img src=\"images/app1.png\" class=\"img-fluid mr-3\">\n                                        <div class=\"text-left\">\n                                            <p class=\"font-16 fontweight-500 text-black mt-2 mb-4\">Bids placed during an auction cannot be withdrawn. By placing a bid you indicate that you have read and agree to the Auction Terms of Use</p>\n                                            <p class=\"font-16 fontweight-500 text-black mb-2\">Current Bid</p>\n                                            <p class=\"font-28 font-weight-bold text-black mb-0\">0.1 ETH (~$242)</p>\n                                        </div>\n                                    </div>\n                                    <h5 *ngIf=\"saletype == 'auction'\" class=\"font-16 fontweight-500 mt-4 text-black mb-2\">OLIVER CROMWELL - AI \"AFTER</h5>\n                                    <div *ngIf=\"saletype == 'auction'\" class=\"row tabpages-cnt p-0 w-auto\">\n                                        <div class=\"col-md-6 col-sm-6 col-xl-4 col-lg-6 mt-3\">\n                                            <div class=\"card grey-cnt text-center\">\n                                                <div class=\"card-body\">\n                                                    <p>Total Bit Amount</p>\n                                                    <h3 class=\"font-16 fontweight-500\">0 BNB</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6 col-sm-6 col-xl-4 col-lg-6 mt-3\">\n                                            <div class=\"card grey-cnt text-center\">\n                                                <div class=\"card-body\">\n                                                    <p>Your Balance</p>\n                                                    <h3 class=\"font-16 fontweight-500\">0 BNB</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"saletype1\">Choose Type of Sale <span class=\"text-danger\">*</span></label><br>\n                                        <select class=\"form-control\" (change)=\"saleType($event.target.value)\" #saletype1 name=\"saletype1\" required>\n                                            <option value=\"fixed\">Reserved Price</option>\n                                            <option value=\"private\">Private Sale</option>\n                                            <option value=\"auction\">Auction Bid</option>\n                                        </select>\n                                        <div *ngIf=\"f1.submitted && saletype1.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"saletype1.errors.required\">Type of Sale is required</div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"form-group mt-3 \" *ngIf=\"saletype == 'private'\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"address\">To User Address <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\"\n                                        placeholder=\"Address\" name=\"address\" [ngClass]=\"{ 'is-invalid': f1.submitted && address.invalid }\" [(ngModel)]=\"sItemObj.address\" #address=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && address.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"address.errors.required\">Address is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"buycurrency\">Buy Token</label><br>\n                                        <select name=\"buycurrency\" #buycurrency [(ngModel)]=\"sItemObj.tocurrency\" (change)=\"changeBuyCurr($event.target.value)\" [ngClass]=\"{ 'is-invalid': submitted && buycurrency.errors }\" required>\n                                            <option selected>Select Currency</option>\n                                            <option *ngFor=\"let curr of currencies\" value=\"{{curr.currencyName}}\">{{curr.currencyName}}</option>\n                                        </select>\n                                        <div *ngIf=\"f1.submitted && buycurrency.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"buycurrency.errors.required\">Choose Buy Token Type</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label *ngIf=\"saletype != 'fixed'\" class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Buy Price <span class=\"text-danger\">*</span></label><br>\n                                        <label *ngIf=\"saletype == 'fixed'\" class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Reserved Price</label><br>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\"\n                                        placeholder=\"Price\" name=\"price\" [ngClass]=\"{ 'is-invalid': f1.submitted && price.invalid }\" [(ngModel)]=\"sItemObj.price\" #price=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && price.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"price.errors.required\">Price is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \" *ngIf=\"saletype == 'auction'\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"sdate\">Start Date <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" (ngModelChange)=\"selectDate($event, 'from')\" bsDatepicker class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"DD-MM-YYYY\" name=\"sdate\" [ngClass]=\"{ 'is-invalid': f1.submitted && sdate.invalid }\" #sdate=\"ngModel\" [minDate]=\"startminDate\" [maxDate]=\"startmaxDate\" required [(ngModel)]=\"selectedFromDate\"><timepicker name=\"starttime\" [(ngModel)]=\"starttime\"></timepicker>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"endate\">Expiry Date <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" (ngModelChange)=\"selectDate($event, 'end')\" bsDatepicker [minDate]=\"endminDate\" [ngClass]=\"{ 'is-invalid': f1.submitted && endate.invalid }\" [maxDate]=\"endmaxDate\"  [bsConfig]=\"{ isAnimated: true, dateInputFormat: 'YYYY-MM-DD' }\" class=\"form-control\" placeholder=\"DD-MM-YYYY\" name=\"endate\" #endate=\"ngModel\" required [(ngModel)]=\"selectedEndDate\"><timepicker name=\"endtime\" [(ngModel)]=\"endtime\"></timepicker>\n                                    </div>\n                                     <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Supply <span class=\"text-danger\">*</span></label><br>\n                                        <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">The number of copies that can be minted.\n                                            No gas cost to you! Quantities above one coming soon.\n                                        </label>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"1\" name=\"supply\"  [ngClass]=\"{ 'is-invalid': f1.submitted && supply.invalid }\" [(ngModel)]=\"sItemObj.supply\" #supply=\"ngModel\" required readonly>\n                                        <div *ngIf=\"f1.submitted && supply.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"supply.errors.required\">Supply is required</div>\n                                        </div>\n                                    </div> -->\n                                    <!--<div class=\"form-group mt-3\" *ngIf=\"saletype == 'auction'\">\n                                        <div class=\"d-flex justify-content-between bid-block\">\n                                            <label class=\"mb-0 pb-0 font-18 font-weight-bold text-black mb-2\" for=\"yourName\">You must bid at least <span class=\"text-danger\">*</span></label>\n                                            <label class=\"mb-0 pb-0 font-18 font-weight-bold text-black mb-2\" for=\"yourName\">0.11 BNB (~$266) </label>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"Place your Bid\" name=\"bid\" [ngClass]=\"{ 'is-invalid': f1.submitted && bid.invalid }\" [(ngModel)]=\"sItemObj.bid\" #bid=\"ngModel\">\n                                        <div *ngIf=\"f1.submitted && bid.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"bid.errors.required\">Supply is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"text-center\">\n                                         <button class=\"btn  mt-4 mr-3\">Never Mind</button> \n                                        <button *ngIf=\"!msubmitted\" class=\"btn fontweight-500 default-btn mt-4\">Submit</button>\n                                        <label class=\"btn default-btn mt-4\" *ngIf=\"msubmitted\">Loading...</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template> -->\n\n\n<ng-template #Createcollection>\n    <div class=\"modalPrimary md creat-collection\" id=\"Bidapp\">\n        <div class=\"modal-dialog modal-lg modal-dialog-centered\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header border-bottom-0 d-block\">\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"modalRef?.hide()\">&times;</button>\n                    <h3 class=\"modal-title section-title mb-0 w-100 text-center\"> Sale Your Creation </h3>\n                </div>\n                <div class=\"modal-body\">\n                    <form  #f1=\"ngForm\" (ngSubmit)=\"f1.form.valid && onModalSubmit(f1.value)\">\n                        <div class=\"row justify-content-center align-items-start\">\n                            <div class=\"col-md-12 col-sm-12 col-lg-12 col-xl-12\">\n                                <div class=\"blog-sec-cnt\">\n                                    <div *ngIf=\"saletype == 'auction'\" class=\"d-lg-flex align-items-center\">\n                                        <img src=\"images/app1.png\" class=\"img-fluid mr-3\">\n                                        <div class=\"text-left\">\n                                            <p class=\"font-16 fontweight-500 text-black mt-2 mb-4\">Bids placed during an auction cannot be withdrawn. By placing a bid you indicate that you have read and agree to the Auction Terms of Use</p>\n                                            <p class=\"font-16 fontweight-500 text-black mb-2\">Current Bid</p>\n                                            <p class=\"font-28 font-weight-bold text-black mb-0\">0.1 ETH (~$242)</p>\n                                        </div>\n                                    </div>\n                                    <h5 *ngIf=\"saletype == 'auction'\" class=\"font-16 fontweight-500 mt-4 text-black mb-2\">OLIVER CROMWELL - AI \"AFTER</h5>\n                                    <div *ngIf=\"saletype == 'auction'\" class=\"row tabpages-cnt p-0 w-auto\">\n                                        <div class=\"col-md-6 col-sm-6 col-xl-4 col-lg-6 mt-3\">\n                                            <div class=\"card grey-cnt text-center\">\n                                                <div class=\"card-body\">\n                                                    <p>Total Bit Amount</p>\n                                                    <h3 class=\"font-16 fontweight-500\">0 BNB</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-md-6 col-sm-6 col-xl-4 col-lg-6 mt-3\">\n                                            <div class=\"card grey-cnt text-center\">\n                                                <div class=\"card-body\">\n                                                    <p>Your Balance</p>\n                                                    <h3 class=\"font-16 fontweight-500\">0 BNB</h3>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"saletype1\">Choose Type of Sale <span class=\"text-danger\">*</span></label><br>\n                                        <select class=\"form-control\" (change)=\"saleType($event.target.value)\" #saletype1 name=\"saletype1\" required>\n                                            <option value=\"fixed\">Reserved Price</option>\n                                            <option value=\"private\">Private Sale</option>\n                                            <option value=\"auction\">Auction Bid</option>\n                                        </select>\n                                        <div *ngIf=\"f1.submitted && saletype1.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"saletype1.errors.required\">Type of Sale is required</div>\n                                        </div>\n                                    </div>\n                                    \n                                    <div class=\"form-group mt-3 \" *ngIf=\"saletype == 'private'\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"address\">To User Address <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\"\n                                        placeholder=\"Address\" name=\"address\" [ngClass]=\"{ 'is-invalid': f1.submitted && address.invalid }\" [(ngModel)]=\"sItemObj.address\" #address=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && address.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"address.errors.required\">Address is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"currency\">Sell Token</label><br>\n                                        <select name=\"currency\" #currecy=\"ngModel\" [(ngModel)]=\"sItemObj.currency\" (change)=\"changeCurr($event.target.value)\"  required>\n                                            <option selected>Select Currency</option>\n                                            <option *ngFor=\"let curr of currencies\" value=\"{{curr.currencyName}}\">{{curr.currencyName}}</option>\n                                        </select>\n                                        <div *ngIf=\"f1.submitted && currecy.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"currecy.errors.required\">Type of Sale is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">NFT Id <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\"\n                                        placeholder=\"NFT Id\" name=\"nftid\" [ngClass]=\"{ 'is-invalid': f1.submitted && nftid.invalid }\" [(ngModel)]=\"sItemObj.nftid\" #nftid=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && nftid.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"nftid.errors.required\">NFT Id is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"currency\">Buy Token</label><br>\n                                        <select name=\"buycurrency\" #buycurrency [(ngModel)]=\"sItemObj.tocurrency\" (change)=\"changeBuyCurr($event.target.value)\" required>\n                                            <option selected>Select Currency</option>\n                                            <option *ngFor=\"let curr of currencies\" value=\"{{curr.currencyName}}\">{{curr.currencyName}}</option>\n                                        </select>\n                                        <div *ngIf=\"f1.submitted && buycurrency.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"buycurrency.errors.required\">Choose Buy Token Type</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label *ngIf=\"saletype != 'fixed'\" class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Buy Price <span class=\"text-danger\">*</span></label><br>\n                                        <label *ngIf=\"saletype == 'fixed'\" class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Reserved Price</label><br>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\"\n                                        placeholder=\"Price\" name=\"price\" [ngClass]=\"{ 'is-invalid': f1.submitted && price.invalid }\" [(ngModel)]=\"sItemObj.price\" #price=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && price.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"price.errors.required\">Price is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3 \" *ngIf=\"saletype == 'auction'\">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"sdate\">Start Date <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" (ngModelChange)=\"selectDate($event, 'from')\" bsDatepicker class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"DD-MM-YYYY\" name=\"sdate\" [ngClass]=\"{ 'is-invalid': f1.submitted && sdate.invalid }\" #sdate=\"ngModel\" [minDate]=\"startminDate\" [maxDate]=\"startmaxDate\" required [(ngModel)]=\"selectedFromDate\"><timepicker name=\"starttime\" [(ngModel)]=\"starttime\"></timepicker>\n                                        <!-- <div *ngIf=\"f1.msubmitted && sdate.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"sdate.errors.required\">Start Date is required</div>\n                                        </div> -->\n                                        <!-- <div *ngIf=\"f1.msubmitted && starttime.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"starttime.errors.required\">Start Time is required</div>\n                                        </div> -->\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"endate\">Expiry Date <span class=\"text-danger\">*</span></label><br>\n                                        <input type=\"text\" (ngModelChange)=\"selectDate($event, 'end')\" bsDatepicker [minDate]=\"endminDate\" [ngClass]=\"{ 'is-invalid': f1.submitted && endate.invalid }\" [maxDate]=\"endmaxDate\"  [bsConfig]=\"{ isAnimated: true, dateInputFormat: 'YYYY-MM-DD' }\" class=\"form-control\" placeholder=\"DD-MM-YYYY\" name=\"endate\" #endate=\"ngModel\" required [(ngModel)]=\"selectedEndDate\"><timepicker name=\"endtime\" [(ngModel)]=\"endtime\"></timepicker>\n                                        <!-- <div *ngIf=\"f1.msubmitted && endate.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"endate.errors.required\">End Date is required</div>\n                                        </div> -->\n                                        <!-- <div *ngIf=\"f1.msubmitted && endtime.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"endtime.errors.required\">End Time is required</div>\n                                        </div> -->\n                                    </div>\n                                    <div class=\"form-group mt-3 \">\n                                        <label class=\"pb-0 font-16 text-black fontweight-400 mb-2\" for=\"yourName\">Supply <span class=\"text-danger\">*</span></label><br>\n                                        <label class=\"mb-3 pb-0 font-16  fontweight-400 mb-2\">The number of copies that can be minted.\n                                            No gas cost to you! Quantities above one coming soon.\n                                        </label>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"1\" name=\"supply\" [disabled]=\"!sItem.objtype\" [ngClass]=\"{ 'is-invalid': f1.submitted && supply.invalid }\" [(ngModel)]=\"sItemObj.supply\" #supply=\"ngModel\" required>\n                                        <div *ngIf=\"f1.submitted && supply.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"supply.errors.required\">Supply is required</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group mt-3\" *ngIf=\"saletype == 'auction'\">\n                                        <div class=\"d-flex justify-content-between bid-block\">\n                                            <label class=\"mb-0 pb-0 font-18 font-weight-bold text-black mb-2\" for=\"yourName\">You must bid at least <span class=\"text-danger\">*</span></label>\n                                            <label class=\"mb-0 pb-0 font-18 font-weight-bold text-black mb-2\" for=\"yourName\">0.11 BNB (~$266) </label>\n                                        </div>\n                                        <input type=\"text\" class=\"form-control input-sec font-16 fontweight-400\" placeholder=\"Place your Bid\" name=\"bid\" [ngClass]=\"{ 'is-invalid': f1.submitted && bid.invalid }\" [(ngModel)]=\"sItemObj.bid\" #bid=\"ngModel\">\n                                        <div *ngIf=\"f1.submitted && bid.invalid\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"bid.errors.required\">Supply is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"text-center\">\n                                        <!-- <button class=\"btn  mt-4 mr-3\">Never Mind</button> -->\n                                        <button *ngIf=\"!msubmitted\" class=\"btn fontweight-500 default-btn mt-4\" type=\"submit\">Submit Bid</button>\n                                        <label class=\"btn default-btn mt-4\" *ngIf=\"msubmitted\">Loading...</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ItemsComponent } from \"./items.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { TooltipModule } from \"ngx-bootstrap/tooltip/\";\nimport { LoaderModule } from \"src/app/common/loader/loader.module\";\nimport { ModalModule } from \"ngx-bootstrap/modal\";\nimport { BsDatepickerModule, BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\n// import {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\n\nconst routes: Routes = [\n{\n  path: \"\",\n  component: ItemsComponent,\n},\n];\n\n@NgModule({\n  declarations: [ItemsComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    LoaderModule,\n    TooltipModule.forRoot(),\n    ModalModule.forRoot(),  \n    BsDatepickerModule.forRoot(),\n    TimepickerModule.forRoot(),\n    // NgxMaterialTimepickerModule,\n  ],\n})\nexport class ItemsModule {}\n"],"sourceRoot":"webpack:///"}