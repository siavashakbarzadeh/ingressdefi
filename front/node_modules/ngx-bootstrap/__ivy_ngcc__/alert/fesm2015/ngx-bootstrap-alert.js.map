{"version":3,"file":"ngx-bootstrap-alert.js","sources":["../../../../src/alert/alert.config.ts","../../../../src/alert/alert.component.ts","../../../../src/alert/alert.module.ts","../../../../src/alert/ngx-bootstrap-alert.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertConfig {\n  /** default alert type */\n  type = 'warning';\n\n  /** is alerts are dismissible by default */\n  dismissible = false;\n\n  /** default time before alert will dismiss */\n  dismissOnTimeout?: number = undefined;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { AlertConfig } from './alert.config';\nimport { OnChange } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'alert,bs-alert',\n  templateUrl: './alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AlertComponent implements OnInit {\n  /** Alert type.\n   * Provides one of four bootstrap supported contextual classes:\n   * `success`, `info`, `warning` and `danger`\n   */\n  @Input() type = 'warning';\n  /** If set, displays an inline \"Close\" button */\n  @OnChange()   @Input()   dismissible = false;\n  /** Number in milliseconds, after which alert will be closed */\n  @Input() dismissOnTimeout?: number | string;\n\n  /** Is alert visible */\n  @Input() isOpen = true;\n\n  /** This event fires immediately after close instance method is called,\n   * $event is an instance of Alert component.\n   */\n  @Output() onClose = new EventEmitter<AlertComponent>();\n  /** This event fires when alert closed, $event is an instance of Alert component */\n  @Output() onClosed = new EventEmitter<AlertComponent>();\n\n\n  classes = '';\n  dismissibleChange = new EventEmitter<boolean>();\n\n  constructor(_config: AlertConfig, private changeDetection: ChangeDetectorRef) {\n    Object.assign(this, _config);\n    this.dismissibleChange.subscribe((/*dismissible: boolean*/) => {\n      this.classes = this.dismissible ? 'alert-dismissible' : '';\n      this.changeDetection.markForCheck();\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.dismissOnTimeout) {\n      // if dismissOnTimeout used as attr without binding, it will be a string\n      setTimeout(\n        () => this.close(),\n        parseInt(this.dismissOnTimeout as string, 10)\n      );\n    }\n  }\n\n  // todo: animation ` If the .fade and .in classes are present on the element,\n  // the alert will fade out before it is removed`\n  /**\n   * Closes an alert by removing it from the DOM.\n   */\n  close(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.onClose.emit(this);\n    this.isOpen = false;\n    this.changeDetection.markForCheck();\n    this.onClosed.emit(this);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AlertComponent } from './alert.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AlertComponent],\n  exports: [AlertComponent],\n  entryComponents: [AlertComponent]\n})\nexport class AlertModule {\n  static forRoot(): ModuleWithProviders<AlertModule> {\n    return { ngModule: AlertModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}