{"version":3,"file":"ngx-bootstrap-pagination.js","sources":["../../../../src/pagination/pagination.config.ts","../../../../src/pagination/pager.component.ts","../../../../src/pagination/pagination.component.ts","../../../../src/pagination/pagination.module.ts","../../../../src/pagination/ngx-bootstrap-pagination.ts"],"names":[],"mappings":";;;;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAGa,gBAAgB;AAC7B,IAJA;AACE,QAGA,SAAI,GAAyB;AAC/B,YAAI,YAAY,EAAE,EAAE;AACpB,YAAI,aAAa,EAAE,KAAK;AACxB,YAAI,cAAc,EAAE,IAAI;AACxB,YAAI,SAAS,EAAE,OAAO;AACtB,YAAI,YAAY,EAAE,UAAU;AAC5B,YAAI,QAAQ,EAAE,MAAM;AACpB,YAAI,QAAQ,EAAE,MAAM;AACpB,YAAI,YAAY,EAAE,EAAE;AACpB,YAAI,MAAM,EAAE,IAAI;AAChB,SAAG,CAAC;AACJ,QAAE,UAAK,GAAe;AACtB,YAAI,YAAY,EAAE,EAAE;AACpB,YAAI,YAAY,EAAE,YAAY;AAC9B,YAAI,QAAQ,EAAE,QAAQ;AACtB,YAAI,YAAY,EAAE,EAAE;AACpB,YAAI,KAAK,EAAE,IAAI;AACf,SAAG,CAAC;AACJ,KAAC;AACD;uGAAC;AAAC;4CAvBD,UAAU,SAAC;MACV,UAAU,EAAE,MAAM;YACnB;;;gDACI;AAAC;AAAC,MCSM,4BAA4B,GAAa;AACtD,IAAE,OAAO,EAAE,iBAAiB;AAC5B,IAAE,WAAW,EAAE,UAAU,CAAC,MAAM,cAAc,CAAC;AAC/C,IAAE,KAAK,EAAE,IAAI;AACb,EAAE;AACF,MAMa,cAAc;AAAG,IAyC5B,YAAoB,UAAsB,EAC9B,gBAAkC,EAC1B,eAAkC;AACxD,QAHsB,eAAU,GAAV,UAAU,CAAY;AAAC,QAEvB,oBAAe,GAAf,eAAe,CAAmB;AAAC;AAGtD,QA3CQ,UAAK,GAAG,KAAK,CAAC;AACzB;AACgB,QAEL,kBAAa,GAAG,KAAK,CAAC;AACjC;AACM,QAAK,mBAAc,GAAG,IAAI,CAAC;AACjC;AACM;AACM,QAAD,cAAS,GAAG,OAAO,CAAC;AAC/B;AACM,QAAK,iBAAY,GAAG,YAAY,CAAC;AACvC;AACM,QAAK,aAAQ,GAAG,QAAQ,CAAC;AAC/B;AACM,QAAK,aAAQ,GAAG,MAAM,CAAC;AAC7B;AACM,QAAK,WAAM,GAAG,IAAI,CAAC;AACzB;AACM;AACM,QAAD,iBAAY,GAAG,EAAE,CAAC;AAC7B;AAEK,QAAM,aAAQ,GAAG,KAAK,CAAC;AAC5B;AAEK,QAAO,aAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;AAClD;AACM;AAEA;AACA,QAAJ,gBAAW,GAAG,IAAI,YAAY,EAAoB,CAAC;AACrD,QAAE,aAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC;AAChC,QAAE,cAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;AACjC,QAAE,aAAQ,GAAG,EAAE,CAAC;AAChB,QACY,WAAM,GAAG,KAAK,CAAC;AAC3B,QAYY,kBAAa,GAAG,EAAE,CAAC;AAC/B,QAYY,gBAAW,GAAG,CAAC,CAAC;AAC5B,QAYY,gBAAW,GAAG,CAAC,CAAC;AAC5B,QAaY,UAAK,GAAG,CAAC,CAAC;AACtB,QAjDI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,IAAI,CAAC,gBAAgB,CACnB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC,CACjE,CAAC;AACR,SAAK;AACL,KAAG;AACH;AAGmE,IACjE,IACI,YAAY;AAAK,QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH,IACE,IAAI,YAAY,CAAC,CAAS;AAC5B,QAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD,KAAG;AACH;AAGe,IACb,IACI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH,IACE,IAAI,UAAU,CAAC,CAAS;AAC1B,QAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACzB,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD,KAAG;AACH,IAGE,IAAI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH,IACE,IAAI,UAAU,CAAC,CAAS;AAC1B,QAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,SAAK;AACL,KAAG;AACH,IAGE,IAAI,IAAI;AAAK,QACX,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,KAAG;AACH,IACE,IAAI,IAAI,CAAC,KAAa;AACxB,QAAI,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAI,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,IAAI,CAAC,CAAC;AACxE,QAAI,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;AACxC,QACI,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AACtE,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AAC1B,YAAM,IAAI,EAAE,IAAI,CAAC,KAAK;AACtB,YAAM,YAAY,EAAE,IAAI,CAAC,YAAY;AACrC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,gBAAgB,CAAC,MAA4B;AAAI,QAC/C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAC5C,KAAG;AACH,IACE,QAAQ;AAAK;AACe,QAA1B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACvC,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AAChF,SAAK;AACL;AACI,QAAA,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;AAC7C,YAAM,IAAI,CAAC,OAAO,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,KAAI,CAAC,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;AAC5C,YAAM,IAAI,CAAC,MAAM,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,MAAM,CAAA,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,WAAW,EAAE;AACnD,YAAM,IAAI,CAAC,aAAa,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,aAAa,CAAA,CAAC;AACxD,SAAK;AACL,QAEI,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;AACpD,YAAM,IAAI,CAAC,cAAc,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,cAAc,CAAA,CAAC;AAC1D,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;AAClD,YAAM,IAAI,CAAC,YAAY,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,YAAY,KAAI,EAAE,CAAC;AAC1D,SAAK;AACL;AAEG,QAAC,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;AAClD,YAAM,IAAI,CAAC,YAAY,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,YAAY,KAAI,CAAC,CAAC;AACzD,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD;AACI,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,QAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACvB,KAAG;AACH,IACE,UAAU,CAAC,KAAa;AAAI,QAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACtB,QAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,KAAG;AACH,IACE,OAAO,CAAC,GAAW;AAAI;AACsC,QAC3D,OAAQ,IAAY,CAAC,GAAG,GAAG,MAAM,CAAC,IAAK,IAAY,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;AAC7E,KAAG;AACH,IACE,UAAU;AAAK,QACb,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;AAC3B,KAAG;AACH,IACE,MAAM;AAAK,QACT,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC;AACzC,KAAG;AACH,IACE,gBAAgB,CAAC,EAAc;AAAI,QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH,IACE,iBAAiB,CAAC,EAAc;AAAI,QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH,IACE,UAAU,CAAC,IAAY,EAAE,KAAa;AAAI,QACxC,IAAI,KAAK,EAAE;AACf,YAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxB,YAAM,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;AACjC;AACQ,gBAAA,MAAM,MAAM,GAAQ,KAAK,CAAC,MAAM,CAAC;AACzC,gBAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;AACtB,aAAO;AACP,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AAEC,IAAW,QAAQ,CAAC,GAAW,EACX,IAAY,EACZ,MAAe;AAAI,QACpC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AACzC,KAAG;AACH,IACY,QAAQ,CAAC,WAAmB,EAAE,UAAkB;AAAI,QAC5D,MAAM,KAAK,GAAiB,EAAE,CAAC;AACnC;AAEG,QAAC,IAAI,SAAS,GAAG,CAAC,CAAC;AACtB,QAAI,IAAI,OAAO,GAAG,UAAU,CAAC;AAC7B,QAAI,MAAM,UAAU,GACd,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;AACvE;AAEG,QAAC,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;AACpC,YAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACvB;AACQ,gBAAA,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5E,gBAAQ,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAC/C;AAEO,gBAAC,IAAI,OAAO,GAAG,UAAU,EAAE;AAClC,oBAAU,OAAO,GAAG,UAAU,CAAC;AAC/B,oBAAU,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACjD,iBAAS;AACT,aAAO;AAAC,iBAAK;AACb;AACQ,gBAAA,SAAS;AACjB,oBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACzE;AAEO,gBAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AACrE,aAAO;AACP,SAAK;AACL;AAEG,QAAC,KAAK,IAAI,GAAG,GAAG,SAAS,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE;AACrD,YAAM,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,KAAK,WAAW,CAAC,CAAC;AAC3E,YAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,SAAK;AACL;AAEG,QAAC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACpC,YAAM,IAAI,SAAS,GAAG,CAAC,EAAE;AACzB,gBAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3E,gBAAQ,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACvC,aAAO;AACP,YACM,IAAI,OAAO,GAAG,UAAU,EAAE;AAChC,gBAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACrE,gBAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChC,aAAO;AACP,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEC,IAAW,mBAAmB;AAAK,QAChC,MAAM,UAAU,GACd,IAAI,CAAC,YAAY,GAAG,CAAC;AAC3B,cAAU,CAAC;AACX,cAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,QACI,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,KAAG;AACH;0CA9QC,SAAS,SAAC,kBACT,QAAQ,EAAE,OAAO,kBACjB;6aAAqC,kBACrC,SAAS,EAAE,CAAC,4BAA4B,CAAC,cAC1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DACI;AAAC;AAAwC,YA1B5C,UAAU;AACV,YAYO,gBAAgB;AAAI,YAf3B,iBAAiB;AAClB;AAAG;AAEO,oBA4BR,KAAK;AAAK,sBAEV,KAAK;AAAK,4BAEV,KAAK;AAAK,6BAEV,KAAK;AAAK,wBAGV,KAAK;AAAK,2BAEV,KAAK;AAAK,uBAEV,KAAK;AAAK,uBAEV,KAAK;AAAK,qBAEV,KAAK;AAAK,2BAGV,KAAK;AAAK,uBAGV,KAAK;AAAK,uBAGV,MAAM;AAAK,0BAIX,MAAM;AACP,2BAqBC,KAAK;AACN,yBAYC,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MC5EQ,iCAAiC,GAAa;AAC3D,IAAE,OAAO,EAAE,iBAAiB;AAC5B,IAAE,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;AACpD,IAAE,KAAK,EAAE,IAAI;AACb,EAAE;AACF,MAMa,mBAAmB;AAAG,IAiDjC,YACU,UAAsB,EAC9B,gBAAkC,EAC1B,eAAkC;AAC3C,QAHS,eAAU,GAAV,UAAU,CAAY;AAAC,QAEvB,oBAAe,GAAf,eAAe,CAAmB;AAC9C;AAGA,QArDW,UAAK,GAAG,IAAI,CAAC;AACxB;AACgB,QAEL,kBAAa,GAAG,KAAK,CAAC;AACjC;AACM,QAAK,mBAAc,GAAG,IAAI,CAAC;AACjC;AACM;AACM,QAAD,cAAS,GAAG,OAAO,CAAC;AAC/B;AACM,QAAK,iBAAY,GAAG,UAAU,CAAC;AACrC;AACM,QAAK,aAAQ,GAAG,MAAM,CAAC;AAC7B;AACM,QAAK,aAAQ,GAAG,MAAM,CAAC;AAC7B;AACM,QAAK,WAAM,GAAG,IAAI,CAAC;AACzB;AACM;AACM,QAAD,iBAAY,GAAG,EAAE,CAAC;AAC7B;AACM,QAAK,aAAQ,GAAG,KAAK,CAAC;AAC5B;AACwD,QAW5C,aAAQ,GAAG,IAAI,YAAY,EAAU,CAAC;AAClD;AACM;AAEA;AAAY,QAAN,gBAAW,GAAG,IAAI,YAAY,EAAoB,CAAC;AAC/D,QAAE,aAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC;AAChC,QAAE,cAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;AACjC,QAAE,aAAQ,GAAG,EAAE,CAAC;AAChB,QACY,WAAM,GAAG,KAAK,CAAC;AAC3B,QAYY,kBAAa,GAAG,EAAE,CAAC;AAC/B,QAYY,gBAAW,GAAG,CAAC,CAAC;AAC5B,QAYY,gBAAW,GAAG,CAAC,CAAC;AAC5B,QAaY,UAAK,GAAG,CAAC,CAAC;AACtB,QA/CI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,QAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtB,YAAM,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACnD,SAAK;AACL,KAAG;AACH;AAGmE,IACjE,IACI,YAAY;AAAK,QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,KAAG;AACH,IACE,IAAI,YAAY,CAAC,CAAS;AAC5B,QAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;AAC3B,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD,KAAG;AACH;AAGe,IACb,IACI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH,IACE,IAAI,UAAU,CAAC,CAAS;AAC1B,QAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACzB,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD,KAAG;AACH,IAGE,IAAI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,KAAG;AACH,IACE,IAAI,UAAU,CAAC,CAAS;AAC1B,QAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACzB,QAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1B,QAAI,IAAI,IAAI,CAAC,MAAM,EAAE;AACrB,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,SAAK;AACL,KAAG;AACH,IAGE,IAAI,IAAI;AAAK,QACX,OAAO,IAAI,CAAC,KAAK,CAAC;AACtB,KAAG;AACH,IACE,IAAI,IAAI,CAAC,KAAa;AACxB,QAAI,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,QAAI,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,IAAI,CAAC,CAAC;AACxE,QAAI,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;AACxC,QACI,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,IAAI,OAAO,SAAS,KAAK,WAAW,EAAE;AACtE,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;AAC1B,YAAM,IAAI,EAAE,IAAI,CAAC,KAAK;AACtB,YAAM,YAAY,EAAE,IAAI,CAAC,YAAY;AACrC,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,gBAAgB,CAAC,MAA4B;AAAI,QAC/C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAC5C,KAAG;AACH,IACE,QAAQ;AAAK;AACe,QAA1B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACvC,YAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AAChF,SAAK;AACL;AAEG,QAAC,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;AAC7C,YAAM,IAAI,CAAC,OAAO,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,KAAI,CAAC,CAAC;AAC/C,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,EAAE;AAC5C,YAAM,IAAI,CAAC,MAAM,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,MAAM,CAAA,CAAC;AAC1C,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,aAAa,KAAK,WAAW,EAAE;AACnD,YAAM,IAAI,CAAC,aAAa,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,aAAa,CAAA,CAAC;AACxD,SAAK;AACL,QAEI,IAAI,OAAO,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;AACpD,YAAM,IAAI,CAAC,cAAc,GAAG,CAAC,QAAC,IAAI,CAAC,MAAM,0CAAE,cAAc,CAAA,CAAC;AAC1D,SAAK;AACL,QACI,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;AAClD,YAAM,IAAI,CAAC,YAAY,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,YAAY,KAAI,EAAE,CAAC;AAC1D,SAAK;AACL;AAEG,QAAC,IAAI,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW,EAAE;AAClD,YAAM,IAAI,CAAC,YAAY,GAAG,OAAA,IAAI,CAAC,MAAM,0CAAE,YAAY,KAAI,CAAC,CAAC;AACzD,SAAK;AACL,QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;AACjD;AACI,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,QAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACvB,KAAG;AACH,IACE,UAAU,CAAC,KAAa;AAAI,QAC1B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACtB,QAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,KAAG;AACH,IACE,OAAO,CAAC,GAAW;AAAI;AACsC,QAC3D,OAAQ,IAAY,CAAC,GAAG,GAAG,MAAM,CAAC,IAAK,IAAY,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC;AAC7E,KAAG;AACH,IACE,UAAU;AAAK,QACb,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;AAC3B,KAAG;AACH,IACE,MAAM;AAAK,QACT,OAAO,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC;AACzC,KAAG;AACH,IACE,gBAAgB,CAAC,EAAc;AAAI,QACjC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,KAAG;AACH,IACE,iBAAiB,CAAC,EAAc;AAAI,QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH,IACE,UAAU,CAAC,IAAY,EAAE,KAAa;AAAI,QACxC,IAAI,KAAK,EAAE;AACf,YAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,SAAK;AACL,QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACxB,YAAM,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;AACjC;AACQ,gBAAA,MAAM,MAAM,GAAQ,KAAK,CAAC,MAAM,CAAC;AACzC,gBAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;AACtB,aAAO;AACP,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5B,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,SAAK;AACL,KAAG;AACH;AAEC,IAAW,QAAQ,CAChB,GAAW,EACX,IAAY,EACZ,MAAe;AAChB,QACC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;AACzC,KAAG;AACH,IACY,QAAQ,CAAC,WAAmB,EAAE,UAAkB;AAAI,QAC5D,MAAM,KAAK,GAAiB,EAAE,CAAC;AACnC;AAEG,QAAC,IAAI,SAAS,GAAG,CAAC,CAAC;AACtB,QAAI,IAAI,OAAO,GAAG,UAAU,CAAC;AAC7B,QAAI,MAAM,UAAU,GACd,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;AACvE;AAEG,QAAC,IAAI,UAAU,IAAI,IAAI,CAAC,OAAO,EAAE;AACpC,YAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACvB;AACQ,gBAAA,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5E,gBAAQ,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAC/C;AAEO,gBAAC,IAAI,OAAO,GAAG,UAAU,EAAE;AAClC,oBAAU,OAAO,GAAG,UAAU,CAAC;AAC/B,oBAAU,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACjD,iBAAS;AACT,aAAO;AAAC,iBAAK;AACb;AACQ,gBAAA,SAAS;AACjB,oBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AACzE;AAEO,gBAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC;AACrE,aAAO;AACP,SAAK;AACL;AAEG,QAAC,KAAK,IAAI,GAAG,GAAG,SAAS,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE;AACrD,YAAM,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAG,KAAK,WAAW,CAAC,CAAC;AAC3E,YAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,SAAK;AACL;AAEG,QAAC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACpC,YAAM,IAAI,SAAS,GAAG,CAAC,EAAE;AACzB,gBAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3E,gBAAQ,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;AACvC,aAAO;AACP,YACM,IAAI,OAAO,GAAG,UAAU,EAAE;AAChC,gBAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACrE,gBAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChC,aAAO;AACP,SAAK;AACL,QACI,OAAO,KAAK,CAAC;AACjB,KAAG;AACH;AAEC,IAAW,mBAAmB;AAAK,QAChC,MAAM,UAAU,GACd,IAAI,CAAC,YAAY,GAAG,CAAC;AAC3B,cAAU,CAAC;AACX,cAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;AACzD,QACI,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,KAAG;AACH;+CAzRC,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,kBACtB;;;;;;;;;;;0EAA0C,kBAC1C,SAAS,EAAE,CAAC;AAAiC,CAAC,cAC/C;;;;;;;;;;;;;;iHACI;AAAC;AAA6C,YA9BjD,UAAU;AACV,YAWO,gBAAgB;AAAI,YAd3B,iBAAiB;AAClB;AAAG;AAGJ,oBA+BG,KAAK;AAAK,sBAEV,KAAK;AAAK,4BAEV,KAAK;AAAK,6BAEV,KAAK;AAAK,wBAGV,KAAK;AAAK,2BAEV,KAAK;AAAK,uBAEV,KAAK;AAAK,uBAEV,KAAK;AAAK,qBAEV,KAAK;AAAK,2BAGV,KAAK;AAAK,uBAEV,KAAK;AAAK,iCAEV,KAAK;AAAK,iCAEV,KAAK;AAAK,qCAEV,KAAK;AAAK,kCAEV,KAAK;AAAK,iCAEV,KAAK;AAAK,uBAGV,MAAM;AAAK,0BAIX,MAAM;AAAK,2BAqBX,KAAK;AACN,yBAYC,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCnGQ,gBAAgB;AAC7B,IAAE,OAAO,OAAO;AAAK,QACjB,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC;AACzD,KAAG;AACH;4CATC,QAAQ,SAAC;EACR,OAAO,EAAE,CAAC,YAAY,CAAC,kBACvB,YAAY,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC,kBACnD,OAAO,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC;GAC/C;;;;;;;;0BACI;AAAC;ACXN;AACA;AACA;AACA;AACA;AAGiE","sourcesContent":["// todo: split\nimport { Injectable } from '@angular/core';\n\nimport { ConfigModel, PagerModel } from './models';\n\n/** Provides default values for Pagination and pager components */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationConfig {\n  main: Partial<ConfigModel> = {\n    itemsPerPage: 10,\n    boundaryLinks: false,\n    directionLinks: true,\n    firstText: 'First',\n    previousText: 'Previous',\n    nextText: 'Next',\n    lastText: 'Last',\n    pageBtnClass: '',\n    rotate: true\n  };\n  pager: PagerModel = {\n    itemsPerPage: 15,\n    previousText: '« Previous',\n    nextText: 'Next »',\n    pageBtnClass: '',\n    align: true\n  };\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ConfigModel, PagesModel } from './models';\n\nimport { PageChangedEvent } from './pagination.component';\nimport { PaginationConfig } from './pagination.config';\n\nexport const PAGER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PagerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pager',\n  templateUrl: './pager.component.html',\n  providers: [PAGER_CONTROL_VALUE_ACCESSOR]\n})\nexport class PagerComponent implements ControlValueAccessor, OnInit {\n  config?: Partial<ConfigModel>;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align = false;\n  /** limit number for page links in pager */\n  @Input() maxSize?: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks = false;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks = true;\n  // labels\n  /** first button text */\n  @Input() firstText = 'First';\n  /** previous button text */\n  @Input() previousText = '« Previous';\n  /** next button text */\n  @Input() nextText = 'Next »';\n  /** last button text */\n  @Input() lastText = 'Last';\n  /** if true current page will in the middle of pages list */\n  @Input() rotate = true;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass = '';\n\n  /** if true pagination component will be disabled */\n  @Input() disabled = false;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to\n   * object with current page index and number of items per page\n   */\n  @Output()\n  pageChanged = new EventEmitter<PageChangedEvent>();\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  classMap = '';\n  pages?: PagesModel[];\n  protected inited = false;\n\n  constructor(private elementRef: ElementRef,\n              paginationConfig: PaginationConfig,\n              private changeDetection: ChangeDetectorRef) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(\n        Object.assign({}, paginationConfig.main, paginationConfig.pager)\n      );\n    }\n  }\n\n  protected _itemsPerPage = 15;\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalItems = 0;\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalPages = 0;\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  protected _page = 1;\n\n  get page(): number {\n    return this._page;\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  configureOptions(config: Partial<ConfigModel>): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n\n\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(num: number,\n                     text: string,\n                     active: boolean): { number: number; text: string; active: boolean } {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  Provider,\n  TemplateRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ConfigModel, PagesModel, PaginationLinkContext, PaginationNumberLinkContext } from './models';\n\nimport { PaginationConfig } from './pagination.config';\n\nexport interface PageChangedEvent {\n  itemsPerPage: number;\n  page: number;\n}\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'pagination',\n  templateUrl: './pagination.component.html',\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\n  config?: Partial<ConfigModel>;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() align = true;\n  /** limit number for page links in pager */\n  @Input() maxSize?: number;\n  /** if false first and last buttons will be hidden */\n  @Input() boundaryLinks = false;\n  /** if false previous and next buttons will be hidden */\n  @Input() directionLinks = true;\n  // labels\n  /** first button text */\n  @Input() firstText = 'First';\n  /** previous button text */\n  @Input() previousText = 'Previous';\n  /** next button text */\n  @Input() nextText = 'Next';\n  /** last button text */\n  @Input() lastText = 'Last';\n  /** if true current page will in the middle of pages list */\n  @Input() rotate = true;\n  // css\n  /** add class to <code><li\\></code> */\n  @Input() pageBtnClass = '';\n  /** if true pagination component will be disabled */\n  @Input() disabled = false;\n  /** custom template for page link */\n  @Input() customPageTemplate?: TemplateRef<PaginationNumberLinkContext>;\n  /** custom template for next link */\n  @Input() customNextTemplate?: TemplateRef<PaginationLinkContext>;\n  /** custom template for previous link */\n  @Input() customPreviousTemplate?: TemplateRef<PaginationLinkContext>;\n  /** custom template for first link */\n  @Input() customFirstTemplate?: TemplateRef<PaginationLinkContext>;\n  /** custom template for last link */\n  @Input() customLastTemplate?: TemplateRef<PaginationLinkContext>;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() numPages = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object\n   * with current page index and number of items per page\n   */\n  @Output() pageChanged = new EventEmitter<PageChangedEvent>();\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n  classMap = '';\n  pages?: PagesModel[];\n  protected inited = false;\n\n  constructor(\n    private elementRef: ElementRef,\n    paginationConfig: PaginationConfig,\n    private changeDetection: ChangeDetectorRef\n  ) {\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n\n  protected _itemsPerPage = 10;\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalItems = 0;\n\n  /** total number of items in all pages */\n  @Input()\n  get totalItems(): number {\n    return this._totalItems;\n  }\n\n  set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  protected _totalPages = 0;\n\n  get totalPages(): number {\n    return this._totalPages;\n  }\n\n  set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  protected _page = 1;\n\n  get page(): number {\n    return this._page;\n  }\n\n  set page(value: number) {\n    const _previous = this._page;\n    this._page = value > this.totalPages ? this.totalPages : value || 1;\n    this.changeDetection.markForCheck();\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  configureOptions(config: Partial<ConfigModel>): void {\n    this.config = Object.assign({}, config);\n  }\n\n  ngOnInit(): void {\n    if (typeof window !== 'undefined') {\n      this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    }\n\n    // watch for maxSize\n    if (typeof this.maxSize === 'undefined') {\n      this.maxSize = this.config?.maxSize || 0;\n    }\n\n    if (typeof this.rotate === 'undefined') {\n      this.rotate = !!this.config?.rotate;\n    }\n\n    if (typeof this.boundaryLinks === 'undefined') {\n      this.boundaryLinks = !!this.config?.boundaryLinks;\n    }\n\n\n    if (typeof this.directionLinks === 'undefined') {\n      this.directionLinks = !!this.config?.directionLinks;\n    }\n\n    if (typeof this.pageBtnClass === 'undefined') {\n      this.pageBtnClass = this.config?.pageBtnClass || '';\n    }\n\n    // base class\n    if (typeof this.itemsPerPage === 'undefined') {\n      this.itemsPerPage = this.config?.itemsPerPage || 0;\n    }\n\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  getText(key: string): string {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (this as any)[`${key}Text`] || (this as any).config[`${key}Text`];\n  }\n\n  noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(\n    num: number,\n    text: string,\n    active: boolean\n  ): { number: number; text: string; active: boolean } {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): PagesModel[] {\n    const pages: PagesModel[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized =\n      typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized && this.maxSize) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage =\n          (Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages =\n      this.itemsPerPage < 1\n        ? 1\n        : Math.ceil(this.totalItems / this.itemsPerPage);\n\n    return Math.max(totalPages || 0, 1);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { PagerComponent } from './pager.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PagerComponent, PaginationComponent],\n  exports: [PagerComponent, PaginationComponent]\n})\nexport class PaginationModule {\n  static forRoot(): ModuleWithProviders<PaginationModule> {\n    return { ngModule: PaginationModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {PAGER_CONTROL_VALUE_ACCESSOR as ɵa} from './pager.component';\nexport {PAGINATION_CONTROL_VALUE_ACCESSOR as ɵb} from './pagination.component';"]}