{"version":3,"file":"ngx-bootstrap-progressbar.js","sources":["../../../../src/progressbar/bar.component.ts","../../../../src/progressbar/progressbar.config.ts","../../../../src/progressbar/progressbar.component.ts","../../../../src/progressbar/progressbar.module.ts","../../../../src/progressbar/ngx-bootstrap-progressbar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { ProgressbarType } from './progressbar-type.interface';\n\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar]': 'true',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"',\n    '[style.width.%]': 'percent'\n  }\n})\nexport class BarComponent implements OnChanges {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** current value of progress bar */\n  @Input() value? = 0;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate? = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped? = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType = 'info';\n\n  percent = 100;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  private _prevType?: string;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value || changes.max) {\n      this.percent = 100 * (Number(changes.value.currentValue || 0)\n        / Number((changes.max?.currentValue || this.max) || 100));\n    }\n\n    if (changes.type) {\n      this.applyTypeClasses();\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = void 0;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BarValue, ProgressbarType } from './progressbar-type.interface';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.progress]': 'true',\n    '[attr.max]': 'max'\n  },\n  styles: [`\n    :host {\n      width: 100%;\n      display: flex;\n    } `]\n})\nexport class ProgressbarComponent {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType;\n\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  set value(value: number | BarValue[]) {\n    this.isStacked = Array.isArray(value);\n    if (typeof value === 'number') {\n      this._value = value;\n      this._values = void 0;\n    } else {\n      this._value = void 0;\n      this._values = value;\n    }\n  }\n\n  isStacked = false;\n  _value? = 0;\n  _values?: BarValue[];\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return { ngModule: ProgressbarModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}