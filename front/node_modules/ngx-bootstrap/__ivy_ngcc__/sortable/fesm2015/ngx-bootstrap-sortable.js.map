{"version":3,"file":"ngx-bootstrap-sortable.js","sources":["../../../../src/sortable/draggable-item.service.ts","../../../../src/sortable/sortable.component.ts","../../../../src/sortable/sortable.module.ts","../../../../src/sortable/ngx-bootstrap-sortable.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DraggableItem } from './draggable-item';\n\n@Injectable()\nexport class DraggableItemService {\n  private draggableItem?: DraggableItem;\n\n  private onCapture: Subject<DraggableItem> = new Subject<DraggableItem>();\n\n  dragStart(item: DraggableItem): void {\n    this.draggableItem = item;\n  }\n\n  getItem(): DraggableItem | undefined {\n    return this.draggableItem;\n  }\n\n  captureItem(overZoneIndex: number, newIndex: number): DraggableItem | undefined {\n    if (this.draggableItem && this.draggableItem.overZoneIndex !== overZoneIndex) {\n      this.draggableItem.lastZoneIndex = this.draggableItem.overZoneIndex;\n      this.draggableItem.overZoneIndex = overZoneIndex;\n      this.onCapture.next(this.draggableItem);\n      this.draggableItem = Object.assign({}, this.draggableItem, {\n        overZoneIndex,\n        i: newIndex\n      });\n    }\n\n    return this.draggableItem;\n  }\n\n  onCaptureItem(): Subject<DraggableItem> {\n    return this.onCapture;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  forwardRef,\n  TemplateRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DraggableItem } from './draggable-item';\nimport { DraggableItemService } from './draggable-item.service';\n\n@Component({\n  selector: 'bs-sortable',\n  exportAs: 'bs-sortable',\n  template: `\n<div\n    [ngClass]=\"wrapperClass\"\n    [ngStyle]=\"wrapperStyle\"\n    (dragover)=\"cancelEvent($event)\"\n    (dragenter)=\"cancelEvent($event)\"\n    (drop)=\"resetActiveItem($event)\"\n    (mouseleave)=\"resetActiveItem($event)\">\n  <div\n        *ngIf=\"showPlaceholder\"\n        [ngClass]=\"placeholderClass\"\n        [ngStyle]=\"placeholderStyle\"\n        (dragover)=\"onItemDragover($event, 0)\"\n        (dragenter)=\"cancelEvent($event)\"\n    >{{placeholderItem}}</div>\n    <div\n        *ngFor=\"let item of items; let i=index;\"\n        [ngClass]=\"[ itemClass, i === activeItem ? itemActiveClass : '' ]\"\n        [ngStyle]=\"getItemStyle(i === activeItem)\"\n        draggable=\"true\"\n        (dragstart)=\"onItemDragstart($event, item, i)\"\n        (dragend)=\"resetActiveItem($event)\"\n        (dragover)=\"onItemDragover($event, i)\"\n        (dragenter)=\"cancelEvent($event)\"\n        aria-dropeffect=\"move\"\n        [attr.aria-grabbed]=\"i === activeItem\"\n    ><ng-template [ngTemplateOutlet]=\"itemTemplate || defItemTemplate\"\n  [ngTemplateOutletContext]=\"{item:item, index: i}\"></ng-template></div>\n</div>\n\n<ng-template #defItemTemplate let-item=\"item\">{{item.value}}</ng-template>\n`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => SortableComponent),\n      multi: true\n    }\n  ]\n})\nexport class SortableComponent implements ControlValueAccessor {\n  private static globalZoneIndex = 0;\n  /** field name if input array consists of objects */\n  @Input() fieldName?: string;\n\n  /** class name for items wrapper */\n  @Input() wrapperClass = '';\n\n  /** style object for items wrapper */\n  @Input() wrapperStyle: Record<string, string> = {};\n\n  /** class name for item */\n  @Input() itemClass = '';\n\n  /** style object for item */\n  @Input() itemStyle: Record<string, string> = {};\n\n  /** class name for active item */\n  @Input() itemActiveClass = '';\n\n  /** style object for active item */\n  @Input() itemActiveStyle: Record<string, string> = {};\n\n  /** class name for placeholder */\n  @Input() placeholderClass = '';\n\n  /** style object for placeholder */\n  @Input() placeholderStyle: Record<string, string> = {};\n\n  /** placeholder item which will be shown if collection is empty */\n  @Input() placeholderItem = '';\n\n  /** used to specify a custom item template. Template variables: item and index; */\n  @Input() itemTemplate?: TemplateRef<unknown>;\n\n  /** fired on array change (reordering, insert, remove), same as <code>ngModelChange</code>.\n   *  Returns new items collection as a payload.\n   */\n  @Output() onChange: EventEmitter<unknown[]> = new EventEmitter<unknown[]>();\n\n  showPlaceholder = false;\n  activeItem = -1;\n\n  get items(): SortableItem[] {\n    return this._items;\n  }\n\n  set items(value: SortableItem[]) {\n    this._items = value;\n    const out = this.items.map((x: SortableItem) => x.initData);\n    this.onChanged(out);\n    this.onChange.emit(out);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onTouched: any = Function.prototype;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onChanged: any = Function.prototype;\n\n  private transfer: DraggableItemService;\n  private currentZoneIndex: number;\n  private _items: SortableItem[] = [];\n\n  constructor(transfer: DraggableItemService) {\n    this.transfer = transfer;\n    this.currentZoneIndex = SortableComponent.globalZoneIndex++;\n    this.transfer\n      .onCaptureItem()\n      .subscribe((item: DraggableItem) => this.onDrop(item));\n  }\n\n  onItemDragstart(\n    event: DragEvent,\n    item: SortableItem,\n    i: number\n  ): void {\n    this.initDragstartEvent(event);\n    this.onTouched();\n    this.transfer.dragStart({\n      event,\n      item,\n      i,\n      initialIndex: i,\n      lastZoneIndex: this.currentZoneIndex,\n      overZoneIndex: this.currentZoneIndex\n    });\n  }\n\n  onItemDragover(event: DragEvent, i: number): void {\n    if (!this.transfer.getItem()) {\n      return;\n    }\n    event.preventDefault();\n    const dragItem = this.transfer.captureItem(\n      this.currentZoneIndex,\n      this.items.length\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let newArray: any[] = [];\n\n    if (!dragItem) {\n      return;\n    }\n\n    if (!this.items.length) {\n      newArray = [dragItem.item];\n    } else if (dragItem.i > i) {\n      newArray = [\n        ...this.items.slice(0, i),\n        dragItem.item,\n        ...this.items.slice(i, dragItem.i),\n        ...this.items.slice(dragItem.i + 1)\n      ];\n    } else {\n      // this.draggedItem.i < i\n      newArray = [\n        ...this.items.slice(0, dragItem.i),\n        ...this.items.slice(dragItem.i + 1, i + 1),\n        dragItem.item,\n        ...this.items.slice(i + 1)\n      ];\n    }\n    this.items = newArray;\n    dragItem.i = i;\n    this.activeItem = i;\n    this.updatePlaceholderState();\n  }\n\n  cancelEvent(event?: DragEvent|MouseEvent): void {\n    if (!this.transfer.getItem() || !event) {\n      return;\n    }\n    event.preventDefault();\n  }\n\n  onDrop(item: DraggableItem): void {\n    if (\n      item &&\n      item.overZoneIndex !== this.currentZoneIndex &&\n      item.lastZoneIndex === this.currentZoneIndex\n    ) {\n      this.items = this.items.filter(\n        (x: SortableItem, i: number) => i !== item.i\n      );\n      this.updatePlaceholderState();\n    }\n    this.resetActiveItem();\n  }\n\n  resetActiveItem(event?: DragEvent|MouseEvent): void {\n    this.cancelEvent(event);\n    this.activeItem = -1;\n  }\n\n  registerOnChange(callback: () => void): void {\n    this.onChanged = callback;\n  }\n\n  registerOnTouched(callback: () => void): void {\n    this.onTouched = callback;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  writeValue(value: any[]): void {\n    if (value) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.items = value.map((x: any, i: number) => ({\n        id: i,\n        initData: x,\n        value: this.fieldName ? x[this.fieldName] : x\n      }));\n    } else {\n      this.items = [];\n    }\n    this.updatePlaceholderState();\n  }\n\n  updatePlaceholderState(): void {\n    this.showPlaceholder = !this._items.length;\n  }\n\n  getItemStyle(isActive: boolean) {\n    return isActive\n      ? Object.assign({}, this.itemStyle, this.itemActiveStyle)\n      : this.itemStyle;\n  }\n\n  private initDragstartEvent(event: DragEvent): void {\n    // it is necessary for mozilla\n    // data type should be 'Text' instead of 'text/plain' to keep compatibility\n    // with IE\n    event.dataTransfer?.setData('Text', 'placeholder');\n  }\n}\n\nexport declare interface SortableItem {\n  id: number;\n  value: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  initData: any;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SortableComponent } from './sortable.component';\nimport { DraggableItemService } from './draggable-item.service';\n\n@NgModule({\n  declarations: [SortableComponent],\n  imports: [CommonModule],\n  exports: [SortableComponent]\n})\nexport class SortableModule {\n  static forRoot(): ModuleWithProviders<SortableModule> {\n    return { ngModule: SortableModule, providers: [DraggableItemService] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}