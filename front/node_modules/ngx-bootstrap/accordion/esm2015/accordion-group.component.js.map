{"version":3,"file":"accordion-group.component.js","sources":["../../../../src/accordion/accordion-group.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAqB,MAAM,EAAE,YAAY,EAC/E,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAC5C,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3D;AACA;AACA;AACA;AACA;AACA,GAAG;;;;;;;;;;;;;;;;;;AAWH,MAAM,OAAO,uBAAuB;AAAG,IA4CrC,YAAwC,SAA6B;AACvE,QA5CE,4BAA4B;AAC9B,QAAE,eAAU,GAAG,KAAK,CAAC;AACrB,QAEE;AACF;AACM;AACM;AAEA,WADP;AACL,QAAW,eAAU,GAAG,eAAe,CAAC;AACxC,QAAE,sDAAsD;AACxD,QAAW,eAAU,GAAG,KAAK,CAAC;AAC9B,QAAE,0CAA0C;AAC5C,QAAY,iBAAY,GAA0B,IAAI,YAAY,EAAE,CAAC;AACrE,QA0BY,YAAO,GAAG,KAAK,CAAC;AAC5B,QAGI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B,IAAE,CAAC;AACH,IA/BE,wEAAwE;AAC1E,IAAE,gFAAgF;AAClF,IAAE,IAEI,MAAM;AAAK,QACb,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,IAAE,CAAC;AACH,IACE,IAAI,MAAM,CAAC,KAAc;AAC3B,QAAI,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;AAC/B,YAAM,IAAI,KAAK,EAAE;AACjB,gBAAQ,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC9C,aAAO;AACP,YAAM,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC3B,YAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;AAC3B,iBAAO,IAAI,CAAC,GAAG,EAAE;AACjB,gBAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,YAAM,CAAC,CAAC,CAAC;AACT,SAAK;AACL,IAAE,CAAC;AACH,IACE,IAAI,KAAK;AAAK,QACZ,OAAO,KAAK,EAAE,CAAC;AACnB,IAAE,CAAC;AACH,IAQE,QAAQ;AAAK,QACX,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClC,IAAE,CAAC;AACH,IACE,WAAW;AAAK,QACd,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACrC,IAAE,CAAC;AACH,IACE,UAAU;AAAK,QACb,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC1B,YAAM,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AACjC,SAAK;AACL,IAAE,CAAC;AACH;mDAvEC,SAAS,SAAC,kBACT,QAAQ,EAAE,kCAAkC,kBAC5C;;;meAA+C,kBAC/C,qEAAqE,iBACrE,IAAI,EAAE,sBACJ,KAAK,EAAE,OAAO,sBACd,KAAK,EAAE,gBAAgB,kBACxB;;;;4BAEF;;;;;;;;;;;;;;;;;;;;;;;;uTACI;AAAC;AAAiD,YAlB9C,kBAAkB,uBA8DZ,MAAM,SAAC,kBAAkB;AAAQ;AAAG;AAChC,sBAzChB,KAAK;AAAK,yBAMV,KAAK;AAAK,yBAEV,KAAK;AAAK,2BAEV,MAAM;AAAK,qBAIX,WAAW,SAAC,kBAAkB,cAC9B,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC","sourcesContent":["import {\n  Component, HostBinding, Inject, Input, OnDestroy, OnInit, Output, EventEmitter\n} from '@angular/core';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { AccordionComponent } from './accordion.component';\n\n/**\n * ### Accordion heading\n * Instead of using `heading` attribute on the `accordion-group`, you can use\n * an `accordion-heading` attribute on `any` element inside of a group that\n * will be used as group's header template.\n */\n@Component({\n  selector: 'accordion-group, accordion-panel',\n  templateUrl: './accordion-group.component.html',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    class: 'panel',\n    style: 'display: block'\n  },\n  styleUrls: ['./accordion.scss']\n})\nexport class AccordionPanelComponent implements OnInit, OnDestroy {\n  /** turn on/off animation */\n  isAnimated = false;\n  /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\n  @Input() heading!: string;\n  /** Provides an ability to use Bootstrap's contextual panel classes\n   * (`panel-primary`, `panel-success`, `panel-info`, etc...).\n   * List of all available classes [available here]\n   * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\n   */\n  @Input() panelClass = 'panel-default';\n  /** if <code>true</code> â€” disables accordion group */\n  @Input() isDisabled = false;\n  /** Emits when the opened state changes */\n  @Output() isOpenChange: EventEmitter<boolean> = new EventEmitter();\n\n  // Questionable, maybe .panel-open should be on child div.panel element?\n  /** Is accordion group open or closed. This property supports two-way binding */\n  @HostBinding('class.panel-open')\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  set isOpen(value: boolean) {\n    if (value !== this.isOpen) {\n      if (value) {\n        this.accordion.closeOtherPanels(this);\n      }\n      this._isOpen = value;\n      Promise.resolve(null)\n      .then(() => {\n        this.isOpenChange.emit(value);\n      });\n    }\n  }\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  protected _isOpen = false;\n  protected accordion: AccordionComponent;\n\n  constructor(@Inject(AccordionComponent) accordion: AccordionComponent) {\n    this.accordion = accordion;\n  }\n\n  ngOnInit(): void {\n    this.accordion.addGroup(this);\n  }\n\n  ngOnDestroy(): void {\n    this.accordion.removeGroup(this);\n  }\n\n  toggleOpen(): void {\n    if (!this.isDisabled) {\n      this.isOpen = !this.isOpen;\n    }\n  }\n}\n"]}