{"version":3,"file":"button-radio.directive.js","sources":["../../../../src/buttons/button-radio.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  Optional,\n  Provider,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnChanges {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio?: string;\n  /** If `true` — radio button can be unchecked */\n  @Input() uncheckable = false;\n  /** Current value of radio component or group */\n  @Input()\n  get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: string | undefined) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n    this._onChange(value);\n  }\n  /** If `true` — radio button is disabled */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get controlOrGroupDisabled() {\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n  }\n\n  @HostBinding('class.disabled')\n  get hasDisabledClass() {\n    // Although the radio is disabled the active radio should still stand out.\n    // The disabled class will prevent this so don't add it on the active radio\n    return this.controlOrGroupDisabled && !this.isActive;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-checked')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  @HostBinding('attr.role') readonly role: string = 'radio';\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): undefined | number {\n    if (this.controlOrGroupDisabled) {\n      // Disabled radio buttons should not receive focus\n      return undefined;\n    } else if (this.isActive || this.group == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  private _value?: string;\n  private _disabled = false;\n  private _hasFocus = false;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional()\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\n    private group: ButtonRadioGroupDirective\n  ) {}\n\n  @HostListener('click')\n  toggleIfAllowed(): void {\n    if (!this.canToggle()) {\n      return;\n    }\n\n    if (this.uncheckable && this.btnRadio === this.value) {\n      this.value = undefined;\n    } else {\n      this.value = this.btnRadio;\n    }\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  onSpacePressed(event: KeyboardEvent) {\n    this.toggleIfAllowed();\n    event.preventDefault();\n  }\n\n  focus() {\n    this.el.nativeElement.focus();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this._hasFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  canToggle(): boolean {\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('uncheckable' in changes) {\n      this.uncheckable = this.uncheckable !== false && typeof this.uncheckable !== 'undefined';\n    }\n  }\n\n  _onChange(value?: string): void {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disabled = disabled;\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n"]}