{"version":3,"file":"collapse.directive.js","sources":["../../../../src/collapse/collapse.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,gBAAgB,EAGjB,MAAM,qBAAqB,CAAC;AAE7B,OAAO,EAEL,SAAS,EACT,UAAU,EACV,YAAY,EACZ,WAAW,EACX,KAAK,EACL,MAAM,EACN,SAAS,EACV,MAAM,eAAe,CAAC;AAEvB,OAAO,EACL,iBAAiB,EACjB,eAAe,EAChB,MAAM,uBAAuB,CAAC;;;AAU/B,MAAM,OAAO,iBAAiB;AAAG,IAmE/B,YACU,GAAe,EACf,SAAoB,EAC5B,QAA0B;AAC3B,QAHS,QAAG,GAAH,GAAG,CAAY;AAAC,QAChB,cAAS,GAAT,SAAS,CAAW;AAAC,QApE/B,oDAAoD;AACtD,QAAY,cAAS,GAAoC,IAAI,YAAY,EAAE,CAAC;AAC5E,QAAE,kDAAkD;AACpD,QAAY,cAAS,GAAoC,IAAI,YAAY,EAAE,CAAC;AAC5E,QAAE,0DAA0D;AAC5D,QAAY,aAAQ,GAAoC,IAAI,YAAY,EAAE,CAAC;AAC3E,QAAE,iDAAiD;AACnD,QAAY,YAAO,GAAoC,IAAI,YAAY,EAAE,CAAC;AAC1E,QAAE,QAAQ;AACV,QAGE,eAAU,GAAG,IAAI,CAAC;AACpB,QAAE,qBAAgB,GAAG,IAAI,CAAC;AAC1B,QAAE,SAAS;AACX,QAAmC,gBAAW,GAAG,KAAK,CAAC;AACvD,QAAE,cAAc;AAChB,QAAiC,eAAU,GAAG,IAAI,CAAC;AACnD,QAAE,kBAAkB;AACpB,QAAmC,iBAAY,GAAG,KAAK,CAAC;AACxD,QAmBE,4BAA4B;AAC9B,QAAW,eAAU,GAAG,KAAK,CAAC;AAC9B,QAcU,aAAQ,GAAG,OAAO,CAAC;AAC7B,QAEU,kBAAa,GAAG,KAAK,CAAC;AAChC,QACU,0BAAqB,GAAG,UAAU,CAAC;AAC7C,QAAU,wBAAmB,GAAG,QAAQ,CAAC;AACzC,QASI,IAAI,CAAC,yBAAyB,GAAG,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AACvE,QAAI,IAAI,CAAC,uBAAuB,GAAG,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACnE,IAAE,CAAC;AACH,IArDE,IACI,OAAO,CAAC,KAAa;AAC3B,QAAI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AAC1B,YAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;AACxE,YACM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1B,QACI,IAAI,KAAK,KAAK,MAAM,EAAE;AAC1B,YAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAClB,YACM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,IAAI,EAAE,CAAC;AAChB,IAAE,CAAC;AACH,IAEE,gEAAgE;AAClE,IAAE,IACI,QAAQ,CAAC,KAAc;AAC7B,QAAI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAClC,QAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,EAAE;AAChD,YAAM,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC9B,YAAM,IAAI,CAAC,MAAM,EAAE,CAAC;AACpB,SAAK;AACL,IAAE,CAAC;AACH,IACE,IAAI,QAAQ;AAAK,QACf,OAAO,IAAI,CAAC,UAAU,CAAC;AAC3B,IAAE,CAAC;AACH,IAqBE,kBAAkB;AAAK,QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC9B,QACI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;AACjD,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzB,QAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AACnE,IAAE,CAAC;AACH,IACE,mDAAmD;AACrD,IAAE,MAAM;AAAK,QACT,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAClB,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAClB,SAAK;AACL,IAAE,CAAC;AACH,IACE,sCAAsC;AACxC,IAAE,IAAI;AAAK,QACP,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,QAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,QAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5B,QAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9B,QACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,QACI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAClC,QACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,GAAG,EAAE;AACxE,YAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACnC,YAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE;AACzE,gBAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AACpB,gBACQ,OAAO;AACf,aAAO;AACP,YAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,YAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AACzE,QAAI,CAAC,CAAC,CAAC;AACP,IAAE,CAAC;AACH,IAAE,gDAAgD;AAClD,IAAE,IAAI;AAAK,QACP,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9E,QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC3B,QAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,QAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9B,QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,QACI,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AAClC,QAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE;AACtE,YAAM,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACnC,YAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE;AACzE,gBAAQ,IAAI,CAAC,IAAI,EAAE,CAAC;AACpB,gBACQ,OAAO;AACf,aAAO;AACP,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AACrE,QAAI,CAAC,CAAC,CAAC;AACP,IAAE,CAAC;AACH,IACE,YAAY,CAAC,UAAmB,EAAE,MAAc;AAClD,QAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AAC5C,YAAM,OAAO,CAAC,QAAoB,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC;AAClD,SAAK;AACL,QACI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC1E,QAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;AAChE,QACI,MAAM,gBAAgB,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,mBAAmB,CAAC;AAClE,YAAM,CAAC,CAAC,IAAI,CAAC,uBAAuB;AACpC,YAAM,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC;AACvC,QACI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,YAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAC7B,SAAK;AACL,QACI,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AACnE,QAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACxB,QACI,OAAO,CAAC,QAAoB,EAAE,EAAE,wBAAC,IAAI,CAAC,OAAO,0CAAE,MAAM,CAAC,QAAQ,IAAC,CAAC;AACpE,IAAE,CAAC;AACH;6CA3KC,SAAS,SAAC,kBACT,QAAQ,EAAE,YAAY,kBACtB,QAAQ,EAAE,aAAa,kBACvB,qEAAqE;GACrE,IAAI,EAAE,sBACJ,kBAAkB,EAAE,MAAM,kBAC3B,cACF;;;6NACI;AAAC;AAA2C,YArB/C,UAAU;AACV,YAIA,SAAS;AACR,YAdD,gBAAgB;AACjB;AAAG;AAED,wBA4BA,MAAM;AAAK,wBAEX,MAAM;AAAK,uBAEX,MAAM;AAAK,sBAEX,MAAM;AAAK,yBAEX,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,YAAY,cACxB,WAAW,SAAC,oBAAoB;AAC9B,0BAGF,WAAW,SAAC,kBAAkB;AAAO,yBAErC,WAAW,SAAC,gBAAgB;AAAO,2BAEnC,WAAW,SAAC,kBAAkB;AAAO,sBAErC,KAAK;AACN,yBAkBC,KAAK;AAAK,uBAEV,KAAK;AACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC","sourcesContent":["import {\n  AnimationBuilder,\n  AnimationFactory,\n  AnimationPlayer\n} from '@angular/animations';\n\nimport {\n  AfterViewChecked,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  Renderer2\n} from '@angular/core';\n\nimport {\n  collapseAnimation,\n  expandAnimation\n} from './collapse-animations';\n\n@Directive({\n  selector: '[collapse]',\n  exportAs: 'bs-collapse',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.collapse]': 'true'\n  }\n})\nexport class CollapseDirective implements AfterViewChecked {\n  /** This event fires as soon as content collapses */\n  @Output() collapsed: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires when collapsing is started */\n  @Output() collapses: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires as soon as content becomes visible */\n  @Output() expanded: EventEmitter<CollapseDirective> = new EventEmitter();\n  /** This event fires when expansion is started */\n  @Output() expands: EventEmitter<CollapseDirective> = new EventEmitter();\n  // shown\n  @HostBinding('class.in')\n  @HostBinding('class.show')\n  @HostBinding('attr.aria-expanded')\n  isExpanded = true;\n  collapseNewValue = true;\n  // hidden\n  @HostBinding('attr.aria-hidden') isCollapsed = false;\n  // stale state\n  @HostBinding('class.collapse') isCollapse = true;\n  // animation state\n  @HostBinding('class.collapsing') isCollapsing = false;\n\n  @Input()\n  set display(value: string) {\n    if (!this.isAnimated) {\n      this._renderer.setStyle(this._el.nativeElement, 'display', value);\n\n      return;\n    }\n\n    this._display = value;\n\n    if (value === 'none') {\n      this.hide();\n\n      return;\n    }\n\n    this.show();\n  }\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** A flag indicating visibility of content (shown or hidden) */\n  @Input()\n  set collapse(value: boolean) {\n    this.collapseNewValue = value;\n    if (!this._player || this._isAnimationDone) {\n      this.isExpanded = value;\n      this.toggle();\n    }\n  }\n\n  get collapse(): boolean {\n    return this.isExpanded;\n  }\n\n  private _display = 'block';\n  private _isAnimationDone?: boolean;\n  private _player?: AnimationPlayer;\n  private _stylesLoaded = false;\n\n  private _COLLAPSE_ACTION_NAME = 'collapse';\n  private _EXPAND_ACTION_NAME = 'expand';\n\n  private readonly _factoryCollapseAnimation: AnimationFactory;\n  private readonly _factoryExpandAnimation: AnimationFactory;\n\n  constructor(\n    private _el: ElementRef,\n    private _renderer: Renderer2,\n    _builder: AnimationBuilder\n  ) {\n    this._factoryCollapseAnimation = _builder.build(collapseAnimation);\n    this._factoryExpandAnimation = _builder.build(expandAnimation);\n  }\n\n  ngAfterViewChecked(): void {\n    this._stylesLoaded = true;\n\n    if (!this._player || !this._isAnimationDone) {\n      return;\n    }\n\n    this._player.reset();\n    this._renderer.setStyle(this._el.nativeElement, 'height', '*');\n  }\n\n  /** allows to manually toggle content visibility */\n  toggle(): void {\n    if (this.isExpanded) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /** allows to manually hide content */\n  hide(): void {\n    this.isCollapsing = true;\n    this.isExpanded = false;\n    this.isCollapsed = true;\n    this.isCollapsing = false;\n\n    this.collapses.emit(this);\n\n    this._isAnimationDone = false;\n\n    this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)(() => {\n      this._isAnimationDone = true;\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n        this.show();\n\n        return;\n      }\n      this.collapsed.emit(this);\n      this._renderer.setStyle(this._el.nativeElement, 'display', 'none');\n    });\n  }\n  /** allows to manually show collapsed content */\n  show(): void {\n    this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\n\n    this.isCollapsing = true;\n    this.isExpanded = true;\n    this.isCollapsed = false;\n    this.isCollapsing = false;\n\n    this.expands.emit(this);\n\n    this._isAnimationDone = false;\n    this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)(() => {\n      this._isAnimationDone = true;\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\n        this.hide();\n\n        return;\n      }\n      this.expanded.emit(this);\n      this._renderer.removeStyle(this._el.nativeElement, 'overflow');\n    });\n  }\n\n  animationRun(isAnimated: boolean, action: string) {\n    if (!isAnimated || !this._stylesLoaded) {\n      return (callback: () => void) => callback();\n    }\n\n    this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\n    this._renderer.addClass(this._el.nativeElement, 'collapse');\n\n    const factoryAnimation = (action === this._EXPAND_ACTION_NAME)\n      ? this._factoryExpandAnimation\n      : this._factoryCollapseAnimation;\n\n    if (this._player) {\n      this._player.destroy();\n    }\n\n    this._player = factoryAnimation.create(this._el.nativeElement);\n    this._player.play();\n\n    return (callback: () => void) => this._player?.onDone(callback);\n  }\n}\n"]}