{"version":3,"file":"bs-daterangepicker-inline.component.js","sources":["../../../../src/datepicker/bs-daterangepicker-inline.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ComponentRef, Directive, ElementRef, EventEmitter, Input, OnChanges,\n  OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewContainerRef\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { BsDatepickerConfig } from './bs-datepicker.config';\nimport { BsDaterangepickerInlineConfig } from './bs-daterangepicker-inline.config';\nimport { BsDaterangepickerInlineContainerComponent } from './themes/bs/bs-daterangepicker-inline-container.component';\nimport { DatepickerDateCustomClasses } from './models';\nimport { checkBsValue, checkRangesWithMaxDate } from './utils/bs-calendar-utils';\n\n@Directive({\n    selector: 'bs-daterangepicker-inline',\n    exportAs: 'bsDaterangepickerInline'\n})\nexport class BsDaterangepickerInlineDirective implements OnInit, OnDestroy, OnChanges {\n    _bsValue?: Date[];\n    /**\n     * Initial value of datepicker\n     */\n    @Input()\n    set bsValue(value: Date[]) {\n      if (this._bsValue === value) {\n        return;\n      }\n      this._bsValue = value;\n      this.bsValueChange.emit(value);\n    }\n\n    /**\n     * Config object for datepicker\n     */\n    @Input() bsConfig?: Partial<BsDaterangepickerInlineConfig>;\n    /**\n     * Indicates whether datepicker is enabled or not\n     */\n    @Input() isDisabled = false;\n    /**\n     * Minimum date which is available for selection\n     */\n    @Input() minDate?: Date;\n    /**\n     * Maximum date which is available for selection\n     */\n    @Input() maxDate?: Date;\n    /**\n     * Date custom classes\n     */\n    @Input() dateCustomClasses?: DatepickerDateCustomClasses[];\n    /**\n     * Disable specific days, e.g. [0,6] will disable all Saturdays and Sundays\n     */\n    @Input() daysDisabled?: number[];\n    /**\n     * Disable specific dates\n     */\n    @Input() datesDisabled?: Date[];\n    /**\n     * Disable specific dates\n     */\n    @Input() datesEnabled?: Date[];\n    /**\n     * Emits when daterangepicker value has been changed\n     */\n    @Output() bsValueChange: EventEmitter<Date[]> = new EventEmitter();\n\n    protected _subs: Subscription[] = [];\n\n    private readonly _datepicker: ComponentLoader<BsDaterangepickerInlineContainerComponent>;\n    private _datepickerRef?: ComponentRef<BsDaterangepickerInlineContainerComponent>;\n\n    constructor(\n      public _config: BsDaterangepickerInlineConfig,\n      private _elementRef: ElementRef,\n      _renderer: Renderer2,\n      _viewContainerRef: ViewContainerRef,\n      cis: ComponentLoaderFactory\n    ) {\n      // todo: assign only subset of fields\n      Object.assign(this, this._config);\n      this._datepicker = cis.createLoader<BsDaterangepickerInlineContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      );\n    }\n\n    ngOnInit(): void {\n        this.setConfig();\n\n        // if date changes from external source (model -> view)\n        this._subs.push(\n          this.bsValueChange.subscribe((value: Date[]) => {\n            if (this._datepickerRef) {\n              this._datepickerRef.instance.value = value;\n            }\n          })\n        );\n\n        // if date changes from picker (view -> model)\n      if (this._datepickerRef) {\n        this._subs.push(\n          this._datepickerRef.instance.valueChange\n            .pipe(\n              filter((range: Date[]) => range && range[0] && !!range[1])\n            )\n            .subscribe((value: Date[]) => {\n              this.bsValue = value;\n            })\n        );\n      }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this._datepickerRef || !this._datepickerRef.instance) {\n          return;\n        }\n\n        if (changes.minDate) {\n          this._datepickerRef.instance.minDate = this.minDate;\n          this.setConfig();\n        }\n\n        if (changes.maxDate) {\n          this._datepickerRef.instance.maxDate = this.maxDate;\n          this.setConfig();\n        }\n\n        if (changes.datesEnabled) {\n          this._datepickerRef.instance.datesEnabled = this.datesEnabled;\n        }\n\n        if (changes.datesDisabled) {\n          this._datepickerRef.instance.datesDisabled = this.datesDisabled;\n          this.setConfig();\n        }\n\n        if (changes.daysDisabled) {\n          this._datepickerRef.instance.daysDisabled = this.daysDisabled;\n          this.setConfig();\n        }\n\n        if (changes.isDisabled) {\n          this._datepickerRef.instance.isDisabled = this.isDisabled;\n          this.setConfig();\n        }\n\n        if (changes.dateCustomClasses) {\n          this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\n          this.setConfig();\n        }\n    }\n\n    /**\n     * Set config for datepicker\n     */\n    setConfig(): void {\n      if (this._datepicker) {\n        this._datepicker.hide();\n      }\n\n      this._config = Object.assign({}, this._config, this.bsConfig, {\n        value: checkBsValue(this._bsValue, this.maxDate || this.bsConfig && this.bsConfig.maxDate),\n        isDisabled: this.isDisabled,\n        minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\n        maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\n        daysDisabled: this.daysDisabled || this.bsConfig && this.bsConfig.daysDisabled,\n        dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses,\n        datesDisabled: this.datesDisabled || this.bsConfig && this.bsConfig.datesDisabled,\n        datesEnabled: this.datesEnabled || this.bsConfig && this.bsConfig.datesEnabled,\n        ranges: checkRangesWithMaxDate(this.bsConfig && this.bsConfig.ranges, this.maxDate || this.bsConfig && this.bsConfig.maxDate),\n        maxDateRange: this.bsConfig && this.bsConfig.maxDateRange\n      });\n\n      this._datepickerRef = this._datepicker\n        .provide({provide: BsDatepickerConfig, useValue: this._config})\n        .attach(BsDaterangepickerInlineContainerComponent)\n        .to(this._elementRef)\n        .show();\n    }\n\n    ngOnDestroy() {\n      this._datepicker.dispose();\n    }\n}\n"]}