{"version":3,"file":"bs-daterangepicker.component.js","sources":["../../../../src/datepicker/bs-daterangepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, ComponentRef,\n  Directive, ElementRef, EventEmitter,\n  Input, OnChanges, OnDestroy, OnInit,\n  Output, Renderer2, SimpleChanges,\n  ViewContainerRef\n} from '@angular/core';\nimport { BsDaterangepickerConfig } from './bs-daterangepicker.config';\nimport { BsDaterangepickerContainerComponent } from './themes/bs/bs-daterangepicker-container.component';\nimport { Observable, Subscription, Subject, BehaviorSubject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ComponentLoaderFactory, ComponentLoader } from 'ngx-bootstrap/component-loader';\nimport { BsDatepickerConfig } from './bs-datepicker.config';\nimport { DatepickerDateCustomClasses } from './models';\nimport { checkBsValue, checkRangesWithMaxDate } from './utils/bs-calendar-utils';\n\n@Directive({\n  selector: '[bsDaterangepicker]',\n  exportAs: 'bsDaterangepicker'\n})\nexport class BsDaterangepickerDirective\n  implements OnInit, OnDestroy, OnChanges, AfterViewInit {\n  /**\n   * Placement of a daterangepicker. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers = 'click';\n  /**\n   * Close daterangepicker on outside click\n   */\n  @Input() outsideClick = true;\n  /**\n   * A selector specifying the element the daterangepicker should be appended to.\n   */\n  @Input() container = 'body';\n\n  @Input() outsideEsc = true;\n\n  /**\n   * Returns whether or not the daterangepicker is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._datepicker.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    this.isOpen$.next(value);\n  }\n\n  /**\n   * Emits an event when the daterangepicker is shown\n   */\n  @Output() onShown: EventEmitter<unknown>;\n  /**\n   * Emits an event when the daterangepicker is hidden\n   */\n  @Output() onHidden: EventEmitter<unknown>;\n\n  _bsValue?: (Date|undefined)[];\n  isOpen$: BehaviorSubject<boolean>;\n  isDestroy$ = new Subject();\n\n  /**\n   * Initial value of daterangepicker\n   */\n  @Input()\n  set bsValue(value: (Date|undefined)[] | undefined) {\n    if (this._bsValue === value) {\n      return;\n    }\n    this._bsValue = value;\n    this.bsValueChange.emit(value);\n  }\n\n  /**\n   * Config object for daterangepicker\n   */\n  @Input() set bsConfig(bsConfig: Partial<BsDaterangepickerConfig | undefined>) {\n    this._bsConfig = bsConfig;\n    this.setConfig();\n    this._rangeInputFormat$.next(bsConfig && bsConfig.rangeInputFormat);\n  }\n  get bsConfig(): Partial<BsDaterangepickerConfig> | undefined {\n    return this._bsConfig;\n  }\n  /**\n   * Indicates whether daterangepicker's content is enabled or not\n   */\n  @Input() isDisabled = false;\n  /**\n   * Minimum date which is available for selection\n   */\n  @Input() minDate?: Date;\n  /**\n   * Maximum date which is available for selection\n   */\n  @Input() maxDate?: Date;\n  /**\n   * Date custom classes\n   */\n  @Input() dateCustomClasses?: DatepickerDateCustomClasses[];\n  /**\n   * Disable specific days, e.g. [0,6] will disable all Saturdays and Sundays\n   */\n  @Input() daysDisabled?: number[];\n  /**\n   * Disable specific dates\n   */\n  @Input() datesDisabled?: Date[];\n\n  /**\n   * Enable specific dates\n   */\n  @Input() datesEnabled?: Date[];\n  /**\n   * Emits when daterangepicker value has been changed\n   */\n  @Output() bsValueChange = new EventEmitter<((Date|undefined)[]|undefined)>();\n\n  get rangeInputFormat$(): Observable<string> {\n    return this._rangeInputFormat$;\n  }\n\n  protected _subs: Subscription[] = [];\n  private _datepicker: ComponentLoader<BsDaterangepickerContainerComponent>;\n  private _datepickerRef?: ComponentRef<BsDaterangepickerContainerComponent>;\n  private _bsConfig?: Partial<BsDaterangepickerConfig>;\n  private readonly _rangeInputFormat$ = new Subject<string>();\n\n  constructor(public _config: BsDaterangepickerConfig,\n              private  _elementRef: ElementRef,\n              private  _renderer: Renderer2,\n              _viewContainerRef: ViewContainerRef,\n              cis: ComponentLoaderFactory) {\n    this._datepicker = cis.createLoader<BsDaterangepickerContainerComponent>(\n      _elementRef,\n      _viewContainerRef,\n      _renderer\n    );\n    Object.assign(this, _config);\n    this.onShown = this._datepicker.onShown;\n    this.onHidden = this._datepicker.onHidden;\n    this.isOpen$ = new BehaviorSubject(this.isOpen);\n  }\n\n  ngOnInit(): void {\n    this.isDestroy$ = new Subject();\n    this._datepicker.listen({\n      outsideClick: this.outsideClick,\n      outsideEsc: this.outsideEsc,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    this.setConfig();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this._datepickerRef || !this._datepickerRef.instance) {\n      return;\n    }\n    if (changes.minDate) {\n      this._datepickerRef.instance.minDate = this.minDate;\n    }\n    if (changes.maxDate) {\n      this._datepickerRef.instance.maxDate = this.maxDate;\n    }\n    if (changes.datesDisabled) {\n      this._datepickerRef.instance.datesDisabled = this.datesDisabled;\n    }\n    if (changes.datesEnabled) {\n      this._datepickerRef.instance.datesEnabled = this.datesEnabled;\n    }\n    if (changes.daysDisabled) {\n      this._datepickerRef.instance.daysDisabled = this.daysDisabled;\n    }\n    if (changes.isDisabled) {\n      this._datepickerRef.instance.isDisabled = this.isDisabled;\n    }\n    if (changes.dateCustomClasses) {\n      this._datepickerRef.instance.dateCustomClasses = this.dateCustomClasses;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.isOpen$.pipe(\n      filter(isOpen => isOpen !== this.isOpen),\n      takeUntil(this.isDestroy$)\n    )\n      .subscribe(() => this.toggle());\n  }\n\n  /**\n   * Opens an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  show(): void {\n    if (this._datepicker.isShown) {\n      return;\n    }\n\n    this.setConfig();\n\n    this._datepickerRef = this._datepicker\n      .provide({ provide: BsDatepickerConfig, useValue: this._config })\n      .attach(BsDaterangepickerContainerComponent)\n      .to(this.container)\n      .position({ attachment: this.placement })\n      .show({ placement: this.placement });\n\n    // if date changes from external source (model -> view)\n    this._subs.push(\n      this.bsValueChange.subscribe((value: Date[]) => {\n        if (this._datepickerRef) {\n          this._datepickerRef.instance.value = value;\n        }\n      })\n    );\n\n    // if date changes from picker (view -> model)\n    if (this._datepickerRef) {\n      this._subs.push(\n        this._datepickerRef.instance.valueChange\n          .pipe(\n            filter((range: Date[]) => range && range[0] && !!range[1])\n          )\n          .subscribe((value: Date[]) => {\n            this.bsValue = value;\n            this.hide();\n          })\n      );\n    }\n  }\n\n  /**\n   * Set config for daterangepicker\n   */\n  setConfig() {\n    this._config = Object.assign(\n      {},\n      this._config,\n      this.bsConfig,\n      {\n        value: checkBsValue(this._bsValue, this.maxDate || this.bsConfig && this.bsConfig.maxDate),\n        isDisabled: this.isDisabled,\n        minDate: this.minDate || this.bsConfig && this.bsConfig.minDate,\n        maxDate: this.maxDate || this.bsConfig && this.bsConfig.maxDate,\n        daysDisabled: this.daysDisabled || this.bsConfig && this.bsConfig.daysDisabled,\n        dateCustomClasses: this.dateCustomClasses || this.bsConfig && this.bsConfig.dateCustomClasses,\n        datesDisabled: this.datesDisabled || this.bsConfig && this.bsConfig.datesDisabled,\n        datesEnabled: this.datesEnabled || this.bsConfig && this.bsConfig.datesEnabled,\n        ranges: checkRangesWithMaxDate(this.bsConfig && this.bsConfig.ranges, this.maxDate || this.bsConfig && this.bsConfig.maxDate),\n        maxDateRange: this.bsConfig && this.bsConfig.maxDateRange\n      }\n    );\n  }\n\n  /**\n   * Closes an element’s datepicker. This is considered a “manual” triggering of\n   * the datepicker.\n   */\n  hide(): void {\n    if (this.isOpen) {\n      this._datepicker.hide();\n    }\n    for (const sub of this._subs) {\n      sub.unsubscribe();\n    }\n\n    if (this._config.returnFocusToInput) {\n      this._renderer.selectRootElement(this._elementRef.nativeElement).focus();\n    }\n  }\n\n  /**\n   * Toggles an element’s datepicker. This is considered a “manual” triggering\n   * of the datepicker.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnDestroy(): void {\n    this._datepicker.dispose();\n    this.isOpen$.next(false);\n    if (this.isDestroy$) {\n      this.isDestroy$.next();\n      this.isDestroy$.complete();\n    }\n  }\n}\n"]}