{"version":3,"file":"bs-locale.service.js","sources":["../../../../src/datepicker/bs-locale.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAc,MAAM,MAAM,CAAC;;AAGnD,MAAM,OAAO,eAAe;AAC5B,IAFA;AACE,QACQ,mBAAc,GAAG,IAAI,CAAC;AAChC,QAAU,YAAO,GAAG,IAAI,eAAe,CAAS,IAAI,CAAC,cAAc,CAAC,CAAC;AACrE,QAAU,kBAAa,GAAuB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;AAC1E,IAoBA,CAAC;AACD,IApBE,IAAI,MAAM;AAAK,QACb,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,IAAE,CAAC;AACH,IACE,IAAI,YAAY;AAAK,QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;AAC9B,IAAE,CAAC;AACH,IACE,IAAI,aAAa;AAAK,QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;AACnC,IAAE,CAAC;AACH,IACE,GAAG,CAAC,MAAc;AAAI,QACpB,IAAI,MAAM,KAAK,IAAI,CAAC,aAAa,EAAE;AACvC,YAAM,OAAO;AACb,SAAK;AACL,QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9B,IAAE,CAAC;AACH;2CAzBC,UAAU;;;;gDACT;AAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class BsLocaleService {\n  private _defaultLocale = 'en';\n  private _locale = new BehaviorSubject<string>(this._defaultLocale);\n  private _localeChange: Observable<string> = this._locale.asObservable();\n\n  get locale(): BehaviorSubject<string> {\n    return this._locale;\n  }\n\n  get localeChange(): Observable<string> {\n    return this._localeChange;\n  }\n\n  get currentLocale(): string {\n    return this._locale.getValue();\n  }\n\n  use(locale: string): void {\n    if (locale === this.currentLocale) {\n      return;\n    }\n\n    this._locale.next(locale);\n  }\n}\n"]}