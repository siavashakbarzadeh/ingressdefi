{"version":3,"file":"datepicker.component.js","sources":["../../../../src/datepicker/datepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  Provider,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\nimport { DatepickerConfig } from './datepicker.config';\n\nexport const DATEPICKER_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatePickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'datepicker',\n  template: `\n    <datepicker-inner [activeDate]=\"activeDate\"\n                      (update)=\"onUpdate($event)\"\n                      [locale]=\"config.locale\"\n                      [datepickerMode]=\"datepickerMode\"\n                      [initDate]=\"initDate\"\n                      [minDate]=\"minDate\"\n                      [maxDate]=\"maxDate\"\n                      [minMode]=\"minMode\"\n                      [maxMode]=\"maxMode\"\n                      [showWeeks]=\"showWeeks\"\n                      [formatDay]=\"formatDay\"\n                      [formatMonth]=\"formatMonth\"\n                      [formatYear]=\"formatYear\"\n                      [formatDayHeader]=\"formatDayHeader\"\n                      [formatDayTitle]=\"formatDayTitle\"\n                      [formatMonthTitle]=\"formatMonthTitle\"\n                      [startingDay]=\"startingDay\"\n                      [yearRange]=\"yearRange\"\n                      [customClass]=\"customClass\"\n                      [dateDisabled]=\"dateDisabled\"\n                      [dayDisabled]=\"dayDisabled\"\n                      [onlyCurrentMonth]=\"onlyCurrentMonth\"\n                      [shortcutPropagation]=\"shortcutPropagation\"\n                      [monthColLimit]=\"monthColLimit\"\n                      [yearColLimit]=\"yearColLimit\"\n                      (selectionDone)=\"onSelectionDone($event)\"\n                      (activeDateChange)=\"onActiveDateChange($event)\">\n      <daypicker tabindex=\"0\"></daypicker>\n      <monthpicker tabindex=\"0\"></monthpicker>\n      <yearpicker tabindex=\"0\"></yearpicker>\n    </datepicker-inner>\n    `,\n  providers: [DATEPICKER_CONTROL_VALUE_ACCESSOR]\n})\nexport class DatePickerComponent implements ControlValueAccessor {\n  /** sets datepicker mode, supports: `day`, `month`, `year` */\n  @Input() datepickerMode = 'day';\n  /** default date to show if `ng-model` value is not specified */\n  @Input() initDate?: Date;\n  /**  oldest selectable date */\n  @Input() minDate?: Date;\n  /** latest selectable date */\n  @Input() maxDate?: Date;\n  /** set lower datepicker mode, supports: `day`, `month`, `year` */\n  @Input() minMode?: string;\n  /** sets upper datepicker mode, supports: `day`, `month`, `year` */\n  @Input() maxMode?: string;\n  /** if false week numbers will be hidden */\n  @Input() showWeeks = true;\n  /** format of day in month */\n  @Input() formatDay?: string;\n  /** format of month in year */\n  @Input() formatMonth?: string;\n  /** format of year in year range */\n  @Input() formatYear?: string;\n  /** format of day in week header */\n  @Input() formatDayHeader?: string;\n  /** format of title when selecting day */\n  @Input() formatDayTitle?: string;\n  /** format of title when selecting month */\n  @Input() formatMonthTitle?: string;\n  /** starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n  @Input() startingDay?: number;\n  /** number of years displayed in year selection */\n  @Input() yearRange?: number;\n  /** if true only dates from the currently displayed month will be shown */\n  @Input() onlyCurrentMonth?: boolean;\n  /** if true shortcut`s event propagation will be disabled */\n  @Input() shortcutPropagation?: boolean;\n  /** number of months displayed in a single row of month picker */\n  @Input() monthColLimit = 3;\n  /** number of years displayed in a single row of year picker */\n  @Input() yearColLimit = 5;\n  /** array of custom css classes to be applied to targeted dates */\n  @Input() customClass?: { date: Date; mode: string; clazz: string }[];\n  /** array of disabled dates */\n  @Input() dateDisabled?: { date: Date; mode: string }[];\n  /** disabled days of the week from 0-6 (0=Sunday, ..., 6=Saturday) */\n  @Input() dayDisabled?: number[];\n\n  /** currently active date */\n  @Input()\n  get activeDate(): Date|undefined {\n    return this._activeDate || this._now;\n  }\n\n  set activeDate(value: Date|undefined) {\n    this._activeDate = value;\n  }\n\n  @Output()\n  selectionDone: EventEmitter<Date> = new EventEmitter<Date>(undefined);\n\n  /** callback to invoke when the activeDate is changed. */\n  @Output()\n  activeDateChange: EventEmitter<Date> = new EventEmitter<Date>(\n    undefined\n  );\n\n  @ViewChild(DatePickerInnerComponent, { static: true })\n  _datePicker?: DatePickerInnerComponent;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onChange: any = Function.prototype;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onTouched: any = Function.prototype;\n\n  config: DatepickerConfig;\n\n  protected _now: Date = new Date();\n  protected _activeDate?: Date;\n\n  constructor(config: DatepickerConfig) {\n    this.config = config;\n    this.configureOptions();\n  }\n\n  configureOptions(): void {\n    Object.assign(this, this.config);\n  }\n\n  onUpdate(event: Date): void {\n    this.activeDate = event;\n    this.onChange(event);\n  }\n\n  onSelectionDone(event: Date): void {\n    this.selectionDone.emit(event);\n  }\n\n  onActiveDateChange(event: Date): void {\n    this.activeDateChange.emit(event);\n  }\n  // todo: support null value\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  writeValue(value: any): void {\n    if (this._datePicker?.compare(value, this._activeDate) === 0) {\n      return;\n    }\n    if (value && value instanceof Date) {\n      this.activeDate = value;\n      this._datePicker?.select(value, false);\n\n      return;\n    }\n\n    this.activeDate = value ? new Date(value) : void 0;\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n"]}