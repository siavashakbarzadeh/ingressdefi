{"version":3,"file":"monthpicker.component.js","sources":["../../../../src/datepicker/monthpicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["// @deprecated\nimport { Component, OnInit } from '@angular/core';\n\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { DatePickerInnerComponent } from './datepicker-inner.component';\n\n@Component({\n  selector: 'monthpicker',\n  template: `\n<table *ngIf=\"datePicker.datepickerMode==='month'\" role=\"grid\">\n  <thead>\n    <tr>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-left float-left\"\n                (click)=\"datePicker.move(-1)\" tabindex=\"-1\">‹</button></th>\n      <th [attr.colspan]=\"((datePicker.monthColLimit - 2) <= 0) ? 1 : datePicker.monthColLimit - 2\">\n        <button [id]=\"datePicker.uniqueId + '-title'\"\n                type=\"button\" class=\"btn btn-default btn-sm\"\n                (click)=\"datePicker.toggleMode(0)\"\n                [disabled]=\"datePicker.datepickerMode === maxMode\"\n                [ngClass]=\"{disabled: datePicker.datepickerMode === maxMode}\" tabindex=\"-1\" style=\"width:100%;\">\n          <strong>{{ title }}</strong>\n        </button>\n      </th>\n      <th>\n        <button type=\"button\" class=\"btn btn-default btn-sm pull-right float-right\"\n                (click)=\"datePicker.move(1)\" tabindex=\"-1\">›</button>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let rowz of rows\">\n      <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\" [attr.id]=\"dtz.uid\" [ngClass]=\"dtz.customClass\">\n        <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                [ngClass]=\"{'btn-link': isBs4 && !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected || (isBs4 && !dtz.selected && datePicker.isActive(dtz)), disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz)}\"\n                [disabled]=\"dtz.disabled\"\n                (click)=\"datePicker.select(dtz.date)\" tabindex=\"-1\">\n          <span [ngClass]=\"{'text-success': isBs4 && dtz.current, 'text-info': !isBs4 && dtz.current}\">{{ dtz.label }}</span>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  `,\n  styles: [\n    `\n    :host .btn-info .text-success {\n      color: #fff !important;\n    }\n  `\n  ]\n})\nexport class MonthPickerComponent implements OnInit {\n  title?: string;\n  rows = [];\n  datePicker: DatePickerInnerComponent;\n  maxMode?: string;\n\n  constructor(datePicker: DatePickerInnerComponent) {\n    this.datePicker = datePicker;\n  }\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  ngOnInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    this.datePicker.stepMonth = { years: 1 };\n\n    this.datePicker.setRefreshViewHandler(function(): void {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const that = this;\n      const months = new Array(12);\n      const year: number = that.activeDate.getFullYear();\n      let date: Date;\n\n      for (let i = 0; i < 12; i++) {\n        date = new Date(year, i, 1);\n        date = that.fixTimeZone(date);\n        months[i] = that.createDateObject(date, that.formatMonth);\n        months[i].uid = that.uniqueId + '-' + i;\n      }\n\n      self.title = that.dateFilter(that.activeDate, that.formatMonthTitle);\n      self.rows = that.split(months, self.datePicker.monthColLimit);\n    }, 'month');\n\n    this.datePicker.setCompareHandler(function(\n      date1: Date,\n      date2: Date\n    ): number {\n      const d1 = new Date(date1.getFullYear(), date1.getMonth());\n      const d2 = new Date(date2.getFullYear(), date2.getMonth());\n      return d1.getTime() - d2.getTime();\n    }, 'month');\n\n    this.datePicker.refreshView();\n  }\n\n  // todo: key events implementation\n}\n"]}