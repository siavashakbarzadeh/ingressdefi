{"version":3,"file":"bs-datepicker.actions.js","sources":["../../../../../src/datepicker/reducer/bs-datepicker.actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAa3C,MAAM,OAAO,mBAAmB;AAChC,IAsBE,SAAS;AAAK,QACZ,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,SAAS,EAAE,CAAC;AACnD,IAAE,CAAC;AACH,IACE,MAAM;AAAK,QACT,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,MAAM,EAAE,CAAC;AAChD,IAAE,CAAC;AACH,IACE,IAAI;AAAK,QACP,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAC9C,IAAE,CAAC;AACH,IACE,MAAM,CAAC,IAAW;AAAI,QACpB,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,MAAM;AACtC,YAAM,OAAO,EAAE,IAAI;AACnB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,cAAc,CAAC,KAA2B;AAAI,QAC5C,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,eAAe;AAC/C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,UAAU,CAAC,KAA4B;AAAI,QACzC,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,WAAW;AAC3C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,YAAY,CAAC,IAAe;AAAI,QAC9B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,eAAe;AAC/C,YAAM,OAAO,EAAE,IAAI;AACnB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,UAAU,CAAC,OAAgC;AAAI,QAC7C,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,WAAW;AAC3C,YAAM,OAAO,EAAE,OAAO;AACtB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,oBAAoB;AACtB,IAAE,WAAW,CAAC,KAAc;AAAI,QAC5B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,YAAY;AAC5C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,QAAQ,CAAC,KAAqB;AAAI,QAChC,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,KAAK;AACrC,YAAM,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;AACvD,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,OAAO,CAAC,IAAW;AAAI,QACrB,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,YAAY;AAC5C,YAAM,OAAO,EAAE,IAAI;AACnB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,OAAO,CAAC,IAAW;AAAI,QACrB,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,YAAY;AAC5C,YAAM,OAAO,EAAE,IAAI;AACnB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,YAAY,CAAC,IAAe;AAAI,QAC9B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,gBAAgB;AAChD,YAAM,OAAO,EAAE,IAAI;AACnB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,aAAa,CAAC,KAAc;AAAI,QAC9B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,iBAAiB;AACjD,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,YAAY,CAAC,KAAc;AAAI,QAC7B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,gBAAgB;AAChD,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,UAAU,CAAC,KAAe;AAAI,QAC5B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,eAAe;AAC/C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,oBAAoB,CAAC,KAAqC;AAAI,QAC5D,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,uBAAuB;AACvD,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,mBAAmB,CAAC,KAAmC;AAAI,QACzD,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,sBAAsB;AACtD,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,SAAS,CAAC,MAAc;AAAI,QAC1B,OAAO;AACX,YAAM,IAAI,EAAE,mBAAmB,CAAC,UAAU;AAC1C,YAAM,OAAO,EAAE,MAAM;AACrB,SAAK,CAAC;AACN,IAAE,CAAC;AACH;;yHAAC;AAlJiB,6BAAS,GAAG,qCAAqC,CAAC;AAClD,0BAAM,GAAG,uCAAuC,CAAC;AACjD,wBAAI,GAAG,wBAAwB,CAAC;AAChC,0BAAM,GAAG,0BAA0B,CAAC;AACpC,mCAAe,GAAG,8BAA8B,CAAC;AACjD,+BAAW,GAAG,+BAA+B,CAAC;AAC9C,+BAAW,GAAG,oCAAoC,CAAC;AACnD,yBAAK,GAAG,yBAAyB,CAAC;AAClC,mCAAe,GAAG,+BAA+B,CAAC;AAElD,gCAAY,GAAG,2BAA2B,CAAC;AAC3C,gCAAY,GAAG,2BAA2B,CAAC;AAC3C,oCAAgB,GAAG,gCAAgC,CAAC;AACpD,qCAAiB,GAAG,iCAAiC,CAAC;AACtD,oCAAgB,GAAG,gCAAgC,CAAC;AACpD,mCAAe,GAAG,8BAA8B,CAAC;AACjD,2CAAuB,GAAG,sCAAsC,CAAC;AACjE,0CAAsB,GAAG,qCAAqC,CAAC;AAC/D,8BAAU,GAAG,oCAAoC,CAAC;AAElD,gCAAY,GAAG,sCAAsC,CAAC;+CAtBvE,UAAU;;0BACT;AAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TimeUnit } from 'ngx-bootstrap/chronos';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  BsDatepickerViewMode,\n  BsViewNavigationEvent,\n  CellHoverEvent,\n  DatepickerRenderOptions,\n  DatepickerDateCustomClasses,\n  DatepickerDateTooltipText\n} from '../models';\n\n@Injectable()\nexport class BsDatepickerActions {\n  static readonly CALCULATE = '[datepicker] calculate dates matrix';\n  static readonly FORMAT = '[datepicker] format datepicker values';\n  static readonly FLAG = '[datepicker] set flags';\n  static readonly SELECT = '[datepicker] select date';\n  static readonly NAVIGATE_OFFSET = '[datepicker] shift view date';\n  static readonly NAVIGATE_TO = '[datepicker] change view date';\n  static readonly SET_OPTIONS = '[datepicker] update render options';\n  static readonly HOVER = '[datepicker] hover date';\n  static readonly CHANGE_VIEWMODE = '[datepicker] switch view mode';\n\n  static readonly SET_MIN_DATE = '[datepicker] set min date';\n  static readonly SET_MAX_DATE = '[datepicker] set max date';\n  static readonly SET_DAYSDISABLED = '[datepicker] set days disabled';\n  static readonly SET_DATESDISABLED = '[datepicker] set dates disabled';\n  static readonly SET_DATESENABLED = '[datepicker] set dates enabled';\n  static readonly SET_IS_DISABLED = '[datepicker] set is disabled';\n  static readonly SET_DATE_CUSTOM_CLASSES = '[datepicker] set date custom classes';\n  static readonly SET_DATE_TOOLTIP_TEXTS = '[datepicker] set date tooltip texts';\n  static readonly SET_LOCALE = '[datepicker] set datepicker locale';\n\n  static readonly SELECT_RANGE = '[daterangepicker] select dates range';\n\n  calculate(): Action {\n    return { type: BsDatepickerActions.CALCULATE };\n  }\n\n  format(): Action {\n    return { type: BsDatepickerActions.FORMAT };\n  }\n\n  flag(): Action {\n    return { type: BsDatepickerActions.FLAG };\n  }\n\n  select(date?: Date): Action {\n    return {\n      type: BsDatepickerActions.SELECT,\n      payload: date\n    };\n  }\n\n  changeViewMode(event: BsDatepickerViewMode): Action {\n    return {\n      type: BsDatepickerActions.CHANGE_VIEWMODE,\n      payload: event\n    };\n  }\n\n  navigateTo(event: BsViewNavigationEvent): Action {\n    return {\n      type: BsDatepickerActions.NAVIGATE_TO,\n      payload: event\n    };\n  }\n\n  navigateStep(step?: TimeUnit): Action {\n    return {\n      type: BsDatepickerActions.NAVIGATE_OFFSET,\n      payload: step\n    };\n  }\n\n  setOptions(options: DatepickerRenderOptions): Action {\n    return {\n      type: BsDatepickerActions.SET_OPTIONS,\n      payload: options\n    };\n  }\n\n  // date range picker\n  selectRange(value?: Date[]): Action {\n    return {\n      type: BsDatepickerActions.SELECT_RANGE,\n      payload: value\n    };\n  }\n\n  hoverDay(event: CellHoverEvent): Action {\n    return {\n      type: BsDatepickerActions.HOVER,\n      payload: event.isHovered ? event.cell.date : null\n    };\n  }\n\n  minDate(date?: Date): Action {\n    return {\n      type: BsDatepickerActions.SET_MIN_DATE,\n      payload: date\n    };\n  }\n\n  maxDate(date?: Date): Action {\n    return {\n      type: BsDatepickerActions.SET_MAX_DATE,\n      payload: date\n    };\n  }\n\n  daysDisabled(days?: number[]): Action {\n    return {\n      type: BsDatepickerActions.SET_DAYSDISABLED,\n      payload: days\n    };\n  }\n\n  datesDisabled(dates?: Date[]): Action {\n    return {\n      type: BsDatepickerActions.SET_DATESDISABLED,\n      payload: dates\n    };\n  }\n\n  datesEnabled(dates?: Date[]): Action {\n    return {\n      type: BsDatepickerActions.SET_DATESENABLED,\n      payload: dates\n    };\n  }\n\n  isDisabled(value?: boolean): Action {\n    return {\n      type: BsDatepickerActions.SET_IS_DISABLED,\n      payload: value\n    };\n  }\n\n  setDateCustomClasses(value?: DatepickerDateCustomClasses[]): Action {\n    return {\n      type: BsDatepickerActions.SET_DATE_CUSTOM_CLASSES,\n      payload: value\n    };\n  }\n\n  setDateTooltipTexts(value?: DatepickerDateTooltipText[]): Action {\n    return {\n      type: BsDatepickerActions.SET_DATE_TOOLTIP_TEXTS,\n      payload: value\n    };\n  }\n\n  setLocale(locale: string): Action {\n    return {\n      type: BsDatepickerActions.SET_LOCALE,\n      payload: locale\n    };\n  }\n}\n"]}