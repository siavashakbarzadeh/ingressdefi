{"version":3,"file":"focus-trap-manager.js","sources":["../../../../src/focus-trap/focus-trap-manager.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AAEH,oBAAoB;AAEpB,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C;AAWA,kFAAkF;;AAElF,MAAM,OAAO,gBAAgB;AAC7B,IAFA;AAAgB,QAEd,mEAAmE;AACrE,QAAE,8BAA8B;AAChC,QAAU,oBAAe,GAAuB,EAAE,CAAC;AACnD,KAoCC;AACD,IApCE;AACF;AACE;AACE,OAAC;AACL,IAAE,QAAQ,CAAC,SAA2B;AAAI,QACtC,kDAAkD;AACtD,QAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC;AACjF,QACI,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;AACrC,QACI,IAAI,KAAK,CAAC,MAAM,EAAE;AACtB,YAAM,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzC,SAAK;AACL,QACI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1B,QAAI,SAAS,CAAC,OAAO,EAAE,CAAC;AACxB,IAAE,CAAC;AACH,IACE;AACF;AACE;AACE,OAAC;AACL,IAAE,UAAU,CAAC,SAA2B;AAAI,QACxC,SAAS,CAAC,QAAQ,EAAE,CAAC;AACzB,QACI,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;AACvC,QACI,MAAM,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACvC,QAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAClB,YAAM,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,YAAM,IAAI,KAAK,CAAC,MAAM,EAAE;AACxB,gBAAQ,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAC1C,aAAO;AACP,SAAK;AACL,IAAE,CAAC;AACH;uGAAC;AACD;4CA1CC,UAAU,SAAC,EAAC;AAAU,EAAE,MAAM,EAAC;;gDAC3B;AAAC","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/* eslint-disable */\n\nimport { Injectable } from '@angular/core';\n\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n */\nexport interface ManagedFocusTrap {\n  _enable(): void;\n  _disable(): void;\n  focusInitialElementWhenReady(): Promise<boolean>;\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapManager {\n  // A stack of the FocusTraps on the page. Only the FocusTrap at the\n  // top of the stack is active.\n  private _focusTrapStack: ManagedFocusTrap[] = [];\n\n  /**\n   * Disables the FocusTrap at the top of the stack, and then pushes\n   * the new FocusTrap onto the stack.\n   */\n  register(focusTrap: ManagedFocusTrap): void {\n    // Dedupe focusTraps that register multiple times.\n    this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n\n    let stack = this._focusTrapStack;\n\n    if (stack.length) {\n      stack[stack.length - 1]._disable();\n    }\n\n    stack.push(focusTrap);\n    focusTrap._enable();\n  }\n\n  /**\n   * Removes the FocusTrap from the stack, and activates the\n   * FocusTrap that is the new top of the stack.\n   */\n  deregister(focusTrap: ManagedFocusTrap): void {\n    focusTrap._disable();\n\n    const stack = this._focusTrapStack;\n\n    const i = stack.indexOf(focusTrap);\n    if (i !== -1) {\n      stack.splice(i, 1);\n      if (stack.length) {\n        stack[stack.length - 1]._enable();\n      }\n    }\n  }\n}\n"]}