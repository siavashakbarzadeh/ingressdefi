{"version":3,"file":"modal-backdrop.component.js","sources":["../../../../src/modal/modal-backdrop.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAU,SAAS,EAAE,MAAM,eAAe,CAAC;AAEzE,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAGnD,8EAA8E;;AAO9E,MAAM,OAAO,sBAAsB;AAAG,IA+CpC,YAAY,OAAmB,EAAE,QAAmB;AACtD,QAJY,gBAAW,GAAG,KAAK,CAAC;AAChC,QAAY,aAAQ,GAAG,KAAK,CAAC;AAC7B,QAEI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,QAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAE,CAAC;AACH,IAlDE,IAAI,UAAU;AAAK,QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,IAAE,CAAC;AACH,IACE,IAAI,UAAU,CAAC,KAAc;AAC/B,QAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,IAAE,CAAC;AACH,IACE,IAAI,OAAO;AAAK,QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;AACzB,IAAE,CAAC;AACH,IACE,IAAI,OAAO,CAAC,KAAc;AAC5B,QAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC1B,QAAI,IAAI,KAAK,EAAE;AACf,YAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,GAAG,UAAU,CAAC,EAAE,EAAE,CACnB,CAAC;AACR,SAAK;AAAC,aAAK;AACX,YAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,GAAG,UAAU,CAAC,EAAE,EAAE,CACnB,CAAC;AACR,SAAK;AACL,QAAI,IAAI,CAAC,KAAK,EAAE,EAAE;AAClB,YAAM,IAAI,KAAK,EAAE;AACjB,gBAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,GAAG,UAAU,CAAC,IAAI,EAAE,CACrB,CAAC;AACV,aAAO;AAAC,iBAAK;AACb,gBAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CACvB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,GAAG,UAAU,CAAC,IAAI,EAAE,CACrB,CAAC;AACV,aAAO;AACP,SAAK;AACL,IAAE,CAAC;AACH,IAYE,QAAQ;AAAK,QACX,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,YAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,GAAG,UAAU,CAAC,IAAI,EAAE,CACrB,CAAC;AACR,YAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC/C,SAAK;AACL,QAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB,IAAE,CAAC;AACH;kDApEC,SAAS,SAAC,kBACT,QAAQ,EAAE,mBAAmB,kBAC7B,QAAQ,EAAE,GAAG,kBACb;wBAAqE,iBACrE,IAAI,EAAE,EAAE,KAAK,EAAE,UAAU,CAAC,QAAQ,EAAE,cACrC,0KACI;AAAC;AAAgD,YAblC,UAAU;AAAI,YAAM,SAAS;AAAG;;;;;;;;;uGAAE;AAAC","sourcesContent":["import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { CLASS_NAME } from './modal-options.class';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\n\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: ' ',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: { class: CLASS_NAME.BACKDROP }\n})\nexport class ModalBackdropComponent implements OnInit {\n  get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  set isAnimated(value: boolean) {\n    this._isAnimated = value;\n  }\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    } else {\n      this.renderer.removeClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      } else {\n        this.renderer.removeClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      }\n    }\n  }\n\n  element: ElementRef;\n  renderer: Renderer2;\n\n  protected _isAnimated = false;\n  protected _isShown = false;\n\n  constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.FADE}`\n      );\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n"]}