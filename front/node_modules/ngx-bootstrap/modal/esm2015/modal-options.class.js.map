{"version":3,"file":"modal-options.class.js","sources":["../../../../src/modal/modal-options.class.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAkB,cAAc,EAAE,MAAM,eAAe,CAAC;;AAI3E,MAAM,OAAO,YAAY;AAAG;wCAD3B,UAAU;;;;0BACT;AAsDF,MAAM,CAAC,MAAM,mBAAmB,GAAiB;AACjD,IAAE,QAAQ,EAAE,IAAI;AAChB,IAAE,QAAQ,EAAE,IAAI;AAChB,IAAE,KAAK,EAAE,IAAI;AACb,IAAE,IAAI,EAAE,KAAK;AACb,IAAE,mBAAmB,EAAE,KAAK;AAC5B,IAAE,KAAK,EAAE,EAAE;AACX,IAAE,QAAQ,EAAE,IAAI;AAChB,IAAE,YAAY,EAAE,EAAE;AAClB,IAAE,gBAAgB,EAAE,KAAK,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,6BAA6B,GACxC,IAAI,cAAc,CAAe,yBAAyB,CAAC,CAAC;AAE9D,MAAM,CAAC,MAAM,UAAU,GAAc;AACrC,IAAE,kBAAkB,EAAE,yBAAyB;AAC/C,IAAE,QAAQ,EAAE,gBAAgB;AAC5B,IAAE,IAAI,EAAE,YAAY;AACpB,IAAE,IAAI,EAAE,MAAM;AACd,IAAE,EAAE,EAAE,IAAI;AAAE,IACV,IAAI,EAAE,MAAM,CAAC,MAAM;AACrB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAa;AAClC,IAAE,MAAM,EAAE,eAAe;AACzB,IAAE,WAAW,EAAE,uBAAuB;AACtC,IAAE,YAAY,EAAE,wBAAwB;AACxC,IAAE,aAAa,EAAE,oDAAoD;AACrE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAwB;AACzD,IAAE,KAAK,EAAE,GAAG;AACZ,IAAE,QAAQ,EAAE,GAAG;AACf,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAmB;AAC/C,IAAE,QAAQ,EAAE,gBAAgB;AAC5B,IAAE,GAAG,EAAE,KAAK;AACZ,IAAE,IAAI,EAAE,iCAAiC;AACzC,CAAC,CAAC;AACF","sourcesContent":["import { Injectable, StaticProvider, InjectionToken } from '@angular/core';\nimport { ClassName, CloseInterceptorFn, DismissReasons, Selector, TransitionDurations } from './models';\n\n@Injectable()\nexport class ModalOptions<T = Record<string, unknown>> {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   */\n  id?: number | string;\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean;\n\n  focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?: string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\n  /**\n   * Modal data\n   */\n  initialState?: Partial<T>;\n  /**\n   * Function to intercept the closure\n   */\n  closeInterceptor?: CloseInterceptorFn;\n  /**\n   * Modal providers\n   */\n  providers?: StaticProvider[];\n  /**\n   * aria-labelledby attribute value to set on the modal window\n   */\n  ariaLabelledBy?: string;\n  /**\n   * aria-describedby attribute value to set on the modal window\n   */\n  ariaDescribedby?: string;\n}\n\nexport const modalConfigDefaults: ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {},\n  closeInterceptor: void 0\n};\n\nexport const MODAL_CONFIG_DEFAULT_OVERRIDE: InjectionToken<ModalOptions> =\n  new InjectionToken<ModalOptions>('override-default-config');\n\nexport const CLASS_NAME: ClassName = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in', // bs3\n  SHOW: 'show' // bs4\n};\n\nexport const SELECTOR: Selector = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TRANSITION_DURATIONS: TransitionDurations = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS: DismissReasons = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc',\n  BACK: 'browser-back-navigation-clicked'\n};\n"]}