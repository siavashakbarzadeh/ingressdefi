{"version":3,"file":"positioning.service.js","sources":["../../../../src/positioning/positioning.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ElementRef, RendererFactory2, Inject, PLATFORM_ID, NgZone } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { positionElements } from './ng-positioning';\n\nimport { fromEvent, merge, of, animationFrameScheduler, Subject, Observable } from 'rxjs';\nimport { Options } from './models';\n\n\nexport interface PositioningOptions {\n  /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n  element?: HTMLElement | ElementRef | string;\n\n  /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n  target?: HTMLElement | ElementRef | string;\n\n  /**\n   * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n   * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n   * not yet supported:\n   * - vert-attachment can be any of 'top', 'middle', 'bottom'\n   * - horiz-attachment can be any of 'left', 'center', 'right'\n   */\n  attachment?: string;\n\n  /** A string similar to `attachment`. The one difference is that, if it's not provided,\n   * `targetAttachment` will assume the mirror image of `attachment`.\n   */\n  targetAttachment?: string;\n\n  /** A string of the form 'vert-offset horiz-offset'\n   * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n   */\n  offset?: string;\n\n  /** A string similar to `offset`, but referring to the offset of the target */\n  targetOffset?: string;\n\n  /** If true component will be attached to body */\n  appendToBody?: boolean;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class PositioningService {\n  private options?: Options;\n  private update$$ = new Subject<null>();\n  private positionElements = new Map();\n  private triggerEvent$?: Observable<number|Event|null>;\n  private isDisabled = false;\n\n  constructor(\n    ngZone: NgZone,\n    rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) platformId: number\n  ) {\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(\n          fromEvent(window, 'scroll', { passive: true }),\n          fromEvent(window, 'resize', { passive: true }),\n                    of(0, animationFrameScheduler),\n          this.update$$\n        );\n\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .forEach((positionElement: any) => {\n              positionElements(\n                _getHtmlElement(positionElement.target),\n                _getHtmlElement(positionElement.element),\n                positionElement.attachment,\n                positionElement.appendToBody,\n                this.options,\n                rendererFactory.createRenderer(null, null)\n              );\n            });\n        });\n      });\n    }\n  }\n\n  position(options: PositioningOptions): void {\n    this.addPositionElement(options);\n  }\n\n  get event$(): Observable<number|Event|null>|undefined {\n    return this.triggerEvent$;\n  }\n\n  disable(): void {\n    this.isDisabled = true;\n  }\n\n  enable(): void {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options: PositioningOptions): void {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition(): void {\n    this.update$$.next();\n  }\n\n  deletePositionElement(elRef: ElementRef): void {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options: Options) {\n    this.options = options;\n  }\n}\n\nfunction _getHtmlElement(element?: HTMLElement | ElementRef | string): HTMLElement | null {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element ?? null;\n}\n"]}