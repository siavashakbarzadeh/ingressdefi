{"version":3,"file":"ngx-bootstrap-progressbar.umd.js","sources":["../../../../src/progressbar/bar.component.ts","../../../../src/progressbar/progressbar.config.ts","../../../../src/progressbar/progressbar.component.ts","../../../../src/progressbar/progressbar.module.ts","../../../../src/progressbar/ngx-bootstrap-progressbar.ts"],"names":["isBs3","Component","ChangeDetectionStrategy","ElementRef","Renderer2","Input","Injectable","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { ProgressbarType } from './progressbar-type.interface';\n\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar]': 'true',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"',\n    '[style.width.%]': 'percent'\n  }\n})\nexport class BarComponent implements OnChanges {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** current value of progress bar */\n  @Input() value? = 0;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate? = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped? = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType = 'info';\n\n  percent = 100;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  private _prevType?: string;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value || changes.max) {\n      this.percent = 100 * (Number(changes.value.currentValue || 0)\n        / Number((changes.max?.currentValue || this.max) || 100));\n    }\n\n    if (changes.type) {\n      this.applyTypeClasses();\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = void 0;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BarValue, ProgressbarType } from './progressbar-type.interface';\nimport { ProgressbarConfig } from './progressbar.config';\n\n@Component({\n  selector: 'progressbar',\n  templateUrl: './progressbar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[class.progress]': 'true',\n    '[attr.max]': 'max'\n  },\n  styles: [`\n    :host {\n      width: 100%;\n      display: flex;\n    } `]\n})\nexport class ProgressbarComponent {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType;\n\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  set value(value: number | BarValue[]) {\n    this.isStacked = Array.isArray(value);\n    if (typeof value === 'number') {\n      this._value = value;\n      this._values = void 0;\n    } else {\n      this._value = void 0;\n      this._values = value;\n    }\n  }\n\n  isStacked = false;\n  _value? = 0;\n  _values?: BarValue[];\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BarComponent, ProgressbarComponent],\n  exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return { ngModule: ProgressbarModule, providers: [] };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}