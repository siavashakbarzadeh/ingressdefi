{"version":3,"file":"bar.component.js","sources":["../../../../src/progressbar/bar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport { ProgressbarType } from './progressbar-type.interface';\n\n@Component({\n  selector: 'bar',\n  templateUrl: './bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    role: 'progressbar',\n    'aria-valuemin': '0',\n    '[class.progress-bar]': 'true',\n    '[class.progress-bar-animated]': '!isBs3 && animate',\n    '[class.progress-bar-striped]': 'striped',\n    '[class.active]': 'isBs3 && animate',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n    '[attr.aria-valuemax]': 'max',\n    '[style.height.%]': '\"100\"',\n    '[style.width.%]': 'percent'\n  }\n})\nexport class BarComponent implements OnChanges {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** current value of progress bar */\n  @Input() value? = 0;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate? = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped? = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType = 'info';\n\n  percent = 100;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  private _prevType?: string;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.value || changes.max) {\n      this.percent = 100 * (Number(changes.value.currentValue || 0)\n        / Number((changes.max?.currentValue || this.max) || 100));\n    }\n\n    if (changes.type) {\n      this.applyTypeClasses();\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = void 0;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n"]}