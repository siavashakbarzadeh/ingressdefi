{"version":3,"file":"timepicker.actions.js","sources":["../../../../../src/timepicker/reducer/timepicker.actions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;AAS3C,MAAM,OAAO,iBAAiB;AAC9B,IAOE,UAAU,CAAC,KAAqB;AAClC,QAAI,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,WAAW;AACzC,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,WAAW,CAAC,KAAsB;AACpC,QAAI,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,YAAY;AAC1C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,aAAa,CAAC,KAAsB;AACtC,QAAI,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,cAAc;AAC5C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,aAAa,CAAC,KAAsB;AAAI,QACtC,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,cAAc;AAC5C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,OAAO,CAAC,KAAW;AAAI,QACrB,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,aAAa;AAC3C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH,IACE,cAAc,CAAC,KAA+B;AAAI,QAChD,OAAO;AACX,YAAM,IAAI,EAAE,iBAAiB,CAAC,eAAe;AAC7C,YAAM,OAAO,EAAE,KAAK;AACpB,SAAK,CAAC;AACN,IAAE,CAAC;AACH;;mHAAC;AAhDiB,6BAAW,GAAG,wCAAwC,CAAC;AACvD,8BAAY,GAAG,2BAA2B,CAAC;AAC3C,gCAAc,GAAG,6BAA6B,CAAC;AAC/C,gCAAc,GAAG,6BAA6B,CAAC;AAC/C,+BAAa,GAAG,4BAA4B,CAAC;AAC7C,iCAAe,GAAG,8BAA8B,CAAC;6CAPlE,UAAU;;0BACT;AAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n@Injectable()\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value?: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n"]}