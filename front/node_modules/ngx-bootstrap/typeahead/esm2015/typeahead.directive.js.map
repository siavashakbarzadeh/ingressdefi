{"version":3,"file":"typeahead.directive.js","sources":["../../../../src/typeahead/typeahead.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\n\nimport { EMPTY, from, isObservable, Observable, Subscription } from 'rxjs';\nimport { debounceTime, filter, mergeMap, switchMap, tap, toArray } from 'rxjs/operators';\nimport { TypeaheadOptionItemContext, TypeaheadOptionListContext } from './models';\n\nimport { TypeaheadContainerComponent } from './typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-match.class';\nimport { TypeaheadOrder } from './typeahead-order.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-utils';\nimport { TypeaheadConfig } from './typeahead.config';\n\n// eslint-disable-next-line\ntype TypeaheadOption = string | Record<string | number, any>;\ntype TypeaheadOptionArr = TypeaheadOption[] | Observable<TypeaheadOption[]>;\n\n@Directive({\n  selector: '[typeahead]',\n  exportAs: 'bs-typeahead',\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isOpen ? this._container.popupId : null',\n    '[attr.aria-expanded]': 'isOpen',\n    '[attr.aria-autocomplete]': 'list'\n  }\n})\nexport class TypeaheadDirective implements OnInit, OnDestroy {\n  /** options source, can be Array of strings, objects or\n   * an Observable for external matching process\n   */\n  @Input() typeahead?: TypeaheadOptionArr;\n  /** minimal no of characters that needs to be entered before\n   * typeahead kicks-in. When set to 0, typeahead shows on focus with full\n   * list of options (limited as normal by typeaheadOptionsLimit)\n   */\n  @Input() typeaheadMinLength = 1;\n  /** sets use adaptive position */\n  @Input() adaptivePosition = false;\n  /** turn on/off animation */\n  @Input() isAnimated = false;\n  /** minimal wait time after last character typed before typeahead kicks-in */\n  @Input() typeaheadWaitMs = 0;\n  /** maximum length of options items list. The default value is 20 */\n  @Input() typeaheadOptionsLimit?: number;\n  /** when options source is an array of objects, the name of field\n   * that contains the options value, we use array item as option in case\n   * of this field is missing. Supports nested properties and methods.\n   */\n  @Input() typeaheadOptionField?: string;\n  /** when options source is an array of objects, the name of field that\n   * contains the group value, matches are grouped by this field when set.\n   */\n  @Input() typeaheadGroupField?: string;\n  /** Used to specify a custom order of matches. When options source is an array of objects\n   * a field for sorting has to be set up. In case of options source is an array of string,\n   * a field for sorting is absent. The ordering direction could be changed to ascending or descending.\n   */\n  @Input() typeaheadOrderBy?: TypeaheadOrder;\n  /** should be used only in case of typeahead attribute is Observable of array.\n   * If true - loading of options will be async, otherwise - sync.\n   * true make sense if options array is large.\n   */\n  @Input() typeaheadAsync?: boolean;\n  /** match latin symbols.\n   * If true the word súper would match super and vice versa.\n   */\n  @Input() typeaheadLatinize = true;\n  /** Can be use to search words by inserting a single white space between each characters\n   *  for example 'C a l i f o r n i a' will match 'California'.\n   */\n  @Input() typeaheadSingleWords = true;\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to break words. Defaults to space.\n   */\n  @Input() typeaheadWordDelimiters = ' ';\n  /** Can be used to conduct a search of multiple items and have suggestion not for the\n   * whole value of the input but for the value that comes after a delimiter provided via\n   * typeaheadMultipleSearchDelimiters attribute. This option can only be used together with\n   * typeaheadSingleWords option if typeaheadWordDelimiters and typeaheadPhraseDelimiters\n   * are different from typeaheadMultipleSearchDelimiters to avoid conflict in determining\n   * when to delimit multiple searches and when a single word.\n   */\n  @Input() typeaheadMultipleSearch?: boolean;\n  /** should be used only in case typeaheadMultipleSearch attribute is true.\n   * Sets the multiple search delimiter to know when to start a new search. Defaults to comma.\n   * If space needs to be used, then explicitly set typeaheadWordDelimiters to something else than space\n   * because space is used by default OR set typeaheadSingleWords attribute to false if you don't need\n   * to use it together with multiple search.\n   */\n  @Input() typeaheadMultipleSearchDelimiters = ',';\n  /** should be used only in case typeaheadSingleWords attribute is true.\n   * Sets the word delimiter to match exact phrase.\n   * Defaults to simple and double quotes.\n   */\n  @Input() typeaheadPhraseDelimiters = '\\'\"';\n  /** used to specify a custom item template.\n   * Template variables exposed are called item and index;\n   */\n  @Input() typeaheadItemTemplate?: TemplateRef<TypeaheadOptionItemContext>;\n  /** used to specify a custom options list template.\n   * Template variables: matches, itemTemplate, query\n   */\n  @Input() optionsListTemplate?: TemplateRef<TypeaheadOptionListContext>;\n  /** specifies if typeahead is scrollable  */\n  @Input() typeaheadScrollable = false;\n  /** specifies number of options to show in scroll view  */\n  @Input() typeaheadOptionsInScrollableView = 5;\n  /** used to hide result on blur */\n  @Input() typeaheadHideResultsOnBlur?: boolean;\n  /** fired when an options list was opened and the user clicked Tab\n   * If a value equal true, it will be chosen first or active item in the list\n   * If value equal false, it will be chosen an active item in the list or nothing\n   */\n  @Input() typeaheadSelectFirstItem = true;\n  /** makes active first item in a list */\n  @Input() typeaheadIsFirstItemActive = true;\n  /** fired when 'busy' state of this component was changed,\n   * fired on async mode only, returns boolean\n   */\n  @Output() typeaheadLoading = new EventEmitter<boolean>();\n  /** fired on every key event and returns true\n   * in case of matches are not detected\n   */\n  @Output() typeaheadNoResults = new EventEmitter<boolean>();\n  /** fired when option was selected, return object with data of this option. */\n  @Output() typeaheadOnSelect = new EventEmitter<TypeaheadMatch>();\n  /** fired when option was previewed, return object with data of this option. */\n  @Output() typeaheadOnPreview = new EventEmitter<TypeaheadMatch>();\n  /** fired when blur event occurs. returns the active item */\n  @Output() typeaheadOnBlur = new EventEmitter<TypeaheadMatch>();\n\n  /**\n   * A selector specifying the element the typeahead should be appended to.\n   */\n  @Input() container?: string;\n\n  /** This attribute indicates that the dropdown should be opened upwards */\n  @Input() dropup = false;\n\n  // not yet implemented\n  /** if false restrict model values to the ones selected from the popup only will be provided */\n  // @Input() protected typeaheadEditable:boolean;\n  /** if false the first match automatically will not be focused as you type */\n  // @Input() protected typeaheadFocusFirst:boolean;\n  /** format the ng-model result after selection */\n  // @Input() protected typeaheadInputFormatter:any;\n  /** if true automatically select an item when there is one option that exactly matches the user input */\n  // @Input() protected typeaheadSelectOnExact:boolean;\n  /**  if true select the currently highlighted match on blur */\n  // @Input() protected typeaheadSelectOnBlur:boolean;\n  /**  if false don't focus the input element the typeahead directive is associated with on selection */\n    // @Input() protected typeaheadFocusOnSelect:boolean;\n\n  activeDescendant?: string;\n  isOpen = false;\n  list = 'list';\n  _container?: TypeaheadContainerComponent;\n  isActiveItemChanged = false;\n  isFocused = false;\n  cancelRequestOnFocusLost = false;\n\n  protected keyUpEventEmitter = new EventEmitter<string>();\n  protected placement = 'bottom left';\n  protected _matches: TypeaheadMatch[] = [];\n\n  private _typeahead: ComponentLoader<TypeaheadContainerComponent>;\n  private _subscriptions: Subscription[] = [];\n  private _allEnteredValue?: string;\n  private _outsideClickListener: () => void = () => void 0;\n\n  constructor(\n    cis: ComponentLoaderFactory,\n    config: TypeaheadConfig,\n    private changeDetection: ChangeDetectorRef,\n    private element: ElementRef,\n    private ngControl: NgControl,\n    private renderer: Renderer2,\n    viewContainerRef: ViewContainerRef\n  ) {\n\n    this._typeahead = cis.createLoader<TypeaheadContainerComponent>(\n      element,\n      viewContainerRef,\n      renderer\n    )\n      .provide({ provide: TypeaheadConfig, useValue: config });\n\n    Object.assign(this,\n      {\n        typeaheadHideResultsOnBlur: config.hideResultsOnBlur,\n        cancelRequestOnFocusLost: config.cancelRequestOnFocusLost,\n        typeaheadSelectFirstItem: config.selectFirstItem,\n        typeaheadIsFirstItemActive: config.isFirstItemActive,\n        typeaheadMinLength: config.minLength,\n        adaptivePosition: config.adaptivePosition,\n        isAnimated: config.isAnimated\n      }\n    );\n  }\n\n  get matches(): TypeaheadMatch[] {\n    return this._matches;\n  }\n\n  ngOnInit(): void {\n    this.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n\n    this.typeaheadMinLength =\n      this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n\n    // async should be false in case of array\n    if (this.typeaheadAsync === undefined && !(isObservable(this.typeahead))) {\n      this.typeaheadAsync = false;\n    }\n\n    if (isObservable(this.typeahead)) {\n      this.typeaheadAsync = true;\n    }\n\n    if (this.typeaheadAsync) {\n      this.asyncActions();\n    } else {\n      this.syncActions();\n    }\n\n    this.checkDelimitersConflict();\n  }\n\n  @HostListener('input', ['$event'])\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onInput(e: any): void {\n    // For `<input>`s, use the `value` property. For others that don't have a\n    // `value` (such as `<span contenteditable=\"true\">`), use either\n    // `textContent` or `innerText` (depending on which one is supported, i.e.\n    // Firefox or IE).\n    const value =\n      e.target.value !== undefined\n        ? e.target.value\n        : e.target.textContent !== undefined\n        ? e.target.textContent\n        : e.target.innerText;\n\n    if (value != null && value.trim().length >= this.typeaheadMinLength) {\n      this.typeaheadLoading.emit(true);\n      this.keyUpEventEmitter.emit(e.target.value);\n    } else {\n      this.typeaheadLoading.emit(false);\n      this.typeaheadNoResults.emit(false);\n      this.hide();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  onChange(event: KeyboardEvent): void {\n    if (this._container) {\n      // esc\n      if (event.keyCode === 27 || event.key === 'Escape') {\n        this.hide();\n\n        return;\n      }\n\n      // up\n      if (event.keyCode === 38 || event.key === 'ArrowUp') {\n        this.isActiveItemChanged = true;\n        this._container.prevActiveMatch();\n\n        return;\n      }\n\n      // down\n      if (event.keyCode === 40 || event.key === 'ArrowDown') {\n        this.isActiveItemChanged = true;\n        this._container.nextActiveMatch();\n\n        return;\n      }\n\n      // enter\n      if (event.keyCode === 13 || event.key === 'Enter') {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n    }\n  }\n\n  @HostListener('click')\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n    // add setTimeout to fix issue #5251\n    // to get and emit updated value if it's changed on focus\n    setTimeout(() => {\n      if (this.typeaheadMinLength === 0) {\n        this.typeaheadLoading.emit(true);\n        this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n      }\n    }, 0);\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n    if (this._container && !this._container.isFocused) {\n      this.typeaheadOnBlur.emit(this._container.active);\n    }\n\n    if (!this.container && this._matches?.length === 0) {\n      this.typeaheadOnBlur.emit(new TypeaheadMatch(\n        this.element.nativeElement.value,\n        this.element.nativeElement.value, \n        false));\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent): void {\n    // no container - no problems\n    if (!this._container) {\n      return;\n    }\n\n    if (event.keyCode === 9 || event.key === 'Tab') {\n      this.onBlur();\n    }\n\n    if (event.keyCode === 9 || event.key === 'Tab' || event.keyCode === 13 || event.key === 'Enter') {\n      event.preventDefault();\n      if (this.typeaheadSelectFirstItem) {\n        this._container.selectActiveMatch();\n\n        return;\n      }\n\n      if (!this.typeaheadSelectFirstItem) {\n        this._container.selectActiveMatch(this.isActiveItemChanged);\n        this.isActiveItemChanged = false;\n        this.hide();\n      }\n    }\n  }\n\n  changeModel(match?: TypeaheadMatch): void {\n    if (!match) {\n      return;\n    }\n    let valueStr: string;\n    if (this.typeaheadMultipleSearch && this._allEnteredValue) {\n      const tokens = this._allEnteredValue.split(new RegExp(`([${this.typeaheadMultipleSearchDelimiters}]+)`));\n      this._allEnteredValue = tokens.slice(0, tokens.length - 1).concat(match.value).join('');\n      valueStr = this._allEnteredValue;\n    } else {\n      valueStr = match.value;\n    }\n    this.ngControl.viewToModelUpdate(valueStr);\n    this.ngControl.control?.setValue(valueStr);\n    this.changeDetection.markForCheck();\n    this.hide();\n  }\n\n  show(): void {\n    this._typeahead\n      .attach(TypeaheadContainerComponent)\n      .to(this.container)\n      .position({ attachment: `${this.dropup ? 'top' : 'bottom'} left` })\n      .show({\n        typeaheadRef: this,\n        placement: this.placement,\n        animation: false,\n        dropup: this.dropup\n      });\n\n    this._outsideClickListener = this.renderer\n      .listen('document', 'click', (event: MouseEvent) => {\n        if (this.typeaheadMinLength === 0 && this.element.nativeElement.contains(event.target)) {\n          return;\n        }\n        if (!this.typeaheadHideResultsOnBlur || this.element.nativeElement.contains(event.target)) {\n          return;\n        }\n        this.onOutsideClick();\n      });\n\n    if (!this._typeahead.instance || !this.ngControl.control) {\n      return;\n    }\n\n    this._container = this._typeahead.instance;\n    this._container.parent = this;\n    // This improves the speed as it won't have to be done for each list item\n\n    const normalizedQuery = (this.typeaheadLatinize\n      ? latinize(this.ngControl.control.value)\n      : this.ngControl.control.value)\n      .toString()\n      .toLowerCase();\n\n    this._container.query = this.tokenizeQuery(normalizedQuery);\n\n    this._container.matches = this._matches;\n    this.element.nativeElement.focus();\n\n    this._container.activeChangeEvent.subscribe((activeId: string) => {\n      this.activeDescendant = activeId;\n      this.changeDetection.markForCheck();\n    });\n    this.isOpen = true;\n  }\n\n  hide(): void {\n    if (this._typeahead.isShown) {\n      this._typeahead.hide();\n      this._outsideClickListener();\n      this._container = void 0;\n      this.isOpen = false;\n      this.changeDetection.markForCheck();\n    }\n    this.typeaheadOnPreview.emit();\n  }\n\n  onOutsideClick(): void {\n    if (this._container && !this._container.isFocused) {\n      this.hide();\n    }\n  }\n\n  ngOnDestroy() {\n    // clean up subscriptions\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._typeahead.dispose();\n  }\n\n  protected asyncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .pipe(\n          debounceTime<string>(this.typeaheadWaitMs),\n          tap(value => this._allEnteredValue = value),\n          switchMap(() => {\n            if (!this.typeahead) {\n              return EMPTY;\n            }\n            return this.typeahead;\n          })\n        )\n        .subscribe((matches) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected syncActions(): void {\n    this._subscriptions.push(\n      this.keyUpEventEmitter\n        .pipe(\n          debounceTime<string>(this.typeaheadWaitMs),\n          mergeMap((value: string) => {\n            this._allEnteredValue = value;\n            const normalizedQuery = this.normalizeQuery(value);\n\n            if (!this.typeahead) {\n              return EMPTY;\n            }\n\n            const typeahead = isObservable(this.typeahead) ? this.typeahead : from(this.typeahead);\n\n            return typeahead\n              .pipe(\n                filter((option: TypeaheadOption) => {\n                  return !!option && this.testMatch(this.normalizeOption(option), normalizedQuery);\n                }),\n                toArray()\n              );\n          })\n        )\n        .subscribe((matches: TypeaheadOption[]) => {\n          this.finalizeAsyncCall(matches);\n        })\n    );\n  }\n\n  protected normalizeOption(option: TypeaheadOption): string {\n    const optionValue: string = getValueFromObject(\n      option,\n      this.typeaheadOptionField\n    );\n    const normalizedOption = this.typeaheadLatinize\n      ? latinize(optionValue)\n      : optionValue;\n\n    return normalizedOption.toLowerCase();\n  }\n\n  protected tokenizeQuery(currentQuery: string | string[]): string | string[] {\n\n    let query = currentQuery;\n    if (this.typeaheadMultipleSearch && this.typeaheadSingleWords) {\n      if (!this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`,\n        this.typeaheadMultipleSearchDelimiters)) {\n        // single words and multiple search delimiters are different, can be used together\n        query = tokenize(\n          query as string,\n          this.typeaheadWordDelimiters,\n          this.typeaheadPhraseDelimiters,\n          this.typeaheadMultipleSearchDelimiters\n        );\n      }\n    } else if (this.typeaheadSingleWords) {\n      query = tokenize(\n        query as string,\n        this.typeaheadWordDelimiters,\n        this.typeaheadPhraseDelimiters\n      );\n    } else {\n      // multiple searches\n      query = tokenize(\n        query as string,\n        void 0,\n        void 0,\n        this.typeaheadMultipleSearchDelimiters\n      );\n    }\n\n    return query;\n  }\n\n  protected normalizeQuery(value: string): string | string[] {\n    // If singleWords, break model here to not be doing extra work on each iteration\n    let normalizedQuery: string | string[] = (this.typeaheadLatinize\n      ? latinize(value)\n      : value)\n      .toString()\n      .toLowerCase();\n\n    normalizedQuery = this.tokenizeQuery(normalizedQuery);\n\n    return normalizedQuery;\n  }\n\n  protected testMatch(match: string, test: string[] | string): boolean {\n    let spaceLength: number;\n\n    if (typeof test === 'object') {\n      spaceLength = test.length;\n      for (let i = 0; i < spaceLength; i += 1) {\n        if (test[i].length > 0 && match.indexOf(test[i]) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return match.indexOf(test) >= 0;\n  }\n\n  protected finalizeAsyncCall(matches?: TypeaheadOption | TypeaheadOption[]): void {\n    this.prepareMatches(matches || []);\n\n    this.typeaheadLoading.emit(false);\n    this.typeaheadNoResults.emit(!this.hasMatches());\n\n    if (!this.hasMatches()) {\n      this.hide();\n\n      return;\n    }\n\n    if (!this.isFocused && this.cancelRequestOnFocusLost) {\n      return;\n    }\n\n    if (this._container && this.ngControl.control) {\n      // fix: remove usage of ngControl internals\n      const _controlValue = (this.typeaheadLatinize\n        ? latinize(this.ngControl.control.value)\n        : this.ngControl.control.value) || '';\n\n      // This improves the speed as it won't have to be done for each list item\n      const normalizedQuery = _controlValue.toString().toLowerCase();\n\n      this._container.query = this.tokenizeQuery(normalizedQuery);\n      this._container.matches = this._matches;\n    } else {\n      this.show();\n    }\n  }\n\n  protected prepareMatches(options: TypeaheadOption | TypeaheadOption[]): void {\n    const limited = options.slice(0, this.typeaheadOptionsLimit);\n    const sorted = !this.typeaheadOrderBy ? limited : this.orderMatches(limited);\n\n    if (this.typeaheadGroupField) {\n      let matches: TypeaheadMatch[] = [];\n\n      // extract all group names\n      const groups = sorted\n        .map((option: TypeaheadOption) =>\n          getValueFromObject(option, this.typeaheadGroupField)\n        )\n        .filter((v: string, i: number, a: string[]) => a.indexOf(v) === i);\n\n      groups.forEach((group: string) => {\n        // add group header to array of matches\n        matches.push(new TypeaheadMatch(group, group, true));\n\n        // add each item of group to array of matches\n        matches = matches.concat(\n          sorted\n            .filter((option: TypeaheadOption) =>\n              getValueFromObject(option, this.typeaheadGroupField) === group\n            )\n            .map((option: TypeaheadOption) =>\n              new TypeaheadMatch(\n                option,\n                getValueFromObject(option, this.typeaheadOptionField)\n              )\n            )\n        );\n      });\n\n      this._matches = matches;\n    } else {\n      this._matches = sorted.map(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (option: any) =>\n          new TypeaheadMatch(\n            option,\n            getValueFromObject(option, this.typeaheadOptionField)\n          )\n      );\n    }\n  }\n\n  protected orderMatches(options: TypeaheadOption[]): TypeaheadOption[] {\n    if (!options.length) {\n      return options;\n    }\n\n    if (this.typeaheadOrderBy !== null\n      && this.typeaheadOrderBy !== undefined\n      && typeof this.typeaheadOrderBy === 'object'\n      && Object.keys(this.typeaheadOrderBy).length === 0) {\n      console.error('Field and direction properties for typeaheadOrderBy have to be set according to documentation!');\n\n      return options;\n    }\n\n    const { field, direction } = (this.typeaheadOrderBy || {});\n\n    if (!direction || !(direction === 'asc' || direction === 'desc')) {\n      console.error('typeaheadOrderBy direction has to equal \"asc\" or \"desc\". Please follow the documentation.');\n\n      return options;\n    }\n\n    if (typeof options[0] === 'string') {\n      return direction === 'asc' ? options.sort() : options.sort().reverse();\n    }\n\n    if (!field || typeof field !== 'string') {\n      console.error('typeaheadOrderBy field has to set according to the documentation.');\n\n      return options;\n    }\n\n    return options.sort((a: TypeaheadOption, b: TypeaheadOption) => {\n      const stringA = getValueFromObject(a, field);\n      const stringB = getValueFromObject(b, field);\n\n      if (stringA < stringB) {\n        return direction === 'asc' ? -1 : 1;\n      }\n\n      if (stringA > stringB) {\n        return direction === 'asc' ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n\n  protected hasMatches(): boolean {\n    return this._matches.length > 0;\n  }\n\n  protected checkDelimitersConflict(): void {\n    if (this.typeaheadMultipleSearch && this.typeaheadSingleWords\n      && (this.haveCommonCharacters(`${this.typeaheadPhraseDelimiters}${this.typeaheadWordDelimiters}`,\n        this.typeaheadMultipleSearchDelimiters))) {\n      throw new Error(`Delimiters used in typeaheadMultipleSearchDelimiters must be different\n          from delimiters used in typeaheadWordDelimiters (current value: ${this.typeaheadWordDelimiters}) and\n          typeaheadPhraseDelimiters (current value: ${this.typeaheadPhraseDelimiters}).\n          Please refer to the documentation`);\n    }\n  }\n\n  protected haveCommonCharacters(str1: string, str2: string) {\n    for (let i = 0; i < str1.length; i++) {\n      if (str1.charAt(i).indexOf(str2) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"]}