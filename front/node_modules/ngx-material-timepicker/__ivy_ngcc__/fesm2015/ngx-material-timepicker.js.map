{"version":3,"file":"ngx-material-timepicker.js","sources":["ng:/ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker-event.service.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/services/dom.service.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/utils/timepicker.utils.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/tokens/time-locale.token.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/ngx-material-timepicker-container/ngx-material-timepicker-container.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/utils/timepicker-time.utils.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/time-parser.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/overlay.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/ngx-timepicker-field.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/time-localizer.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/active-hour.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/pipes/active-minute.pipe.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/components/ngx-material-timepicker-content/ngx-material-timepicker-content.component.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/directives/append-to-input.directive.ts","ng:/ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts","ng:/ngx-material-timepicker/ngx-material-timepicker.ts"],"names":["tslib_1.__param","tslib_1.__decorate"],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerEventService {\n\n    private backdropClickSubject: Subject<MouseEvent> = new Subject();\n    private keydownEventSubject: Subject<KeyboardEvent> = new Subject();\n\n    get backdropClick(): Observable<MouseEvent> {\n        return this.backdropClickSubject.asObservable().pipe(shareReplay({bufferSize: 1, refCount: true}));\n    }\n\n    get keydownEvent(): Observable<KeyboardEvent> {\n        return this.keydownEventSubject.asObservable().pipe(shareReplay({bufferSize: 1, refCount: true}));\n    }\n\n    dispatchEvent(event: KeyboardEvent | MouseEvent): void {\n        switch (event.type) {\n            case 'click':\n                this.backdropClickSubject.next(<MouseEvent>event);\n                break;\n            case 'keydown':\n                this.keydownEventSubject.next(<KeyboardEvent>event);\n                break;\n            default:\n                throw new Error('no such event type');\n        }\n    }\n\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Inject,\n    Injectable,\n    Injector,\n    Optional,\n    Type\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    NgxMaterialTimepickerContainerComponent\n} from '../components/ngx-material-timepicker-container/ngx-material-timepicker-container.component';\nimport { TimepickerConfig } from '../models/timepicker-config.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DomService {\n\n    private componentRef: ComponentRef<NgxMaterialTimepickerContainerComponent>;\n\n    constructor(private cfr: ComponentFactoryResolver,\n                private appRef: ApplicationRef,\n                private injector: Injector,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n    }\n\n    appendTimepickerToBody(timepicker: Type<NgxMaterialTimepickerContainerComponent>, config: TimepickerConfig): void {\n        this.componentRef = this.cfr.resolveComponentFactory(timepicker).create(this.injector);\n\n        Object.keys(config).forEach(key => this.componentRef.instance[key] = config[key]);\n\n        this.appRef.attachView(this.componentRef.hostView);\n\n        const domElement: HTMLElement = (this.componentRef.hostView as EmbeddedViewRef<NgxMaterialTimepickerContainerComponent>)\n            .rootNodes[0];\n\n        this.document.body.appendChild(domElement);\n    }\n\n    destroyTimepicker(): void {\n        this.componentRef.destroy();\n        this.appRef.detachView(this.componentRef.hostView);\n    }\n}\n","export enum TimeUnit {\n    HOUR,\n    MINUTE\n}\n","export enum TimePeriod {\n    AM = 'AM',\n    PM = 'PM'\n}\n","export enum TimeFormat {\n    TWELVE = 'hh:mm a',\n    TWELVE_SHORT = 'h:m a',\n    TWENTY_FOUR = 'HH:mm',\n    TWENTY_FOUR_SHORT = 'H:m'\n}\n","/* tslint:disable */\nimport { DateTime } from 'luxon';\n\n\nexport function isSameOrAfter(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour >= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\n    }\n}\n\nexport function isSameOrBefore(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return time.hour <= compareWith.hour;\n    }\n    if (unit === 'minutes') {\n        return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\n    }\n}\n\nexport function isBetween(time: DateTime, before: DateTime, after: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\n    if (unit === 'hours') {\n        return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\n    }\n    if (unit === 'minutes') {\n        return isSameOrBefore(time, after) && isSameOrAfter(time, before);\n    }\n}\n\nexport function isDigit(e: KeyboardEvent) {\n    // Allow: backspace, delete, tab, escape, enter\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\n        // Allow: Ctrl/cmd+A\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+C\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: Ctrl/cmd+X\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\n        // Allow: home, end, left, right, up, down\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\n\n        return true;\n    }\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\n}\n","import { DateTime, LocaleOptions } from 'luxon';\n\nimport { TimeFormat } from '../models/time-format.enum';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { isBetween, isSameOrAfter, isSameOrBefore } from '../utils/timepicker.utils';\nimport { TimeOptions } from '../models/time-options.interface';\n\n// @dynamic\nexport class TimeAdapter {\n    static DEFAULT_FORMAT = 12;\n    static DEFAULT_LOCALE = 'en-US';\n    static DEFAULT_NUMBERING_SYSTEM = 'latn';\n\n    static parseTime(time: string, opts: TimeOptions): DateTime {\n        const {numberingSystem, locale} = TimeAdapter.getLocaleOptionsByTime(time, opts);\n        const isPeriodExist = time.split(' ').length === 2;\n        const timeMask = isPeriodExist ? TimeFormat.TWELVE_SHORT : TimeFormat.TWENTY_FOUR_SHORT;\n\n        return DateTime.fromFormat(time, timeMask, {numberingSystem, locale});\n    }\n\n    static formatTime(time: string, opts: TimeOptions): string {\n        if (!time) {\n            return 'Invalid Time';\n        }\n        const {format} = opts;\n        const parsedTime = TimeAdapter.parseTime(time, opts).setLocale(TimeAdapter.DEFAULT_LOCALE);\n\n        if (format !== 24) {\n            return parsedTime.toLocaleString({\n                ...DateTime.TIME_SIMPLE,\n                hour12: format !== 24,\n                numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM\n            }).replace(/\\u200E/g, '');\n        }\n        return parsedTime.toISOTime({\n            includeOffset: false,\n            suppressMilliseconds: true,\n            suppressSeconds: true\n        }).replace(/\\u200E/g, '');\n    }\n\n    static toLocaleTimeString(time: string, opts: TimeOptions = {}): string {\n        const {format = TimeAdapter.DEFAULT_FORMAT, locale = TimeAdapter.DEFAULT_LOCALE} = opts;\n        const hourCycle = format === 24 ? 'h23' : 'h12';\n        const timeFormat = {...DateTime.TIME_SIMPLE, hourCycle};\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\n\n        return DateTime.fromFormat(time, timeMask).setLocale(locale).toLocaleString(timeFormat);\n    }\n\n    static isTimeAvailable(\n        time: string,\n        min?: DateTime,\n        max?: DateTime,\n        granularity?: 'hours' | 'minutes',\n        minutesGap?: number | null,\n        format?: number\n    ): boolean {\n        if (!time) {\n            return;\n        }\n\n        const convertedTime = this.parseTime(time, {format});\n        const minutes = convertedTime.minute;\n\n        if (minutesGap && minutes === minutes && minutes % minutesGap !== 0) {\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\n        }\n        const isAfter = (min && !max)\n            && isSameOrAfter(convertedTime, min, granularity);\n        const isBefore = (max && !min)\n            && isSameOrBefore(convertedTime, max, granularity);\n        const between = (min && max)\n            && isBetween(convertedTime, min, max, granularity);\n        const isAvailable = !min && !max;\n\n        return isAfter || isBefore || between || isAvailable;\n    }\n\n    /***\n     *  Format hour according to time format (12 or 24)\n     */\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\n        if (format === 24) {\n            return currentHour;\n        }\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\n\n        if (period === TimePeriod.AM && hour === 12) {\n            return 0;\n        } else if (period === TimePeriod.PM && hour === 24) {\n            return 12;\n        }\n        return hour;\n    }\n\n    static fromDateTimeToString(time: DateTime, format: number): string {\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\n\n        return time.reconfigure({\n            numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM,\n            locale: TimeAdapter.DEFAULT_LOCALE\n        }).toFormat(timeFormat);\n    }\n\n    private static getLocaleOptionsByTime(time: string, opts: TimeOptions): LocaleOptions {\n        const {numberingSystem, locale} = DateTime.local().setLocale(opts.locale).resolvedLocaleOpts();\n        const localeConfig: LocaleOptions = {numberingSystem: numberingSystem, locale};\n        const defaultConfig: LocaleOptions = {numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM, locale: TimeAdapter.DEFAULT_LOCALE};\n\n        return isNaN(parseInt(time, 10)) ? localeConfig : defaultConfig;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { TimePeriod } from '../models/time-period.enum';\nimport { TimeAdapter } from './time-adapter';\nimport { DateTime } from 'luxon';\n\n\nconst DEFAULT_HOUR: ClockFaceTime = {\n    time: 12,\n    angle: 360\n};\nconst DEFAULT_MINUTE: ClockFaceTime = {\n    time: 0,\n    angle: 360\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NgxMaterialTimepickerService {\n\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\n\n\n    set hour(hour: ClockFaceTime) {\n        this.hourSubject.next(hour);\n    }\n\n    get selectedHour(): Observable<ClockFaceTime> {\n        return this.hourSubject.asObservable();\n    }\n\n    set minute(minute: ClockFaceTime) {\n        this.minuteSubject.next(minute);\n    }\n\n    get selectedMinute(): Observable<ClockFaceTime> {\n        return this.minuteSubject.asObservable();\n    }\n\n    set period(period: TimePeriod) {\n        const isPeriodValid = (period === TimePeriod.AM) || (period === TimePeriod.PM);\n\n        if (isPeriodValid) {\n            this.periodSubject.next(period);\n        }\n    }\n\n    get selectedPeriod(): Observable<TimePeriod> {\n        return this.periodSubject.asObservable();\n    }\n\n\n    setDefaultTimeIfAvailable(time: string, min: DateTime, max: DateTime, format: number, minutesGap?: number) {\n        /* Workaround to double error message*/\n        try {\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\n                this.setDefaultTime(time, format);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    getFullTime(format: number): string {\n        const selectedHour = this.hourSubject.getValue().time;\n        const selectedMinute = this.minuteSubject.getValue().time;\n        const hour = selectedHour != null ? selectedHour : DEFAULT_HOUR.time;\n        const minute = selectedMinute != null ? selectedMinute : DEFAULT_MINUTE.time;\n        const period = format === 12 ? this.periodSubject.getValue() : '';\n        const time = `${hour}:${minute} ${period}`.trim();\n\n        return TimeAdapter.formatTime(time, {format});\n    }\n\n    private setDefaultTime(time: string, format: number) {\n        const defaultTime = TimeAdapter.parseTime(time, {format}).toJSDate();\n\n        if (DateTime.fromJSDate(defaultTime).isValid) {\n            const period = time.substr(time.length - 2).toUpperCase();\n            const hour = defaultTime.getHours();\n\n            this.hour = {...DEFAULT_HOUR, time: formatHourByPeriod(hour, period as TimePeriod)};\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\n            this.period = period as TimePeriod;\n\n        } else {\n            this.resetTime();\n        }\n    }\n\n    private resetTime(): void {\n        this.hour = {...DEFAULT_HOUR};\n        this.minute = {...DEFAULT_MINUTE};\n        this.period = TimePeriod.AM;\n    }\n}\n\n/***\n *  Format hour in 24hours format to meridian (AM or PM) format\n */\nfunction formatHourByPeriod(hour: number, period: TimePeriod): number {\n    switch (period) {\n        case TimePeriod.AM:\n            return hour === 0 ? 12 : hour;\n        case TimePeriod.PM:\n            return hour === 12 ? 12 : hour - 12;\n        default:\n            return hour;\n    }\n}\n","import { InjectionToken } from '@angular/core';\nimport { TimeAdapter } from '../services/time-adapter';\n\nexport const TIME_LOCALE = new InjectionToken<string>('TimeLocale', {\n    providedIn: 'root',\n    factory: () => TimeAdapter.DEFAULT_LOCALE\n});\n","import { Component, HostListener, Inject, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { DateTime } from 'luxon';\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\nimport { Observable, Subject } from 'rxjs';\nimport { shareReplay, takeUntil } from 'rxjs/operators';\nimport { TimeAdapter } from '../../services/time-adapter';\nimport { TimepickerRef } from '../../models/timepicker-ref.interface';\nimport { TimepickerConfig } from '../../models/timepicker-config.interface';\nimport { NgxMaterialTimepickerEventService } from '../../services/ngx-material-timepicker-event.service';\nimport { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\n\nexport enum AnimationState {\n    ENTER = 'enter',\n    LEAVE = 'leave'\n}\n\n@Component({\n    selector: 'ngx-material-timepicker-container',\n    templateUrl: './ngx-material-timepicker-container.component.html',\n    styleUrls: ['./ngx-material-timepicker-container.component.scss'],\n    animations: [\n        trigger('timepicker', [\n            transition(`* => ${AnimationState.ENTER}`, [\n                style({transform: 'translateY(-30%)'}),\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\n            ]),\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\n                style({transform: 'translateY(0)', opacity: 1}),\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\n            ])\n        ])\n    ],\n    providers: [NgxMaterialTimepickerService]\n})\nexport class NgxMaterialTimepickerContainerComponent implements OnInit, OnDestroy, TimepickerConfig {\n\n    selectedHour: Observable<ClockFaceTime>;\n    selectedMinute: Observable<ClockFaceTime>;\n    selectedPeriod: Observable<TimePeriod>;\n\n    timeUnit = TimeUnit;\n    activeTimeUnit = TimeUnit.HOUR;\n\n    animationState: AnimationState;\n\n    cancelBtnTmpl: TemplateRef<Node>;\n    editableHintTmpl: TemplateRef<Node>;\n    confirmBtnTmpl: TemplateRef<Node>;\n    inputElement: any;\n\n    enableKeyboardInput: boolean;\n    preventOverlayClick: boolean;\n    disableAnimation: boolean;\n    disabled: boolean;\n    appendToInput: boolean;\n    hoursOnly: boolean;\n\n    format: number;\n    minutesGap: number;\n\n    minTime: DateTime;\n    maxTime: DateTime;\n    time: string;\n\n    timepickerClass: string;\n    theme: NgxMaterialTimepickerTheme;\n    timepickerBaseRef: TimepickerRef;\n\n    @Input()\n    set defaultTime(time: string) {\n        this._defaultTime = time;\n        this.setDefaultTime(time);\n    }\n\n    get defaultTime(): string {\n        return this._defaultTime;\n    }\n\n    private _defaultTime: string;\n\n    private unsubscribe = new Subject();\n\n    constructor(private timepickerService: NgxMaterialTimepickerService,\n                private eventService: NgxMaterialTimepickerEventService,\n                @Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    @HostListener('keydown', ['$event'])\n    onKeydown(e: any): void {\n        this.eventService.dispatchEvent(e);\n        e.stopPropagation();\n    }\n\n    ngOnInit(): void {\n\n        this.animationState = !this.disableAnimation && AnimationState.ENTER;\n\n        this.defineTime();\n\n        this.selectedHour = this.timepickerService.selectedHour\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\n\n        this.selectedMinute = this.timepickerService.selectedMinute\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\n\n        this.selectedPeriod = this.timepickerService.selectedPeriod\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\n\n        this.timepickerBaseRef.timeUpdated.pipe(takeUntil(this.unsubscribe))\n            .subscribe(this.setDefaultTime.bind(this));\n    }\n\n    onHourChange(hour: ClockFaceTime): void {\n        this.timepickerService.hour = hour;\n        this.onTimeChange();\n    }\n\n    onHourSelected(hour: number): void {\n        if (!this.hoursOnly) {\n            this.changeTimeUnit(TimeUnit.MINUTE);\n        }\n        this.timepickerBaseRef.hourSelected.next(hour);\n    }\n\n    onMinuteChange(minute: ClockFaceTime): void {\n        this.timepickerService.minute = minute;\n        this.onTimeChange();\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n        this.onTimeChange();\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.activeTimeUnit = unit;\n    }\n\n    setTime(): void {\n        this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format));\n        this.close();\n    }\n\n    close(): void {\n        if (this.disableAnimation) {\n            this.timepickerBaseRef.close();\n            return;\n        }\n\n        this.animationState = AnimationState.LEAVE;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\n            this.timepickerBaseRef.close();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n\n    private setDefaultTime(time: string): void {\n        this.timepickerService.setDefaultTimeIfAvailable(\n            time, this.minTime, this.maxTime, this.format, this.minutesGap);\n    }\n\n    private defineTime(): void {\n        const minTime = this.minTime;\n\n        if (minTime && (!this.time && !this.defaultTime)) {\n            const time = TimeAdapter.fromDateTimeToString(minTime, this.format);\n\n            this.setDefaultTime(time);\n        }\n    }\n\n    private onTimeChange(): void {\n        const time = TimeAdapter.toLocaleTimeString(this.timepickerService.getFullTime(this.format), {\n            locale: this.locale,\n            format: this.format\n        });\n\n        this.timepickerBaseRef.timeChanged.emit(time);\n    }\n\n}\n","import { Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\nimport { merge, Subject } from 'rxjs';\nimport { NgxMaterialTimepickerEventService } from './services/ngx-material-timepicker-event.service';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { DateTime } from 'luxon';\nimport { DomService } from './services/dom.service';\nimport {\n    NgxMaterialTimepickerContainerComponent\n} from './components/ngx-material-timepicker-container/ngx-material-timepicker-container.component';\nimport { TimepickerRef } from './models/timepicker-ref.interface';\nimport { NgxMaterialTimepickerTheme } from './models/ngx-material-timepicker-theme.interface';\n\nconst ESCAPE = 27;\n\n@Component({\n    selector: 'ngx-material-timepicker',\n    template: '',\n})\nexport class NgxMaterialTimepickerComponent implements TimepickerRef {\n\n    timeUpdated = new Subject<string>();\n\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\n    @Input('ESC') isEsc = true;\n    @Input() enableKeyboardInput: boolean;\n    @Input() preventOverlayClick: boolean;\n    @Input() disableAnimation: boolean;\n    @Input() appendToInput: boolean;\n    @Input() hoursOnly = false;\n    @Input() defaultTime: string;\n    @Input() timepickerClass: string;\n    @Input() theme: NgxMaterialTimepickerTheme;\n    @Input() min: DateTime;\n    @Input() max: DateTime;\n    /**\n     * @deprecated Since version 5.1.1. Will be deleted on version 6.0.0. Use @Input() theme instead\n     */\n    @Input()\n    set ngxMaterialTimepickerTheme(theme: NgxMaterialTimepickerTheme) {\n        console.warn(`'ngxMaterialTimepickerTheme' is deprecated. Use 'theme' instead`);\n        this._ngxMaterialTimepickerTheme = theme;\n    }\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n    }\n\n    get format(): number {\n        return this.timepickerInput ? this.timepickerInput.format : this._format;\n    }\n\n    @Input()\n    set minutesGap(gap: number) {\n        if (gap == null) {\n            return;\n        }\n        gap = Math.floor(gap);\n        this._minutesGap = gap <= 59 ? gap : 1;\n    }\n\n    get minutesGap(): number {\n        return this._minutesGap;\n    }\n\n    @Output() timeSet = new EventEmitter<string>();\n    @Output() opened = new EventEmitter<null>();\n    @Output() closed = new EventEmitter<null>();\n    @Output() hourSelected = new EventEmitter<number>();\n    @Output() timeChanged = new EventEmitter<string>();\n\n    private _minutesGap: number;\n    private _format: number;\n    private _ngxMaterialTimepickerTheme: NgxMaterialTimepickerTheme;\n    private timepickerInput: TimepickerDirective;\n    private unsubscribe = new Subject();\n\n    constructor(private eventService: NgxMaterialTimepickerEventService,\n                private domService: DomService) {\n    }\n\n    get minTime(): DateTime {\n        return this.timepickerInput ? (this.timepickerInput.min as DateTime) : this.min;\n    }\n\n    get maxTime(): DateTime {\n        return this.timepickerInput ? (this.timepickerInput.max as DateTime) : this.max;\n    }\n\n    get disabled(): boolean {\n        return this.timepickerInput && this.timepickerInput.disabled;\n    }\n\n    get time(): string {\n        return this.timepickerInput && this.timepickerInput.value;\n    }\n\n    get inputElement(): any {\n        return this.timepickerInput && this.timepickerInput.element;\n    }\n\n    /***\n     * Register an input with this timepicker.\n     * input - The timepicker input to register with this timepicker\n     */\n    registerInput(input: TimepickerDirective): void {\n        if (this.timepickerInput) {\n            throw Error('A Timepicker can only be associated with a single input.');\n        }\n        this.timepickerInput = input;\n    }\n\n    open(): void {\n        this.domService.appendTimepickerToBody(NgxMaterialTimepickerContainerComponent, {\n            timepickerBaseRef: this,\n            time: this.time,\n            defaultTime: this.defaultTime,\n            maxTime: this.maxTime,\n            minTime: this.minTime,\n            format: this.format,\n            minutesGap: this.minutesGap,\n            disableAnimation: this.disableAnimation,\n            cancelBtnTmpl: this.cancelBtnTmpl,\n            confirmBtnTmpl: this.confirmBtnTmpl,\n            editableHintTmpl: this.editableHintTmpl,\n            disabled: this.disabled,\n            enableKeyboardInput: this.enableKeyboardInput,\n            preventOverlayClick: this.preventOverlayClick,\n            appendToInput: this.appendToInput,\n            hoursOnly: this.hoursOnly,\n            theme: this.theme || this._ngxMaterialTimepickerTheme,\n            timepickerClass: this.timepickerClass,\n            inputElement: this.inputElement\n        });\n        this.opened.next();\n        this.subscribeToEvents();\n    }\n\n    close(): void {\n        this.domService.destroyTimepicker();\n        this.closed.next();\n        this.unsubscribeFromEvents();\n    }\n\n    updateTime(time: string): void {\n        this.timeUpdated.next(time);\n    }\n\n    private subscribeToEvents(): void {\n        merge(this.eventService.backdropClick,\n            this.eventService.keydownEvent.pipe(filter(e => e.keyCode === ESCAPE && this.isEsc)))\n            .pipe(takeUntil(this.unsubscribe))\n            .subscribe(() => this.close());\n    }\n\n    private unsubscribeFromEvents(): void {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n}\n","import {Directive} from '@angular/core';\n\n/* To override a default toggle icon */\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\n\nexport class NgxMaterialTimepickerToggleIconDirective {\n}\n","import {Component, ContentChild, Input} from '@angular/core';\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\n\n@Component({\n    selector: 'ngx-material-timepicker-toggle',\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\n})\n\nexport class NgxMaterialTimepickerToggleComponent {\n\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    private _disabled: boolean;\n\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective, {static: true}) customIcon: NgxMaterialTimepickerToggleIconDirective;\n\n    open(event): void {\n        if (this.timepicker) {\n            this.timepicker.open();\n            event.stopPropagation();\n        }\n    }\n}\n","import { Directive, ElementRef, HostListener, Inject, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { DateTime } from 'luxon';\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\n\n@Directive({\n    selector: '[ngxTimepicker]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: TimepickerDirective,\n            multi: true\n        }\n    ],\n    host: {\n        '[disabled]': 'disabled',\n        '(change)': 'updateValue($event.target.value)',\n        '(blur)': 'onTouched()',\n    },\n})\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\n\n        if (isDynamicallyChanged) {\n            this.value = this._value;\n            this._timepicker.updateTime(this._value);\n        }\n        this.previousFormat = this._format;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n    private _format = 12;\n\n    @Input()\n    set min(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\n            return;\n        }\n        this._min = value;\n    }\n\n    get min(): string | DateTime {\n        return this._min;\n    }\n\n    private _min: string | DateTime;\n\n    @Input()\n    set max(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\n            return;\n        }\n        this._max = value;\n    }\n\n    get max(): string | DateTime {\n        return this._max;\n    }\n\n    private _max: string | DateTime;\n\n    @Input('ngxTimepicker')\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\n        this.registerTimepicker(picker);\n    }\n\n    private _timepicker: NgxMaterialTimepickerComponent;\n\n    @Input()\n    set value(value: string) {\n        if (!value) {\n            this._value = '';\n            this.updateInputValue();\n            return;\n        }\n        const time = TimeAdapter.formatTime(value, {locale: this.locale, format: this.format});\n        const isAvailable = TimeAdapter.isTimeAvailable(\n            time,\n            <DateTime>this._min,\n            <DateTime>this._max,\n            'minutes',\n            this._timepicker.minutesGap,\n            this._format\n        );\n\n        if (isAvailable) {\n            this._value = time;\n            this.updateInputValue();\n            return;\n        }\n        console.warn('Selected time doesn\\'t match min or max value');\n    }\n\n    get value(): string {\n        if (!this._value) {\n            return '';\n        }\n        return TimeAdapter.toLocaleTimeString(this._value, {format: this.format, locale: this.locale});\n    }\n\n    private _value = '';\n\n    @Input() disabled: boolean;\n    @Input() disableClick: boolean;\n\n    private timepickerSubscriptions: Subscription[] = [];\n    private previousFormat: number;\n\n    onTouched = () => {\n    }\n\n    private onChange: (value: any) => void = () => {\n    }\n\n    constructor(private elementRef: ElementRef,\n                @Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    get element(): any {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    private set defaultTime(time: string) {\n        this._timepicker.defaultTime = TimeAdapter.formatTime(time, {locale: this.locale, format: this.format});\n    }\n\n    updateValue(value: string) {\n        this.value = value;\n        this.onChange(value);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['value'] && changes['value'].currentValue) {\n            this.defaultTime = changes['value'].currentValue;\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event) {\n        if (!this.disableClick) {\n            this._timepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    writeValue(value: string): void {\n        this.value = value;\n        if (value) {\n            this.defaultTime = value;\n        }\n    }\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    ngOnDestroy() {\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\n    }\n\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\n        if (picker) {\n            this._timepicker = picker;\n            this._timepicker.registerInput(this);\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\n                this.value = time;\n                this.onChange(this.value);\n                this.onTouched();\n                this.defaultTime = this._value;\n            }));\n        } else {\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\n        }\n    }\n\n    private updateInputValue(): void {\n        this.elementRef.nativeElement.value = this.value;\n    }\n\n}\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\n\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\n\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\n\n    private element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngAfterViewInit() {\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n    }\n\n    private setTheme(theme): void {\n        for (const val in theme) {\n            if (theme.hasOwnProperty(val)) {\n                if (typeof theme[val] === 'string') {\n                    for (const prop in theme) {\n                        if (theme.hasOwnProperty(prop)) {\n                            this.element.style.setProperty(`--${camelCaseToDash(prop)}`, theme[prop]);\n                        }\n                    }\n                    return;\n                }\n                this.setTheme(theme[val]);\n            }\n\n        }\n    }\n}\n\nfunction camelCaseToDash(myStr) {\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","import { ClockFaceTime } from '../models/clock-face-time.interface';\nimport { TimeAdapter } from '../services/time-adapter';\nimport { TimeFormat } from '../models/time-format.enum';\nimport { DisabledTimeConfig } from '../models/disabled-time-config.interface';\nimport { DateTime } from 'luxon';\n\n// @dynamic\nexport class TimepickerTimeUtils {\n\n  static  getHours(format: number): ClockFaceTime[] {\n        return Array(format).fill(1).map((v, i) => {\n            const angleStep = 30;\n            const time = v + i;\n            const angle = angleStep * time;\n            return {time: time === 24 ? 0 : time, angle};\n        });\n    }\n\n  static  disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\n        if (config.min || config.max) {\n\n            return hours.map(value => {\n                const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\n                const currentTime = DateTime.fromObject({hour}).toFormat(TimeFormat.TWELVE);\n\n                return {\n                    ...value,\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\n                };\n            });\n        }\n        return hours;\n    }\n\n   static getMinutes(gap = 1): ClockFaceTime[] {\n        const minutesCount = 60;\n        const angleStep = 360 / minutesCount;\n        const minutes = [];\n\n        for (let i = 0; i < minutesCount; i++) {\n            const angle = angleStep * i;\n            if (i % gap === 0) {\n                minutes.push({time: i, angle: angle !== 0 ? angle : 360});\n            }\n        }\n        return minutes;\n    }\n\n    static disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\n        if (config.min || config.max) {\n\n            const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\n\n            return minutes.map(value => {\n                const currentTime = DateTime.fromObject({hour, minute: value.time}).toFormat(TimeFormat.TWELVE);\n\n                return {\n                    ...value,\n                    disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\n                };\n            });\n        }\n        return minutes;\n    }\n\n}\n","import { EventEmitter, Input, Output } from '@angular/core';\nimport { DateTime } from 'luxon';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n\nexport class NgxMaterialTimepickerHoursFace {\n\n    @Input() selectedHour: ClockFaceTime;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\n    @Output() hourSelected = new EventEmitter<number>();\n\n    hoursList: ClockFaceTime[] = [];\n\n    protected constructor(format: number) {\n        this.hoursList = TimepickerTimeUtils.getHours(format);\n    }\n\n    onTimeSelected(time: number): void {\n        this.hourSelected.next(time);\n    }\n}\n","import { AfterContentInit, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { NgxMaterialTimepickerHoursFace } from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-24-hours-face',\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\n\n    constructor() {\n        super(24);\n    }\n\n    ngAfterContentInit() {\n        this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n            min: this.minTime,\n            max: this.maxTime,\n            format: this.format\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgxMaterialTimepickerHoursFace } from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-12-hours-face',\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\n\n    @Input() period: TimePeriod;\n\n    constructor() {\n        super(12);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { DateTime } from 'luxon';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n\n@Component({\n    selector: 'ngx-material-timepicker-minutes-face',\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\n})\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\n\n    minutesList: ClockFaceTime[] = [];\n    timeUnit = TimeUnit;\n\n    @Input() selectedMinute: ClockFaceTime;\n    @Input() selectedHour: number;\n    @Input() period: TimePeriod;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue) {\n            const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n            this.minutesList = TimepickerTimeUtils.disableMinutes(minutes, this.selectedHour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimeUnit } from '../../models/time-unit.enum';\n\nconst CLOCK_HAND_STYLES = {\n    small: {\n        height: '75px',\n        top: 'calc(50% - 75px)'\n    },\n    large: {\n        height: '103px',\n        top: 'calc(50% - 103px)'\n    }\n};\n\n@Component({\n    selector: 'ngx-material-timepicker-face',\n    templateUrl: './ngx-material-timepicker-face.component.html',\n    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n    timeUnit = TimeUnit;\n\n    isClockFaceDisabled: boolean;\n    innerClockFaceSize = 85;\n\n    @Input() faceTime: ClockFaceTime[];\n    @Input() selectedTime: ClockFaceTime;\n    @Input() unit: TimeUnit;\n    @Input() format: number;\n    @Input() minutesGap: number;\n\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\n    @Output() timeSelected = new EventEmitter<number>();\n\n    @ViewChild('clockFace', {static: true}) clockFace: ElementRef;\n    @ViewChild('clockHand', {static: true}) clockHand: ElementRef;\n\n    private isStarted: boolean;\n    private touchStartHandler: () => any;\n    private touchEndHandler: () => any;\n\n    ngAfterViewInit() {\n        this.setClockHandPosition();\n        this.addTouchEvents();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const faceTimeChanges = changes['faceTime'];\n        const selectedTimeChanges = changes['selectedTime'];\n\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\n            /* Set time according to passed an input value */\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\n        }\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\n            this.setClockHandPosition();\n        }\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\n            setTimeout(() => this.selectAvailableTime());\n        }\n    }\n\n\n    trackByTime(_, time: ClockFaceTime): string | number {\n        return time.time;\n    }\n\n    @HostListener('mousedown', ['$event'])\n    onMousedown(e: any) {\n        e.preventDefault();\n        this.isStarted = true;\n    }\n\n    @HostListener('click', ['$event'])\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\n    @HostListener('touchend', ['$event.changedTouches[0]'])\n    @HostListener('mousemove', ['$event'])\n    selectTime(e: any): void {\n\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\n            return;\n        }\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\n\n        /* Get x0 and y0 of the circle */\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\n        /* Counting the arctangent and convert it to from radian to deg */\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\n        /* Get angle according to quadrant */\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\n        /* Check if selected time from the inner clock face (24 hours format only) */\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\n        /* Round angle according to angle step */\n        const angleStep = this.unit === TimeUnit.MINUTE ? (6 * (this.minutesGap || 1)) : 30;\n        const roundedAngle = roundAngle(circleAngle, angleStep);\n        const angle = (roundedAngle || 360) + (isInnerClockChosen ? 360 : 0);\n\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\n\n        if (selectedTime && !selectedTime.disabled) {\n            this.timeChange.next(selectedTime);\n\n            /* To let know whether user ended interaction with clock face */\n            if (!this.isStarted) {\n                this.timeSelected.next(selectedTime.time);\n            }\n        }\n\n    }\n\n    @HostListener('mouseup', ['$event'])\n    onMouseup(e: any) {\n        e.preventDefault();\n        this.isStarted = false;\n    }\n\n    ngOnDestroy() {\n        this.removeTouchEvents();\n    }\n\n    private addTouchEvents(): void {\n        this.touchStartHandler = this.onMousedown.bind(this);\n        this.touchEndHandler = this.onMouseup.bind(this);\n\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\n    }\n\n    private removeTouchEvents(): void {\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\n    }\n\n    private setClockHandPosition(): void {\n        if (this.format === 24) {\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\n                this.decreaseClockHand();\n            } else {\n                this.increaseClockHand();\n            }\n        }\n\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\n    }\n\n    private selectAvailableTime(): void {\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\n\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\n            const availableTime = this.faceTime.find(time => !time.disabled);\n\n            this.timeChange.next(availableTime);\n        }\n    }\n\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\n        /* Detect whether time from the inner clock face or not (24 format only) */\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\n    }\n\n    private decreaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\n    }\n\n    private increaseClockHand(): void {\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\n    }\n}\n\nfunction roundAngle(angle: number, step: number): number {\n    return Math.round(angle / step) * step;\n}\n\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\n    if (y > y0 && x >= x0) {// II quarter\n        return 180 - currentAngle;\n    } else if (y > y0 && x < x0) {// III quarter\n        return 180 + currentAngle;\n    } else if (y < y0 && x < x0) {// IV quarter\n        return 360 - currentAngle;\n    } else {// I quarter\n        return currentAngle;\n    }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'ngx-material-timepicker-button',\n    templateUrl: './ngx-material-timepicker-button.component.html',\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\n})\nexport class NgxMaterialTimepickerButtonComponent {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    TemplateRef\n} from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { DateTime, Info } from 'luxon';\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial',\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\n\n    timeUnit = TimeUnit;\n\n    hours: ClockFaceTime[];\n    minutes: ClockFaceTime[];\n    meridiems = Info.meridiems({locale: this.locale});\n\n    isHintVisible: boolean;\n\n    @Input() editableHintTmpl: TemplateRef<Node>;\n    @Input() hour: number | string;\n    @Input() minute: number | string;\n    @Input() format: number;\n    @Input() period: TimePeriod;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n    @Input() hoursOnly: boolean;\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\n\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['period'] && changes['period'].currentValue\n            || changes['format'] && changes['format'].currentValue) {\n            const hours = TimepickerTimeUtils.getHours(this.format);\n\n            this.hours = TimepickerTimeUtils.disableHours(hours, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n        if (changes['period'] && changes['period'].currentValue\n            || changes['hour'] && changes['hour'].currentValue) {\n            const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);\n\n            this.minutes = TimepickerTimeUtils.disableMinutes(minutes, +this.hour, {\n                min: this.minTime,\n                max: this.maxTime,\n                format: this.format,\n                period: this.period\n            });\n        }\n    }\n\n    changeTimeUnit(unit: TimeUnit): void {\n        this.timeUnitChanged.next(unit);\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.periodChanged.next(period);\n    }\n\n    changeHour(hour: ClockFaceTime): void {\n        this.hourChanged.next(hour);\n    }\n\n    changeMinute(minute: ClockFaceTime): void {\n        this.minuteChanged.next(minute);\n    }\n\n    showHint(): void {\n        this.isHintVisible = true;\n    }\n\n    hideHint(): void {\n        this.isHintVisible = false;\n    }\n}\n","import { Inject, Injectable, Pipe, PipeTransform } from '@angular/core';\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\n\ntype TimeMeasure = 'hour' | 'minute';\n\n@Pipe({\n    name: 'timeParser'\n})\n@Injectable()\nexport class TimeParserPipe implements PipeTransform {\n\n    private readonly numberingSystem: string;\n\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\n        this.numberingSystem = DateTime.local().setLocale(this.locale).resolvedLocaleOpts().numberingSystem;\n    }\n\n    transform(time: string | number, timeUnit = TimeUnit.HOUR): number | string {\n        if (time == null || time === '') {\n            return '';\n        }\n\n        if (!isNaN(+time)) {\n            return time;\n        }\n\n        if (timeUnit === TimeUnit.MINUTE) {\n            return this.parseTime(time, 'm', 'minute');\n        }\n\n        return this.parseTime(time, 'H', 'hour');\n\n    }\n\n    private parseTime(time: string | number, format: string, timeMeasure: TimeMeasure): number {\n        const parsedTime = DateTime.fromFormat(String(time), format, {numberingSystem: this.numberingSystem})[timeMeasure];\n\n        if (!isNaN(parsedTime)) {\n            return parsedTime;\n        }\n\n        throw new Error(`Cannot parse time - ${time}`);\n    }\n\n}\n","/* tslint:disable:triple-equals */\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {ClockFaceTime} from '../../models/clock-face-time.interface';\nimport {TimeUnit} from '../../models/time-unit.enum';\nimport {isDigit} from '../../utils/timepicker.utils';\nimport {TimeParserPipe} from '../../pipes/time-parser.pipe';\n\n@Component({\n    selector: 'ngx-material-timepicker-dial-control',\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss'],\n    providers: [TimeParserPipe]\n})\nexport class NgxMaterialTimepickerDialControlComponent {\n\n    previousTime: number | string;\n\n    @Input() timeList: ClockFaceTime[];\n    @Input() timeUnit: TimeUnit;\n    @Input() time: string;\n    @Input() isActive: boolean;\n    @Input() isEditable: boolean;\n    @Input() minutesGap: number;\n    @Input() disabled: boolean;\n\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\n    @Output() focused = new EventEmitter<null>();\n    @Output() unfocused = new EventEmitter<null>();\n\n    constructor(private timeParserPipe: TimeParserPipe) {\n    }\n\n    private get selectedTime(): ClockFaceTime {\n        if (!!this.time) {\n            return this.timeList.find(t => t.time === +this.time);\n        }\n    }\n\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\n        event.preventDefault();\n        this.previousTime = this.time;\n        this.timeUnitChanged.next(unit);\n        this.focused.next();\n    }\n\n    updateTime(): void {\n        const time = this.selectedTime;\n        if (time) {\n            this.timeChanged.next(time);\n            this.previousTime = time.time;\n        }\n    }\n\n    changeTimeByKeyboard(e: any): void {\n        const char = String.fromCharCode(e.keyCode);\n\n        if (isTimeDisabledToChange(this.time, char, this.timeList)) {\n            e.preventDefault();\n        }\n    }\n\n    onKeydown(e: any): void {\n        if (!isDigit(e)) {\n            e.preventDefault();\n        } else {\n            this.changeTimeByArrow(e.keyCode);\n        }\n    }\n\n    onModelChange(value: string): void {\n        this.time = this.timeParserPipe.transform(value, this.timeUnit).toString();\n    }\n\n    private changeTimeByArrow(keyCode: number): void {\n        const ARROW_UP = 38;\n        const ARROW_DOWN = 40;\n        let time: string;\n\n        if (keyCode === ARROW_UP) {\n            time = String(+this.time + (this.minutesGap || 1));\n        } else if (keyCode === ARROW_DOWN) {\n            time = String(+this.time - (this.minutesGap || 1));\n        }\n\n        if (!isTimeUnavailable(time, this.timeList)) {\n            this.time = time;\n            this.updateTime();\n        }\n    }\n\n}\n\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\n    const isNumber = /\\d/.test(nextTime);\n\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return isTimeUnavailable(time, timeList);\n    }\n}\n\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\n    const selectedTime = timeList.find(value => value.time === +time);\n    return !selectedTime || (selectedTime && selectedTime.disabled);\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { animate, sequence, style, transition, trigger } from '@angular/animations';\nimport { DateTime } from 'luxon';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\n\n@Component({\n    selector: 'ngx-material-timepicker-period',\n    templateUrl: 'ngx-material-timepicker-period.component.html',\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)'}),\n                animate('.2s', style({transform: 'scale(1)'})),\n                sequence([\n                    animate('3s', style({opacity: 1})),\n                    animate('.3s', style({opacity: 0}))\n                ])\n            ])\n        ])\n    ]\n})\nexport class NgxMaterialTimepickerPeriodComponent {\n\n    timePeriod = TimePeriod;\n    isPeriodAvailable = true;\n\n    @Input() selectedPeriod: TimePeriod;\n    @Input() format: number;\n    @Input() activeTimeUnit: TimeUnit;\n    @Input() hours: ClockFaceTime[];\n    @Input() minutes: ClockFaceTime[];\n    @Input() minTime: DateTime;\n    @Input() maxTime: DateTime;\n    @Input() selectedHour: number | string;\n    @Input() meridiems: string[];\n\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\n\n    changePeriod(period: TimePeriod): void {\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\n        if (this.isPeriodAvailable) {\n            this.periodChanged.next(period);\n        }\n    }\n\n    animationDone(): void {\n        this.isPeriodAvailable = true;\n    }\n\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\n        const time = this.getDisabledTimeByPeriod(period);\n        return !time.every(t => t.disabled);\n    }\n\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\n        switch (this.activeTimeUnit) {\n            case TimeUnit.HOUR:\n                return TimepickerTimeUtils.disableHours(this.hours, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            case TimeUnit.MINUTE:\n                return TimepickerTimeUtils.disableMinutes(this.minutes, +this.selectedHour, {\n                    min: this.minTime,\n                    max: this.maxTime,\n                    format: this.format,\n                    period\n                });\n            default:\n                throw new Error('no such TimeUnit');\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\n\n@Pipe({\n    name: 'timeFormatter'\n})\nexport class TimeFormatterPipe implements PipeTransform {\n\n    transform(time: number | string, timeUnit: TimeUnit): any {\n        if (time == null || time === '') {\n            return time;\n        }\n        switch (timeUnit) {\n            case TimeUnit.HOUR:\n                return DateTime.fromObject({hour: +time}).toFormat('HH');\n            case TimeUnit.MINUTE:\n                return DateTime.fromObject({minute: +time}).toFormat('mm');\n            default:\n                throw new Error('no such time unit');\n        }\n    }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport {NgxMaterialTimepickerEventService} from '../services/ngx-material-timepicker-event.service';\n\n@Directive({\n    selector: '[overlay]'\n})\nexport class OverlayDirective {\n\n    @Input('overlay') preventClick: boolean;\n\n    constructor(private eventService: NgxMaterialTimepickerEventService) {\n    }\n\n\n    @HostListener('click', ['$event'])\n    onClick(e: any) {\n        if (!this.preventClick) {\n            this.eventService.dispatchEvent(e);\n        }\n        e.preventDefault();\n    }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'minutesFormatter'\n})\nexport class MinutesFormatterPipe implements PipeTransform {\n\n    transform(minute: number, gap = 5): number | string {\n        if (!minute) {\n            return minute;\n        }\n\n        return minute % gap === 0 ? minute : '';\n    }\n\n}\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n@Directive({\n    selector: '[timepickerAutofocus]'\n})\nexport class AutofocusDirective implements OnChanges, OnDestroy {\n\n    @Input('timepickerAutofocus') isFocusActive: boolean;\n\n    private activeElement: HTMLElement;\n\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\n        this.activeElement = this.document.activeElement;\n    }\n\n    ngOnChanges() {\n        if (this.isFocusActive) {\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n            setTimeout(() => this.element.nativeElement.focus({ preventScroll: true }));\n        }\n    }\n\n    ngOnDestroy() {\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\n        setTimeout(() => this.activeElement.focus({ preventScroll: true }));\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\nimport { Observable, Subject } from 'rxjs';\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\nimport { TimePeriod } from '../../models/time-period.enum';\nimport { TimeUnit } from '../../models/time-unit.enum';\nimport { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';\nimport { TimeAdapter } from '../../services/time-adapter';\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\nimport { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';\nimport { DateTime } from 'luxon';\nimport { distinctUntilChanged, map, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'ngx-timepicker-field',\n    templateUrl: './ngx-timepicker-field.component.html',\n    styleUrls: ['./ngx-timepicker-field.component.scss'],\n    providers: [\n        NgxMaterialTimepickerService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: NgxTimepickerFieldComponent,\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxTimepickerFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n    period: TimePeriod;\n    hour$: Observable<ClockFaceTime>;\n    minute$: Observable<ClockFaceTime>;\n\n    minHour = 1;\n    maxHour = 12;\n\n    timeUnit = TimeUnit;\n    timepickerTime: string;\n\n    hoursList: ClockFaceTime[];\n    minutesList: ClockFaceTime[];\n\n    isTimeRangeSet: boolean;\n    isChangePeriodDisabled: boolean;\n\n    @Input() disabled: boolean;\n    @Input() toggleIcon: TemplateRef<HTMLObjectElement>;\n    @Input() buttonAlign: 'right' | 'left' = 'right';\n    @Input() clockTheme: NgxMaterialTimepickerTheme;\n    @Input() controlOnly: boolean;\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\n\n    @Input()\n    set format(value: number) {\n        this._format = value === 24 ? 24 : 12;\n        this.minHour = this._format === 12 ? 1 : 0;\n        this.maxHour = this._format === 12 ? 12 : 23;\n        this.hoursList = TimepickerTimeUtils.getHours(this._format);\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\n\n        if (isDynamicallyChanged) {\n            this.updateTime(this.timepickerTime);\n        }\n        this.previousFormat = this._format;\n    }\n\n    get format(): number {\n        return this._format;\n    }\n\n    @Input()\n    set min(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._min = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\n            return;\n        }\n        this._min = value;\n    }\n\n    get min(): string | DateTime {\n        return this._min;\n    }\n\n    @Input()\n    set max(value: string | DateTime) {\n        if (typeof value === 'string') {\n            this._max = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\n            return;\n        }\n        this._max = value;\n    }\n\n    get max(): string | DateTime {\n        return this._max;\n    }\n\n    @Input()\n    set defaultTime(val: string) {\n        this._defaultTime = val;\n        this.isDefaultTime = !!val;\n    }\n\n    get defaultTime(): string {\n        return this._defaultTime;\n    }\n\n    @Output() timeChanged = new EventEmitter<string>();\n\n    private _defaultTime: string;\n    private _format = 12;\n    private _min: string | DateTime;\n    private _max: string | DateTime;\n    private previousFormat: number;\n\n    private unsubscribe$ = new Subject();\n\n    private isFirstTimeChange = true;\n    private isDefaultTime: boolean;\n    private selectedHour: number;\n\n    private onChange: (value: string) => void = () => {\n    }\n\n    constructor(private timepickerService: NgxMaterialTimepickerService,\n                @Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    ngOnInit() {\n        this.initTime(this.defaultTime);\n\n        this.hoursList = TimepickerTimeUtils.getHours(this._format);\n        this.minutesList = TimepickerTimeUtils.getMinutes();\n        this.isTimeRangeSet = !!(this.min || this.max);\n\n        this.hour$ = this.timepickerService.selectedHour.pipe(\n            tap((clockTime: ClockFaceTime) => this.selectedHour = clockTime.time),\n            map(this.changeDefaultTimeValue.bind(this)),\n            tap(() => this.isTimeRangeSet && this.updateAvailableMinutes())\n        ) as Observable<ClockFaceTime>;\n        this.minute$ = this.timepickerService.selectedMinute.pipe(\n            map(this.changeDefaultTimeValue.bind(this)),\n            tap(() => this.isFirstTimeChange = false)\n        ) as Observable<ClockFaceTime>;\n\n        if (this.format === 12) {\n            this.timepickerService.selectedPeriod.pipe(\n                distinctUntilChanged<TimePeriod>(),\n                tap((period: TimePeriod) => this.period = period),\n                tap(period => this.isChangePeriodDisabled = this.isPeriodDisabled(period)),\n                takeUntil(this.unsubscribe$)\n            ).subscribe(() => this.isTimeRangeSet && this.updateAvailableTime());\n        }\n\n    }\n\n    writeValue(val: string): void {\n        if (val) {\n            this.initTime(val);\n        } else {\n            this.resetTime();\n        }\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    changeHour(hour: number): void {\n        this.timepickerService.hour = this.hoursList.find(h => h.time === hour);\n        this.changeTime();\n    }\n\n    changeMinute(minute: number): void {\n        this.timepickerService.minute = this.minutesList.find(m => m.time === minute);\n        this.changeTime();\n    }\n\n    changePeriod(period: TimePeriod): void {\n        this.timepickerService.period = period;\n        this.changeTime();\n    }\n\n    onTimeSet(time: string): void {\n        this.updateTime(time);\n        this.emitLocalTimeChange(time);\n    }\n\n    ngOnDestroy(): void {\n        this.unsubscribe$.next();\n        this.unsubscribe$.complete();\n    }\n\n    private changeTime(): void {\n        const time = this.timepickerService.getFullTime(this.format);\n        this.timepickerTime = time;\n\n        this.emitLocalTimeChange(time);\n    }\n\n    private resetTime(): void {\n        this.timepickerService.hour = {angle: 0, time: null};\n        this.timepickerService.minute = {angle: 0, time: null};\n    }\n\n    private emitLocalTimeChange(time: string): void {\n        const localTime = TimeAdapter.toLocaleTimeString(time, {format: this.format, locale: this.locale});\n\n        this.onChange(localTime);\n        this.timeChanged.emit(localTime);\n    }\n\n    private changeDefaultTimeValue(clockFaceTime: ClockFaceTime): ClockFaceTime {\n        if (!this.isDefaultTime && this.isFirstTimeChange) {\n            return {...clockFaceTime, time: null};\n        }\n        return clockFaceTime;\n    }\n\n    private updateAvailableHours(): void {\n        this.hoursList = TimepickerTimeUtils.disableHours(this.hoursList, {\n            min: this.min as DateTime,\n            max: this.max as DateTime,\n            format: this.format,\n            period: this.period\n        });\n    }\n\n    private updateAvailableMinutes(): void {\n        this.minutesList = TimepickerTimeUtils.disableMinutes(this.minutesList, this.selectedHour, {\n            min: this.min as DateTime,\n            max: this.max as DateTime,\n            format: this.format,\n            period: this.period\n        });\n    }\n\n    private updateAvailableTime(): void {\n        this.updateAvailableHours();\n        if (this.selectedHour) {\n            this.updateAvailableMinutes();\n        }\n    }\n\n    private updateTime(time: string): void {\n        if (time) {\n            const formattedTime = TimeAdapter.formatTime(time, {locale: this.locale, format: this.format});\n            this.timepickerService.setDefaultTimeIfAvailable(formattedTime, this.min as DateTime, this.max as DateTime, this.format);\n            this.timepickerTime = formattedTime;\n        }\n    }\n\n    private initTime(time): void {\n        const isDefaultTimeAvailable = TimeAdapter\n            .isTimeAvailable(time, this.min as DateTime, this.max as DateTime, 'minutes', null, this.format);\n        if (!isDefaultTimeAvailable) {\n            if (this.min) {\n                this.updateTime(TimeAdapter.fromDateTimeToString(this.min as DateTime, this.format));\n                return;\n            }\n            if (this.max) {\n                this.updateTime(TimeAdapter.fromDateTimeToString(this.max as DateTime, this.format));\n                return;\n            }\n        }\n        this.updateTime(time);\n    }\n\n    private isPeriodDisabled(period): boolean {\n        return TimepickerTimeUtils.disableHours(TimepickerTimeUtils.getHours(12), {\n            min: this.min as DateTime,\n            max: this.max as DateTime,\n            format: 12,\n            period: period === TimePeriod.AM ? TimePeriod.PM : TimePeriod.AM\n        }).every(time => time.disabled);\n    }\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { isDigit } from '../../../utils/timepicker.utils';\nimport { TimeUnit } from '../../../models/time-unit.enum';\nimport { TimeParserPipe } from '../../../pipes/time-parser.pipe';\nimport { ClockFaceTime } from '../../../models/clock-face-time.interface';\n\n@Component({\n    selector: 'ngx-timepicker-time-control',\n    templateUrl: './ngx-timepicker-time-control.component.html',\n    styleUrls: ['./ngx-timepicker-time-control.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TimeParserPipe]\n})\n\nexport class NgxTimepickerTimeControlComponent implements OnChanges {\n\n    @Input() time: number;\n    @Input() min: number;\n    @Input() max: number;\n    @Input() placeholder: string;\n    @Input() timeUnit: TimeUnit;\n    @Input() disabled: boolean;\n    @Input() timeList: ClockFaceTime[];\n    @Input() preventTyping: boolean;\n\n    @Output() timeChanged = new EventEmitter<number>();\n\n    isFocused: boolean;\n\n    private previousTime: number;\n\n    constructor(private timeParser: TimeParserPipe) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.timeList && this.time != null) {\n            if (this.isSelectedTimeDisabled(this.time)) {\n                this.setAvailableTime();\n            }\n        }\n    }\n\n    changeTime(event: any): void {\n        event.stopPropagation();\n\n        const char = String.fromCharCode(event.keyCode);\n        const time = concatTime(String(this.time), char);\n\n        this.changeTimeIfValid(time);\n    }\n\n    onKeydown(event: any): void {\n        event.stopPropagation();\n\n        if (!isDigit(event)) {\n            event.preventDefault();\n        }\n\n        switch (event.key) {\n            case 'ArrowUp':\n                this.increase();\n                break;\n            case 'ArrowDown':\n                this.decrease();\n                break;\n        }\n\n        if (this.preventTyping && event.key !== 'Tab') {\n            event.preventDefault();\n        }\n    }\n\n    increase(): void {\n        if (!this.disabled) {\n            let nextTime = +this.time + 1;\n\n            if (nextTime > this.max) {\n                nextTime = this.min;\n            }\n\n            if (this.isSelectedTimeDisabled(nextTime)) {\n                nextTime = this.getAvailableTime(nextTime, this.getNextAvailableTime.bind(this));\n            }\n\n            if (nextTime !== this.time) {\n                this.timeChanged.emit(nextTime);\n            }\n        }\n    }\n\n    decrease(): void {\n        if (!this.disabled) {\n            let previousTime = +this.time - 1;\n\n            if (previousTime < this.min) {\n                previousTime = this.max;\n            }\n\n            if (this.isSelectedTimeDisabled(previousTime)) {\n                previousTime = this.getAvailableTime(previousTime, this.getPrevAvailableTime.bind(this));\n            }\n\n            if (previousTime !== this.time) {\n                this.timeChanged.emit(previousTime);\n            }\n        }\n    }\n\n    onFocus(): void {\n        this.isFocused = true;\n        this.previousTime = this.time;\n    }\n\n    onBlur(): void {\n        this.isFocused = false;\n\n        if (this.previousTime !== this.time) {\n            this.changeTimeIfValid(+this.time);\n        }\n    }\n\n    onModelChange(value: string): void {\n        this.time = +this.timeParser.transform(value, this.timeUnit);\n    }\n\n    private changeTimeIfValid(value: number | undefined) {\n        if (!isNaN(value)) {\n            this.time = value;\n\n            if (this.time > this.max) {\n                const timeString = String(value);\n                this.time = +timeString[timeString.length - 1];\n            }\n\n            if (this.time < this.min) {\n                this.time = this.min;\n            }\n\n            this.timeChanged.emit(this.time);\n        }\n    }\n\n    private isSelectedTimeDisabled(time: number): boolean {\n        return this.timeList.find((faceTime: ClockFaceTime) => faceTime.time === time).disabled;\n    }\n\n    private getNextAvailableTime(index: number): number | undefined {\n        const timeCollection = this.timeList;\n        const maxValue = timeCollection.length;\n        for (let i = index + 1; i < maxValue; i++) {\n            const time = timeCollection[i];\n            if (!time.disabled) {\n                return time.time;\n            }\n        }\n    }\n\n    private getPrevAvailableTime(index: number): number | undefined {\n        for (let i = index; i >= 0; i--) {\n            const time = this.timeList[i];\n            if (!time.disabled) {\n                return time.time;\n            }\n        }\n    }\n\n    private getAvailableTime(currentTime: number, fn: (index: number) => number | undefined): number | undefined {\n        const currentTimeIndex = this.timeList.findIndex(time => time.time === currentTime);\n        const availableTime = fn(currentTimeIndex);\n\n        return availableTime != null ? availableTime : this.time;\n    }\n\n    private setAvailableTime(): void {\n        this.time = this.timeList.find(t => !t.disabled).time;\n        this.timeChanged.emit(this.time);\n    }\n}\n\nfunction concatTime(currentTime: string, nextTime: string): number {\n    const isNumber = /\\d/.test(nextTime);\n\n    if (isNumber) {\n        const time = currentTime + nextTime;\n        return +time;\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { TimePeriod } from '../../../models/time-period.enum';\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { TIME_LOCALE } from '../../../tokens/time-locale.token';\nimport { Info } from 'luxon';\n\n@Component({\n    selector: 'ngx-timepicker-period-selector',\n    templateUrl: 'ngx-timepicker-period-selector.component.html',\n    styleUrls: ['./ngx-timepicker-period-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger('scaleInOut', [\n            transition(':enter', [\n                style({transform: 'scale(0)', opacity: 0}),\n                animate(200, style({transform: 'scale(1)', opacity: 1}))\n            ]),\n            transition(':leave', [\n                animate(200, style({transform: 'scale(0)', opacity: 0}))\n            ])\n        ])\n    ]\n})\n\nexport class NgxTimepickerPeriodSelectorComponent {\n\n    @Input() isOpened: boolean;\n    @Input() disabled: boolean;\n    @Input()\n    set selectedPeriod(period: TimePeriod) {\n        if (period) {\n            const periods = [TimePeriod.AM, TimePeriod.PM];\n            this.localizedPeriod = this.meridiems[periods.indexOf(period)];\n        }\n    }\n\n    @Output() periodSelected = new EventEmitter<TimePeriod>();\n\n    period = TimePeriod;\n    meridiems = Info.meridiems({locale: this.locale});\n    localizedPeriod: string;\n\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    open(): void {\n        if (!this.disabled) {\n            this.isOpened = true;\n        }\n    }\n\n    select(period: TimePeriod): void {\n        this.periodSelected.next(period);\n        this.isOpened = false;\n    }\n\n    backdropClick(): void {\n        this.isOpened = false;\n    }\n}\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\nimport { TimeUnit } from '../models/time-unit.enum';\nimport { DateTime } from 'luxon';\n\ntype TimeMeasure = 'hour' | 'minute';\n\n@Pipe({\n    name: 'timeLocalizer'\n})\nexport class TimeLocalizerPipe implements PipeTransform {\n\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\n    }\n\n    transform(time: number | string, timeUnit: TimeUnit, isKeyboardEnabled = false): string {\n        if (time == null || time === '') {\n            return '';\n        }\n\n        switch (timeUnit) {\n            case TimeUnit.HOUR: {\n                const format = (time === 0 || isKeyboardEnabled) ? 'HH' : 'H';\n                return this.formatTime('hour', time, format);\n            }\n            case TimeUnit.MINUTE:\n                return this.formatTime('minute', time, 'mm');\n            default:\n                throw new Error(`There is no Time Unit with type ${timeUnit}`);\n        }\n    }\n\n    private formatTime(timeMeasure: TimeMeasure, time: string | number, format: string): string {\n        try {\n            return DateTime.fromObject({[timeMeasure]: +time}).setLocale(this.locale).toFormat(format);\n        } catch {\n            throw new Error(`Cannot format provided time - ${time} to locale - ${this.locale}`);\n        }\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'activeHour'\n})\nexport class ActiveHourPipe implements PipeTransform {\n\n    transform(hour: number, currentHour: number, isClockFaceDisabled: boolean): boolean {\n        if (hour == null || isClockFaceDisabled) {\n            return false;\n        }\n\n        return hour === currentHour;\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'activeMinute'\n})\nexport class ActiveMinutePipe implements PipeTransform {\n\n    transform(minute: number, currentMinute: number, gap: number, isClockFaceDisabled: boolean): boolean {\n        if (minute == null || isClockFaceDisabled) {\n            return false;\n        }\n        const defaultGap = 5;\n\n        return ((currentMinute === minute) && (minute % (gap || defaultGap) === 0));\n    }\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'ngx-material-timepicker-content',\n    templateUrl: './ngx-material-timepicker-content.component.html',\n})\nexport class NgxMaterialTimepickerContentComponent {\n    @Input() appendToInput: boolean;\n    @Input() inputElement: any;\n}\n","import { AfterViewInit, Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\n\ntype TimepickerDirection = 'top' | 'center' | 'bottom';\n\n@Directive({\n    selector: '[ngxAppendToInput]'\n})\nexport class AppendToInputDirective implements AfterViewInit {\n\n    @Input('ngxAppendToInput') inputElement: any;\n\n    private _direction: TimepickerDirection;\n    private _inputCords: ClientRect;\n    private readonly element: HTMLElement;\n\n    constructor(elementRef: ElementRef<HTMLElement>,\n                private renderer: Renderer2) {\n        this.element = elementRef.nativeElement;\n    }\n\n    private get inputCords(): ClientRect {\n        return this.inputElement.getBoundingClientRect();\n    }\n\n    private get direction(): TimepickerDirection {\n        const height = this.element.offsetHeight;\n        const {bottom, top} = this._inputCords;\n        const isElementFit = (window && window.innerHeight) - bottom < height;\n        const isTop = isElementFit && top > height;\n        const isCenter = isElementFit && top < height;\n\n        if (isTop) {\n            return 'top';\n        } else if (isCenter) {\n            return 'center';\n        }\n        return 'bottom';\n    }\n\n    ngAfterViewInit(): void {\n        this._inputCords = this.inputCords;\n        this._direction = this.direction;\n\n        this.append();\n    }\n\n    @HostListener('window:scroll')\n    changePosition(): void {\n        const {bottom, top} = this.inputCords;\n        const y = this.defineElementYByDirection(top, bottom);\n        this.setStyle('top', `${y}px`);\n    }\n\n    private append(): void {\n        const {left, bottom, top} = this._inputCords;\n        const y = this.defineElementYByDirection(top, bottom);\n\n        this.setStyle('position', 'fixed');\n        this.setStyle('left', `${left}px`);\n        this.setStyle('top', `${y}px`);\n    }\n\n    private setStyle(style: string, value: string): void {\n        this.renderer.setStyle(this.element, style, value);\n    }\n\n    private defineElementYByDirection(inputTop: number, inputBottom: number): number {\n        if (this._direction === 'top') {\n            return inputTop - this.element.offsetHeight;\n        } else if (this._direction === 'center') {\n            return inputTop - (this.element.offsetHeight / 2);\n        }\n        return inputBottom;\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxMaterialTimepickerComponent } from './ngx-material-timepicker.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxMaterialTimepickerToggleComponent } from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\nimport { NgxMaterialTimepickerToggleIconDirective } from './directives/ngx-material-timepicker-toggle-icon.directive';\nimport { NgxMaterialTimepickerThemeDirective } from './directives/ngx-material-timepicker-theme.directive';\nimport {\n    NgxMaterialTimepicker24HoursFaceComponent\n} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\nimport {\n    NgxMaterialTimepicker12HoursFaceComponent\n} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\nimport {\n    NgxMaterialTimepickerMinutesFaceComponent } from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\nimport { NgxMaterialTimepickerFaceComponent } from './components/timepicker-face/ngx-material-timepicker-face.component';\nimport { NgxMaterialTimepickerButtonComponent } from './components/timepicker-button/ngx-material-timepicker-button.component';\nimport { NgxMaterialTimepickerDialComponent } from './components/timepicker-dial/ngx-material-timepicker-dial.component';\nimport {\n    NgxMaterialTimepickerDialControlComponent } from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\nimport { NgxMaterialTimepickerPeriodComponent } from './components/timepicker-period/ngx-material-timepicker-period.component';\nimport { TimeFormatterPipe } from './pipes/time-formatter.pipe';\nimport { OverlayDirective } from './directives/overlay.directive';\nimport { MinutesFormatterPipe } from './pipes/minutes-formatter.pipe';\nimport { AutofocusDirective } from './directives/autofocus.directive';\nimport { NgxTimepickerFieldComponent } from './components/timepicker-field/ngx-timepicker-field.component';\nimport {\n    NgxTimepickerTimeControlComponent\n} from './components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component';\nimport {\n    NgxTimepickerPeriodSelectorComponent\n} from './components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component';\nimport { TimeLocalizerPipe } from './pipes/time-localizer.pipe';\nimport { TIME_LOCALE } from './tokens/time-locale.token';\nimport { TimeParserPipe } from './pipes/time-parser.pipe';\nimport { ActiveHourPipe } from './pipes/active-hour.pipe';\nimport { ActiveMinutePipe } from './pipes/active-minute.pipe';\nimport {\n    NgxMaterialTimepickerContainerComponent\n} from './components/ngx-material-timepicker-container/ngx-material-timepicker-container.component';\nimport {\n    NgxMaterialTimepickerContentComponent\n} from './components/ngx-material-timepicker-content/ngx-material-timepicker-content.component';\nimport { AppendToInputDirective } from './directives/append-to-input.directive';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    exports: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxTimepickerFieldComponent,\n        TimepickerDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        NgxMaterialTimepickerThemeDirective,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent\n    ],\n    declarations: [\n        NgxMaterialTimepickerComponent,\n        NgxMaterialTimepicker24HoursFaceComponent,\n        NgxMaterialTimepicker12HoursFaceComponent,\n        NgxMaterialTimepickerMinutesFaceComponent,\n        NgxMaterialTimepickerFaceComponent,\n        NgxMaterialTimepickerToggleComponent,\n        NgxMaterialTimepickerButtonComponent,\n        NgxMaterialTimepickerDialComponent,\n        NgxMaterialTimepickerDialControlComponent,\n        NgxMaterialTimepickerPeriodComponent,\n        TimeFormatterPipe,\n        TimepickerDirective,\n        OverlayDirective,\n        NgxMaterialTimepickerToggleIconDirective,\n        AutofocusDirective,\n        MinutesFormatterPipe,\n        NgxMaterialTimepickerThemeDirective,\n        NgxTimepickerFieldComponent,\n        NgxTimepickerTimeControlComponent,\n        NgxTimepickerPeriodSelectorComponent,\n        TimeLocalizerPipe,\n        TimeParserPipe,\n        ActiveHourPipe,\n        ActiveMinutePipe,\n        NgxMaterialTimepickerContainerComponent,\n        NgxMaterialTimepickerContentComponent,\n        AppendToInputDirective\n    ],\n    entryComponents: [NgxMaterialTimepickerContainerComponent]\n})\nexport class NgxMaterialTimepickerModule {\n\n    static setLocale(locale: string): ModuleWithProviders<NgxMaterialTimepickerModule> {\n        return {\n            ngModule: NgxMaterialTimepickerModule,\n            providers: [\n                {provide: TIME_LOCALE, useValue: locale}\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AnimationState as ɵs,NgxMaterialTimepickerContainerComponent as ɵt} from './src/app/material-timepicker/components/ngx-material-timepicker-container/ngx-material-timepicker-container.component';\nexport {NgxMaterialTimepickerContentComponent as ɵu} from './src/app/material-timepicker/components/ngx-material-timepicker-content/ngx-material-timepicker-content.component';\nexport {NgxMaterialTimepickerButtonComponent as ɵh} from './src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component';\nexport {NgxTimepickerPeriodSelectorComponent as ɵo} from './src/app/material-timepicker/components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component';\nexport {NgxTimepickerTimeControlComponent as ɵn} from './src/app/material-timepicker/components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component';\nexport {NgxMaterialTimepickerHoursFace as ɵf} from './src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face';\nexport {NgxMaterialTimepickerPeriodComponent as ɵi} from './src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component';\nexport {NgxMaterialTimepickerToggleComponent as ɵc} from './src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\nexport {AppendToInputDirective as ɵv} from './src/app/material-timepicker/directives/append-to-input.directive';\nexport {AutofocusDirective as ɵl} from './src/app/material-timepicker/directives/autofocus.directive';\nexport {OverlayDirective as ɵk} from './src/app/material-timepicker/directives/overlay.directive';\nexport {ActiveHourPipe as ɵq} from './src/app/material-timepicker/pipes/active-hour.pipe';\nexport {ActiveMinutePipe as ɵr} from './src/app/material-timepicker/pipes/active-minute.pipe';\nexport {MinutesFormatterPipe as ɵm} from './src/app/material-timepicker/pipes/minutes-formatter.pipe';\nexport {TimeFormatterPipe as ɵj} from './src/app/material-timepicker/pipes/time-formatter.pipe';\nexport {TimeLocalizerPipe as ɵp} from './src/app/material-timepicker/pipes/time-localizer.pipe';\nexport {TimeParserPipe as ɵg} from './src/app/material-timepicker/pipes/time-parser.pipe';\nexport {DomService as ɵb} from './src/app/material-timepicker/services/dom.service';\nexport {NgxMaterialTimepickerEventService as ɵa} from './src/app/material-timepicker/services/ngx-material-timepicker-event.service';\nexport {NgxMaterialTimepickerService as ɵd} from './src/app/material-timepicker/services/ngx-material-timepicker.service';\nexport {TIME_LOCALE as ɵe} from './src/app/material-timepicker/tokens/time-locale.token';"]}