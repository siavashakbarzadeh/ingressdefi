import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { TimeUnit } from '../../models/time-unit.enum';
import { TimepickerTimeUtils } from '../../utils/timepicker-time.utils';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../timepicker-face/ngx-material-timepicker-face.component';
let NgxMaterialTimepickerMinutesFaceComponent = class NgxMaterialTimepickerMinutesFaceComponent {
    constructor() {
        this.minutesList = [];
        this.timeUnit = TimeUnit;
        this.minuteChange = new EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes['period'] && changes['period'].currentValue) {
            const minutes = TimepickerTimeUtils.getMinutes(this.minutesGap);
            this.minutesList = TimepickerTimeUtils.disableMinutes(minutes, this.selectedHour, {
                min: this.minTime,
                max: this.maxTime,
                format: this.format,
                period: this.period
            });
        }
    }
};
NgxMaterialTimepickerMinutesFaceComponent.ɵfac = function NgxMaterialTimepickerMinutesFaceComponent_Factory(t) { return new (t || NgxMaterialTimepickerMinutesFaceComponent)(); };
NgxMaterialTimepickerMinutesFaceComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxMaterialTimepickerMinutesFaceComponent, selectors: [["ngx-material-timepicker-minutes-face"]], inputs: { selectedMinute: "selectedMinute", selectedHour: "selectedHour", period: "period", minTime: "minTime", maxTime: "maxTime", format: "format", minutesGap: "minutesGap" }, outputs: { minuteChange: "minuteChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 4, consts: [[3, "faceTime", "selectedTime", "minutesGap", "unit", "timeChange"]], template: function NgxMaterialTimepickerMinutesFaceComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ngx-material-timepicker-face", 0);
        ɵngcc0.ɵɵlistener("timeChange", function NgxMaterialTimepickerMinutesFaceComponent_Template_ngx_material_timepicker_face_timeChange_0_listener($event) { return ctx.minuteChange.next($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("faceTime", ctx.minutesList)("selectedTime", ctx.selectedMinute)("minutesGap", ctx.minutesGap)("unit", ctx.timeUnit.MINUTE);
    } }, directives: [ɵngcc1.NgxMaterialTimepickerFaceComponent], encapsulation: 2 });
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "selectedMinute", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "selectedHour", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "period", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "minTime", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "maxTime", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "format", void 0);
tslib_1.__decorate([
    Input()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "minutesGap", void 0);
tslib_1.__decorate([
    Output()
], NgxMaterialTimepickerMinutesFaceComponent.prototype, "minuteChange", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMaterialTimepickerMinutesFaceComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-material-timepicker-minutes-face',
                template: "<ngx-material-timepicker-face [faceTime]=\"minutesList\" [selectedTime]=\"selectedMinute\"\n                              [minutesGap]=\"minutesGap\"\n                              (timeChange)=\"minuteChange.next($event)\" [unit]=\"timeUnit.MINUTE\"></ngx-material-timepicker-face>\n"
            }]
    }], function () { return []; }, { minuteChange: [{
            type: Output
        }], selectedMinute: [{
            type: Input
        }], selectedHour: [{
            type: Input
        }], period: [{
            type: Input
        }], minTime: [{
            type: Input
        }], maxTime: [{
            type: Input
        }], format: [{
            type: Input
        }], minutesGap: [{
            type: Input
        }] }); })();
export { NgxMaterialTimepickerMinutesFaceComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1hdGVyaWFsLXRpbWVwaWNrZXItbWludXRlcy1mYWNlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmc6L25neC1tYXRlcmlhbC10aW1lcGlja2VyL3NyYy9hcHAvbWF0ZXJpYWwtdGltZXBpY2tlci9jb21wb25lbnRzL3RpbWVwaWNrZXItbWludXRlcy1mYWNlL25neC1tYXRlcmlhbC10aW1lcGlja2VyLW1pbnV0ZXMtZmFjZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBYSxNQUFNLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRWpHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUd2RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7O0FBT3hFLElBQWEseUNBQXlDLEdBQXRELE1BQWEseUNBQXlDO0FBQUcsSUFKekQ7QUFDRyxRQUtDLGdCQUFXLEdBQW9CLEVBQUUsQ0FBQztBQUN0QyxRQUFJLGFBQVEsR0FBRyxRQUFRLENBQUM7QUFDeEIsUUFTYyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFpQixDQUFDO0FBQy9ELElBWUEsQ0FBQztBQUNELElBWkksV0FBVyxDQUFDLE9BQXNCO0FBQ3RDLFFBQVEsSUFBSSxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksRUFBRTtBQUNqRSxZQUFZLE1BQU0sT0FBTyxHQUFHLG1CQUFtQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDNUUsWUFBWSxJQUFJLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRTtBQUM5RixnQkFBZ0IsR0FBRyxFQUFFLElBQUksQ0FBQyxPQUFPO0FBQ2pDLGdCQUFnQixHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU87QUFDakMsZ0JBQWdCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtBQUNuQyxnQkFBZ0IsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0FBQ25DLGFBQWEsQ0FBQyxDQUFDO0FBQ2YsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLENBQUM7Ozs7Ozs7O3NGQUFBO0FBckJZO0FBQXFCLElBQTdCLEtBQUssRUFBRTtBQUFDLGlGQUE4QjtBQUM5QjtBQUFxQixJQUE3QixLQUFLLEVBQUU7QUFBQywrRUFBcUI7QUFDckI7QUFDWixJQURJLEtBQUssRUFBRTtBQUFDLHlFQUFtQjtBQUNuQjtBQUNYLElBREcsS0FBSyxFQUFFO0FBQUMsMEVBQWtCO0FBQ2xCO0FBQ1gsSUFERyxLQUFLLEVBQUU7QUFBQywwRUFBa0I7QUFDbEI7QUFDUixJQURBLEtBQUssRUFBRTtBQUFDLHlFQUFlO0FBQ2Y7QUFFYixJQUZLLEtBQUssRUFBRTtBQUFDLDZFQUFtQjtBQUVsQjtBQUFxQixJQUE5QixNQUFNLEVBQUU7QUFBQywrRUFBaUQ7QUFibEQseUNBQXlDLDRCQUpyRCxTQUFTLENBQUMsVUFDUCxRQUFRLEVBQUU7O1lBQXNDO0tBQ2hEOzJPQUFvRSxNQUN2RSxDQUFDLElBQ1cseUNBQXlDLENBMEJyRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsU0EzQlkseUNBQXlDO0FBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT3V0cHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbG9ja0ZhY2VUaW1lIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2Nsb2NrLWZhY2UtdGltZS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGltZVVuaXQgfSBmcm9tICcuLi8uLi9tb2RlbHMvdGltZS11bml0LmVudW0nO1xuaW1wb3J0IHsgVGltZVBlcmlvZCB9IGZyb20gJy4uLy4uL21vZGVscy90aW1lLXBlcmlvZC5lbnVtJztcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nO1xuaW1wb3J0IHsgVGltZXBpY2tlclRpbWVVdGlscyB9IGZyb20gJy4uLy4uL3V0aWxzL3RpbWVwaWNrZXItdGltZS51dGlscyc7XG5cblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICduZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1taW51dGVzLWZhY2UnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9uZ3gtbWF0ZXJpYWwtdGltZXBpY2tlci1taW51dGVzLWZhY2UuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIE5neE1hdGVyaWFsVGltZXBpY2tlck1pbnV0ZXNGYWNlQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcblxuICAgIG1pbnV0ZXNMaXN0OiBDbG9ja0ZhY2VUaW1lW10gPSBbXTtcbiAgICB0aW1lVW5pdCA9IFRpbWVVbml0O1xuXG4gICAgQElucHV0KCkgc2VsZWN0ZWRNaW51dGU6IENsb2NrRmFjZVRpbWU7XG4gICAgQElucHV0KCkgc2VsZWN0ZWRIb3VyOiBudW1iZXI7XG4gICAgQElucHV0KCkgcGVyaW9kOiBUaW1lUGVyaW9kO1xuICAgIEBJbnB1dCgpIG1pblRpbWU6IERhdGVUaW1lO1xuICAgIEBJbnB1dCgpIG1heFRpbWU6IERhdGVUaW1lO1xuICAgIEBJbnB1dCgpIGZvcm1hdDogbnVtYmVyO1xuICAgIEBJbnB1dCgpIG1pbnV0ZXNHYXA6IG51bWJlcjtcblxuICAgIEBPdXRwdXQoKSBtaW51dGVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPENsb2NrRmFjZVRpbWU+KCk7XG5cbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgICAgIGlmIChjaGFuZ2VzWydwZXJpb2QnXSAmJiBjaGFuZ2VzWydwZXJpb2QnXS5jdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBUaW1lcGlja2VyVGltZVV0aWxzLmdldE1pbnV0ZXModGhpcy5taW51dGVzR2FwKTtcbiAgICAgICAgICAgIHRoaXMubWludXRlc0xpc3QgPSBUaW1lcGlja2VyVGltZVV0aWxzLmRpc2FibGVNaW51dGVzKG1pbnV0ZXMsIHRoaXMuc2VsZWN0ZWRIb3VyLCB7XG4gICAgICAgICAgICAgICAgbWluOiB0aGlzLm1pblRpbWUsXG4gICAgICAgICAgICAgICAgbWF4OiB0aGlzLm1heFRpbWUsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiB0aGlzLmZvcm1hdCxcbiAgICAgICAgICAgICAgICBwZXJpb2Q6IHRoaXMucGVyaW9kXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==