import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
import { TimeUnit } from '../models/time-unit.enum';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
let TimeFormatterPipe = class TimeFormatterPipe {
    transform(time, timeUnit) {
        if (time == null || time === '') {
            return time;
        }
        switch (timeUnit) {
            case TimeUnit.HOUR:
                return DateTime.fromObject({ hour: +time }).toFormat('HH');
            case TimeUnit.MINUTE:
                return DateTime.fromObject({ minute: +time }).toFormat('mm');
            default:
                throw new Error('no such time unit');
        }
    }
};
TimeFormatterPipe.ɵfac = function TimeFormatterPipe_Factory(t) { return new (t || TimeFormatterPipe)(); };
TimeFormatterPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "timeFormatter", type: TimeFormatterPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TimeFormatterPipe, [{
        type: Pipe,
        args: [{
                name: 'timeFormatter'
            }]
    }], null, null); })();
export { TimeFormatterPipe };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1mb3JtYXR0ZXIucGlwZS5qcyIsInNvdXJjZXMiOlsibmc6L25neC1tYXRlcmlhbC10aW1lcGlja2VyL3NyYy9hcHAvbWF0ZXJpYWwtdGltZXBpY2tlci9waXBlcy90aW1lLWZvcm1hdHRlci5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLE9BQU8sQ0FBQzs7QUFLakMsSUFBYSxpQkFBaUIsR0FBOUIsTUFBYSxpQkFBaUI7QUFBRyxJQUU3QixTQUFTLENBQUMsSUFBcUIsRUFBRSxRQUFrQjtBQUFJLFFBQ25ELElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssRUFBRSxFQUFFO0FBQ3pDLFlBQVksT0FBTyxJQUFJLENBQUM7QUFDeEIsU0FBUztBQUNULFFBQVEsUUFBUSxRQUFRLEVBQUU7QUFDMUIsWUFBWSxLQUFLLFFBQVEsQ0FBQyxJQUFJO0FBQzlCLGdCQUFnQixPQUFPLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN6RSxZQUFZLEtBQUssUUFBUSxDQUFDLE1BQU07QUFDaEMsZ0JBQWdCLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksRUFBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzNFLFlBQVk7QUFDWixnQkFBZ0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3JELFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxDQUNDLENBQUE7QUFoQlksaUJBQWlCLDRCQUg3QixJQUFJLENBQUMsVUFDRixJQUFJLEVBQUUsZUFBZSxNQUN4QixDQUFDLElBQ1c7RUFBaUIsQ0FnQjdCOzs7Ozs7MEJBQ0Q7QUFBQyxTQWpCWSxpQkFBaUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRpbWVVbml0IH0gZnJvbSAnLi4vbW9kZWxzL3RpbWUtdW5pdC5lbnVtJztcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogJ3RpbWVGb3JtYXR0ZXInXG59KVxuZXhwb3J0IGNsYXNzIFRpbWVGb3JtYXR0ZXJQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICB0cmFuc2Zvcm0odGltZTogbnVtYmVyIHwgc3RyaW5nLCB0aW1lVW5pdDogVGltZVVuaXQpOiBhbnkge1xuICAgICAgICBpZiAodGltZSA9PSBudWxsIHx8IHRpbWUgPT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGltZTtcbiAgICAgICAgfVxuICAgICAgICBzd2l0Y2ggKHRpbWVVbml0KSB7XG4gICAgICAgICAgICBjYXNlIFRpbWVVbml0LkhPVVI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIERhdGVUaW1lLmZyb21PYmplY3Qoe2hvdXI6ICt0aW1lfSkudG9Gb3JtYXQoJ0hIJyk7XG4gICAgICAgICAgICBjYXNlIFRpbWVVbml0Lk1JTlVURTpcbiAgICAgICAgICAgICAgICByZXR1cm4gRGF0ZVRpbWUuZnJvbU9iamVjdCh7bWludXRlOiArdGltZX0pLnRvRm9ybWF0KCdtbScpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vIHN1Y2ggdGltZSB1bml0Jyk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==