import { EventEmitter } from '@angular/core';
import { DateTime } from 'luxon';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerHoursFace {
    selectedHour: ClockFaceTime;
    minTime: DateTime;
    maxTime: DateTime;
    format: number;
    hourChange: EventEmitter<ClockFaceTime>;
    hourSelected: EventEmitter<number>;
    hoursList: ClockFaceTime[];
    protected constructor(format: number);
    onTimeSelected(time: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerHoursFace, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NgxMaterialTimepickerHoursFace, never, never, { "selectedHour": "selectedHour"; "minTime": "minTime"; "maxTime": "maxTime"; "format": "format"; }, { "hourChange": "hourChange"; "hourSelected": "hourSelected"; }, never>;
}

//# sourceMappingURL=ngx-material-timepicker-hours-face.d.ts.map