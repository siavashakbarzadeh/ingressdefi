import { EventEmitter } from '@angular/core';
import { TimePeriod } from '../../models/time-period.enum';
import { TimeUnit } from '../../models/time-unit.enum';
import { ClockFaceTime } from '../../models/clock-face-time.interface';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMaterialTimepickerPeriodComponent {
    timePeriod: typeof TimePeriod;
    isPeriodAvailable: boolean;
    selectedPeriod: TimePeriod;
    format: number;
    activeTimeUnit: TimeUnit;
    hours: ClockFaceTime[];
    minutes: ClockFaceTime[];
    minTime: DateTime;
    maxTime: DateTime;
    selectedHour: number | string;
    meridiems: string[];
    periodChanged: EventEmitter<TimePeriod>;
    changePeriod(period: TimePeriod): void;
    animationDone(): void;
    private isSwitchPeriodAvailable;
    private getDisabledTimeByPeriod;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxMaterialTimepickerPeriodComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxMaterialTimepickerPeriodComponent, "ngx-material-timepicker-period", never, { "selectedPeriod": "selectedPeriod"; "format": "format"; "activeTimeUnit": "activeTimeUnit"; "hours": "hours"; "minutes": "minutes"; "minTime": "minTime"; "maxTime": "maxTime"; "selectedHour": "selectedHour"; "meridiems": "meridiems"; }, { "periodChanged": "periodChanged"; }, never, never>;
}

//# sourceMappingURL=ngx-material-timepicker-period.component.d.ts.map